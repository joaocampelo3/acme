		@Plan:name('carbon.super_sub_AsyncBronze')

		@Plan:description('ExecutionPlan for sub_AsyncBronze')

		@Import('org.wso2.throttle.processed.request.stream:1.0.0')
		define stream RequestStream (messageID string, appKey string, appTier string, subscriptionKey string, apiKey string, apiTier string, subscriptionTier string, resourceKey string, resourceTier string, userId string,  apiContext string, apiVersion string, appTenant string, apiTenant string, appId string, apiName string, propertiesMap string);

		@Export('org.wso2.throttle.globalThrottle.stream:1.0.0')
		define stream GlobalThrottleStream (throttleKey string, isThrottled bool, expiryTimeStamp long);

		FROM RequestStream
		SELECT messageID, (apiTenant == 'carbon.super' and subscriptionTier == 'AsyncBronze') AS isEligible, subscriptionKey AS throttleKey, propertiesMap
		INSERT INTO EligibilityStream;

				FROM EligibilityStream[isEligible==true]#throttler:timeLength(1 days, 0, 5000)
		select throttleKey, isThrottled, expiryTimeStamp group by throttleKey
		INSERT ALL EVENTS into ResultStream;
		
		from ResultStream#throttler:emitOnStateChange(throttleKey, isThrottled) select * insert into GlobalThrottleStream;
