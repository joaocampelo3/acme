{"version":3,"sources":["webpack:///./node_modules/@material-ui/icons/AddCircleOutline.js","webpack:///./node_modules/@material-ui/core/Grid/Grid.js","webpack:///./node_modules/@material-ui/core/utils/requirePropFactory.js","webpack:///./node_modules/@material-ui/core/utils/deprecatedPropType.js","webpack:///./source/src/app/components/Shared/ConfirmDialog.jsx","webpack:///./source/src/app/components/Apis/Details/Comments/CommentEdit.jsx","webpack:///./source/src/app/components/Apis/Details/Comments/CommentOptions.jsx","webpack:///./source/src/app/components/Apis/Details/Comments/CommentAdd.jsx","webpack:///./source/src/app/components/Apis/Details/Comments/Comment.jsx","webpack:///./source/src/app/components/Apis/Details/Comments/Comments.jsx"],"names":["_interopRequireDefault","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","styles","_objectWithoutProperties2","_extends2","_clsx","_withStyles","SPACINGS","GRID_SIZES","getOffset","val","div","arguments","length","undefined","parse","parseFloat","concat","String","replace","theme","root","container","boxSizing","display","flexWrap","width","item","margin","zeroMinWidth","minWidth","flexDirection","alignItems","alignContent","justifyContent","breakpoint","forEach","spacing","themeSpacing","padding","generateGutter","breakpoints","keys","reduce","accumulator","key","globalStyles","size","Math","round","flexBasis","flexGrow","maxWidth","up","generateGrid","Grid","forwardRef","props","ref","_props$alignContent","_props$alignItems","classes","classNameProp","className","_props$component","component","Component","_props$container","_props$direction","direction","_props$item","justify","_props$justifyContent","_props$lg","lg","_props$md","md","_props$sm","sm","_props$spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","xs","_props$zeroMinWidth","other","name","componentNameInError","requiredProp","propName","componentName","location","propFullName","propFullNameSafe","Error","validator","reason","componentNameSafe","ConfirmDialog","handleRequestClose","action","callback","this","Action","OK","render","title","message","labelCancel","labelOk","open","Dialog","role","onClose","dialogWrapper","DialogTitle","id","defaultMessage","DialogContent","DialogContentText","DialogActions","Button","onClick","CANCEL","color","variant","deleteConformButton","propTypes","PropTypes","string","isRequired","func","bool","withStyles","palette","getContrastText","background","paper","primary","main","CommentEdit","constructor","super","state","commentText","category","currentLength","inputChange","bind","handleCategoryChange","handleClickUpdateComment","handleClickCancel","filterCommentToUpdate","filterCommentToUpdateReply","componentDidMount","comment","setState","target","toggleShowEdit","commentsUpdate","allComments","event","commentToFilter","commentId","parentCommentId","apiId","intl","Api","API","commentToEdit","trim","updateComment","then","result","updatedComment","body","index","findIndex","replyIndex","replies","catch","error","console","response","Alert","formatMessage","FormControl","Select","onChange","MenuItem","TextField","autoFocus","multiline","textField","placeholder","inputProps","maxLength","custom","maxCommentLength","Typography","align","button","defaultProps","instanceOf","Array","shape","injectIntl","marginTop","contentWrapper","contentAreaWidth","paddingLeft","paddingTop","unig","marginRight","withTheme","CommentOptions","showAddComment","showEditComment","handleClickOpen","replyId","editIndex","displayDate","timestamp","localDate","Date","toLocaleDateString","day","month","year","toLocaleTimeString","hour","minute","user","AuthManager","getUser","username","canDelete","createdBy","isAdmin","verticalSpace","link","disable","aria-label","content","number","fontWeight","cursor","time","grey","commentIcon","whiteSpace","overflowWrap","CommentAdd","cancelCallback","handleClickAddComment","filterCommentToAddReply","handleShowReply","replyTo","addComment","addReply","newComment","cancelButton","commentAddWrapper","InputLabel","htmlFor","rows","disabled","commentAddButton","handleCancel","flexFlow","marginBottom","dayjs","extend","relativeTime","Comment","openDialog","deleteComment","handleClickDeleteComment","handleShowEdit","handleConfirmDialog","handleClose","filterRemainingComments","filterCommentToDelete","handleLoadMoreReplies","handleAddReply","handleDeleteReply","apiClient","onDeleteComment","commentIdOfCommentToDelete","parentCommentIdOfCommentToDelete","info","comments","count","list","getAllCommentReplies","replyList","replyCount","existingComment","find","entry","newRepliesList","newCount","newLimit","pagination","limit","process","replyCommentId","updatedRepliesList","filter","reply","newTotal","total","offset","isOverview","isCrossTenantUser","classNames","cleanBack","slice","map","contentWrapperOverview","Divider","divider","Icon","noWrap","commenterInfo","firstName","lastName","Tooltip","createdTime","fromNow","Box","ml","mb","fullName","loadMoreLink","onKeyDown","zvariant","wordBreak","paddingBottom","boxShadow","Comments","expanded","totalComments","showCommentAdd","handleExpandClick","handleLoadMoreComments","toggleCommentAdd","isCrossTenant","match","setCount","params","apiUuid","restApi","commentsLimit","getAllComments","commentList","newAllCommentList","newComments","acc","cur","temp","remainingComments","currentUser","tenantDomain","loggedInUserDomain","loggedInUser","includes","splitLoggedInUser","split","prevState","ApiContext","Consumer","api","titleSub","mt","startIcon","Paper","paperProgress","CircularProgress","InlineMessage","type","paddingRight","textDecoration","genericMessageWrapper","textTransform","withSettings"],"mappings":"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","file":"APIComments.398a89a8736f03318e5c.bundle.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'AddCircleOutline');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.styles = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n\nvar _withStyles = _interopRequireDefault(require(\"../styles/withStyles\"));\n\nvar _requirePropFactory = _interopRequireDefault(require(\"../utils/requirePropFactory\"));\n\nvar _deprecatedPropType = _interopRequireDefault(require(\"../utils/deprecatedPropType\"));\n\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    (0, _extends2.default)(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nvar styles = function styles(theme) {\n  return (0, _extends2.default)({\n    /* Styles applied to the root element. */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justifyContent=\"center\"`. */\n    'justify-content-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justifyContent=\"flex-end\"`. */\n    'justify-content-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justifyContent=\"space-between\"`. */\n    'justify-content-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justifyContent=\"space-around\"`. */\n    'justify-content-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justifyContent=\"space-evenly\"`. */\n    'justify-content-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\n\nexports.styles = styles;\nvar Grid = /*#__PURE__*/React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      justify = props.justify,\n      _props$justifyContent = props.justifyContent,\n      justifyContent = _props$justifyContent === void 0 ? 'flex-start' : _props$justifyContent,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = (0, _objectWithoutProperties2.default)(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"justifyContent\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n  var className = (0, _clsx.default)(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], (justify || justifyContent) !== 'flex-start' && classes[\"justify-content-xs-\".concat(String(justify || justifyContent))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return /*#__PURE__*/React.createElement(Component, (0, _extends2.default)({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: _propTypes.default.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: _propTypes.default.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: _propTypes.default.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: _propTypes.default.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: _propTypes.default\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: _propTypes.default.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: _propTypes.default.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: _propTypes.default.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   * @deprecated Use `justifyContent` instead, the prop was renamed\n   */\n  justify: (0, _deprecatedPropType.default)(_propTypes.default.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']), 'Use `justifyContent` instead, the prop was renamed.'),\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justifyContent: _propTypes.default.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: _propTypes.default.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: _propTypes.default.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: _propTypes.default.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: _propTypes.default.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: _propTypes.default.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: _propTypes.default.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: _propTypes.default.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: _propTypes.default.bool\n} : void 0;\nvar StyledGrid = (0, _withStyles.default)(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = (0, _requirePropFactory.default)('Grid');\n  StyledGrid.propTypes = (0, _extends2.default)({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justifyContent: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nvar _default = StyledGrid;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = requirePropFactory;\n\nfunction requirePropFactory(componentNameInError) {\n  if (process.env.NODE_ENV === 'production') {\n    return function () {\n      return null;\n    };\n  }\n\n  var requireProp = function requireProp(requiredProp) {\n    return function (props, propName, componentName, location, propFullName) {\n      var propFullNameSafe = propFullName || propName;\n\n      if (typeof props[propName] !== 'undefined' && !props[requiredProp]) {\n        return new Error(\"The prop `\".concat(propFullNameSafe, \"` of \") + \"`\".concat(componentNameInError, \"` must be used on `\").concat(requiredProp, \"`.\"));\n      }\n\n      return null;\n    };\n  };\n\n  return requireProp;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = deprecatedPropType;\n\nfunction deprecatedPropType(validator, reason) {\n  if (process.env.NODE_ENV === 'production') {\n    return function () {\n      return null;\n    };\n  }\n\n  return function (props, propName, componentName, location, propFullName) {\n    var componentNameSafe = componentName || '<<anonymous>>';\n    var propFullNameSafe = propFullName || propName;\n\n    if (typeof props[propName] !== 'undefined') {\n      return new Error(\"The \".concat(location, \" `\").concat(propFullNameSafe, \"` of \") + \"`\".concat(componentNameSafe, \"` is deprecated. \").concat(reason));\n    }\n\n    return null;\n  };\n}","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport {\n    Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle,\n} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = (theme) => ({\n    dialogWrapper: {\n        '& span, & h5, & label, & td, & li, & div, & p': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        },\n    },\n    deleteConformButton: {\n        '& span.MuiButton-label': {\n            color: theme.palette.getContrastText(theme.palette.primary.main),\n        },\n    },\n});\n\n/**\n * React component for handling confirmation dialog box\n * @class ConfirmDialog\n * @extends {React.Component}\n */\nclass ConfirmDialog extends React.Component {\n    /**\n     * If user confirms the action invoke the callback with true else false\n     * @param {String} action One of ConfirmDialog.Action actions\n     * @memberof ConfirmDialog\n     */\n    handleRequestClose(action) {\n        const { callback } = this.props;\n        if (action === ConfirmDialog.Action.OK) {\n            callback(true);\n        } else {\n            callback(false);\n        }\n    }\n\n    /**\n     * @inheritDoc\n     * @returns {React.Component} Confirmation box\n     * @memberof ConfirmDialog\n     */\n    render() {\n        const {\n            title, message, labelCancel, labelOk, open, classes,\n        } = this.props;\n\n        return (\n            <Dialog role='alertdialog' open={open} onClose={this.handleRequestClose} className={classes.dialogWrapper}>\n                <DialogTitle>{title || <FormattedMessage id='Shared.ConfirmDialog.please.confirm' defaultMessage='Please Confirm' />}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{message || <FormattedMessage id='Shared.ConfirmDialog.please.confirm.sure' defaultMessage='Are you sure?' />}</DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.handleRequestClose(ConfirmDialog.Action.CANCEL)} color='primary'>\n                        {labelCancel || <FormattedMessage id='Shared.ConfirmDialog.cancel' defaultMessage='Cancel' />}\n                    </Button>\n                    <Button\n                        onClick={() => this.handleRequestClose(ConfirmDialog.Action.OK)}\n                        color='primary'\n                        variant='contained'\n                        className={classes.deleteConformButton}\n                    >\n                        {labelOk || <FormattedMessage id='Shared.ConfirmDialog.ok' defaultMessage='OK' />}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nConfirmDialog.propTypes = {\n    title: PropTypes.string.isRequired,\n    message: PropTypes.string.isRequired,\n    labelCancel: PropTypes.string.isRequired,\n    labelOk: PropTypes.string.isRequired,\n    callback: PropTypes.func.isRequired,\n    open: PropTypes.bool.isRequired,\n};\nConfirmDialog.Action = {\n    OK: 'ok',\n    CANCEL: 'cancel',\n};\n\nexport default withStyles(styles)(ConfirmDialog);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { FormattedMessage, injectIntl, } from 'react-intl';\nimport { TextField, Button, Typography } from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Grid from '@material-ui/core/Grid';\nimport Alert from '../../../Shared/Alert';\nimport API from '../../../../data/api';\n\nconst styles = theme => ({\n    textField: {\n        marginTop: 0,\n        width: '87.5%',\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n        paddingLeft: theme.spacing(2),\n        paddingTop: theme.spacing.unig,\n        marginTop: theme.spacing(2),\n    },\n    category: {\n        width: '12%',\n        marginRight: '0.5%',\n    },\n});\n\n/**\n * Display a component to edit a comment\n * @class CommmentEdit\n * @extends {React.Component}\n */\nclass CommentEdit extends React.Component {\n    /**\n     * Creates an instance of CommentEdit\n     * @param {*} props properies passed by the parent element\n     * @memberof CommentEdit\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            commentText: '',\n            category: '',\n            currentLength: 0,\n        };\n        this.inputChange = this.inputChange.bind(this);\n        this.handleCategoryChange = this.handleCategoryChange.bind(this);\n        this.handleClickUpdateComment = this.handleClickUpdateComment.bind(this);\n        this.handleClickCancel = this.handleClickCancel.bind(this);\n        this.filterCommentToUpdate = this.filterCommentToUpdate.bind(this);\n        this.filterCommentToUpdateReply = this.filterCommentToUpdateReply.bind(this);\n    }\n\n    /**\n     * @memberof Comments\n     */\n    componentDidMount() {\n        const { comment } = this.props;\n        this.setState({\n            commentText: comment.commentText,\n            category: comment.category,\n            currentLength: comment.commentText.length,\n        });\n    }\n\n    /**\n     * Handles the comment text when input changes\n     * @param {Object} {target} target element\n     * @memberof CommentEdit\n     */\n    inputChange({ target }) {\n        this.setState({ commentText: target.value, currentLength: target.value.length });\n    }\n\n    /**\n     * Hides the component to edit a comment when cancelled\n     * @memberof CommentEdit\n     */\n    handleClickCancel() {\n        const { toggleShowEdit, commentsUpdate, allComments } = this.props;\n        toggleShowEdit();\n        commentsUpdate(allComments);\n    }\n\n    /**\n     * Handles category when the category is changed\n     * @param {any} event Drop down select event\n     * @memberof CommentEdit\n     */\n    handleCategoryChange(event) {\n        this.setState({ category: event.target.value });\n    }\n\n    /**\n     * Filters the comment to update\n     * @memberof CommentAdd\n     */\n    filterCommentToUpdate(commentToFilter) {\n        const { comment } = this.props;\n        return commentToFilter.commentId === comment.commentId;\n    }\n\n    /**\n     * Filters the comment to update\n     * @memberof CommentAdd\n     */\n    filterCommentToUpdateReply(commentToFilter) {\n        const { comment } = this.props;\n        return commentToFilter.commentId === comment.parentCommentId;\n    }\n\n    /**\n     * Handles updating a comment\n     * @memberof CommentEdit\n     */\n    handleClickUpdateComment() {\n        const {\n            apiId, comment, allComments, toggleShowEdit, commentsUpdate, intl,\n        } = this.props;\n        const { category, commentText } = this.state;\n        const Api = new API();\n        const commentToEdit = comment;\n        commentToEdit.commentText = commentText.trim();\n        commentToEdit.category = category;\n\n        // to check whether a string does not contain only whitehis spaces\n        if (comment.commentText.replace(/\\s/g, '').length) {\n            Api.updateComment(apiId, commentToEdit.commentId, commentToEdit)\n                .then((result) => {\n                    const updatedComment = result.body;\n                    if (commentToEdit.parentCommentId === undefined) {\n                        const index = allComments.findIndex(this.filterCommentToUpdate);\n                        allComments[index].category = updatedComment.category;\n                        allComments[index].commentText = updatedComment.commentText;\n                    } else {\n                        const index = allComments.findIndex(this.filterCommentToUpdateReply);\n                        const replyIndex = allComments[index].replies.findIndex(this.filterCommentToUpdate);\n                        allComments[index].replies[replyIndex] = updatedComment;\n                    }\n                    toggleShowEdit();\n                    commentsUpdate(allComments);\n                })\n                .catch((error) => {\n                    console.error(error);\n                    if (error.response) {\n                        Alert.error(error.response.body.message);\n                    } else {\n                        Alert.error(\n                            intl.formatMessage({\n                                defaultMessage: 'Something went wrong while adding the comment',\n                                id: 'Apis.Details.Comments.CommentEdit.something.went.wrong',\n                            }),\n                        );\n                    }\n                });\n        } else {\n            Alert.error(\n                intl.formatMessage({\n                    defaultMessage: 'You cannot enter a blank comment',\n                    id: 'Apis.Details.Comments.CommentEdit.blank.comment.error',\n                }),\n            );\n        }\n    }\n\n    /**\n     * Render method of the component\n     * @returns {React.Component} Comment html component\n     * @memberof CommentEdit\n     */\n    render() {\n        const { classes, theme, intl } = this.props;\n        const { category, commentText, currentLength } = this.state;\n        return (\n            <div>\n                <FormControl className={classes.category}>\n                    <Select value={category} onChange={this.handleCategoryChange}>\n                        <MenuItem value='General'>\n                            <FormattedMessage id='Apis.Details.Comments.CommentEdit.general' defaultMessage='General' />\n                        </MenuItem>\n                        <MenuItem value='Feature Request'>\n                            <FormattedMessage\n                                id='Apis.Details.Comments.CommentEdit.feature.request'\n                                defaultMessage='Feature Request'\n                            />\n                        </MenuItem>\n                        <MenuItem value='Bug Report'>\n                            <FormattedMessage\n                                id='Apis.Details.Comments.CommentEdit.bug.report'\n                                defaultMessage='Bug Report'\n                            />\n                        </MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id='multiline-static'\n                    autoFocus\n                    multiline\n                    className={classes.textField}\n                    margin='normal'\n                    placeholder={intl.formatMessage({\n                        defaultMessage: 'Write a comment',\n                        id: 'Apis.Details.Comments.CommentEdit.write.a.comment',\n                    })}\n                    inputProps={{ maxLength: theme.custom.maxCommentLength }}\n                    value={commentText}\n                    onChange={this.inputChange}\n                />\n                <Typography className={classes.commentText} align='right'>\n                    {currentLength + '/' + theme.custom.maxCommentLength}\n                </Typography>\n                <Grid container spacing={1}>\n                    <Grid item>\n                        <Button variant='contained' color='primary' onClick={() => this.handleClickUpdateComment()}>\n                            <FormattedMessage id='Apis.Details.Comments.CommentEdit.btn.save' defaultMessage='Save' />\n                        </Button>\n                    </Grid>\n                    <Grid item>\n                        <Button onClick={() => this.handleClickCancel()} className={classes.button}>\n                            <FormattedMessage\n                                id='Apis.Details.Comments.CommentEdit.btn.cancel'\n                                defaultMessage='Cancel'\n                            />\n                        </Button>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nCommentEdit.defaultProps = {\n    commentsUpdate: null,\n};\n\nCommentEdit.propTypes = {\n    classes: PropTypes.instanceOf(Object).isRequired,\n    apiId: PropTypes.string.isRequired,\n    allComments: PropTypes.instanceOf(Array).isRequired,\n    // todo make commentsUpdate required once comment edit feature is supported\n    commentsUpdate: PropTypes.func,\n    toggleShowEdit: PropTypes.func.isRequired,\n    comment: PropTypes.instanceOf(Object).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n\nexport default injectIntl(withStyles(styles, { withTheme: true })(CommentEdit));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport AuthManager from '../../../../data/AuthManager';\n\nconst styles = theme => ({\n    link: {\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n        '& span.MuiButton-label': {\n            color: theme.palette.primary.main,\n            fontWeight: '400',\n        },\n        cursor: 'pointer',\n    },\n    time: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        marginTop: theme.spacing(0.3),\n    },\n    verticalSpace: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    disable: {\n        color: theme.palette.grey[200],\n    },\n    commentIcon: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n    commentText: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        marginTop: theme.spacing.unig,\n        width: '100%',\n        whiteSpace: 'pre-wrap',\n        overflowWrap: 'break-word',\n    },\n    root: {\n        marginTop: theme.spacing(2.5),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n        paddingLeft: theme.spacing(2),\n        paddingTop: theme.spacing.unig,\n    },\n});\n\n/**\n * Component to display options of the comment\n * @class CommentOptions\n * @extends {React.Component}\n */\nclass CommentOptions extends React.Component {\n    /**\n     * Creates an instance of CommentAdd\n     * @param {*} props properies passed by the parent element\n     * @memberof CommentAdd\n     */\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.showAddComment = this.showAddComment.bind(this);\n        this.showEditComment = this.showEditComment.bind(this);\n        this.handleClickOpen = this.handleClickOpen.bind(this);\n    }\n\n    /**\n     * Shows the component to add a new comment\n     * @param {any} index Index of comment in the array\n     * @memberof CommentOptions\n     */\n    showAddComment(replyId) {\n        const { showAddComment } = this.props;\n        showAddComment(replyId);\n    }\n\n    /**\n     * Shows the component to edit a comment\n     * @param {any} index Index of comment in the array\n     * @memberof Comment\n     */\n    showEditComment(index) {\n        const { editIndex, showEditComment } = this.props;\n        if (editIndex === -1) {\n            showEditComment(index);\n        }\n    }\n\n    /**\n     * Shows the confimation dialog to delete a comment\n     * @param {Object} comment Comment that has to be deleted\n     * @memberof Comment\n     */\n    handleClickOpen(comment) {\n        const { editIndex, handleClickOpen } = this.props;\n        if (editIndex === -1) {\n            handleClickOpen(comment);\n        }\n    }\n\n    /**\n     * Returns the date and time in a particular format\n     * @param {any} timestamp Timestamp that has to be formatted\n     * @memberof CommentOptions\n     */\n    displayDate(timestamp) {\n        const localDate = new Date(timestamp);\n        const localDateString = localDate.toLocaleDateString(undefined, {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n        });\n        const localTimeString = localDate.toLocaleTimeString(undefined, {\n            hour: '2-digit',\n            minute: '2-digit',\n        });\n        return localDateString + ' ' + localTimeString;\n    }\n\n    /**\n     * Render method of the component\n     * @returns {React.Component} Comment html component\n     * @memberof CommentOptions\n     */\n    render() {\n        const {\n            classes, comment, editIndex, index, theme,\n        } = this.props;\n        const user = AuthManager.getUser();\n        const username = user && user.name;\n        const canDelete = (comment.createdBy === username) || user && user.isAdmin();\n        return (\n            <Grid container className={classes.verticalSpace} key={comment.id}>\n                {/* only the comment owner or admin can delete a comment */}\n                {canDelete && [\n                        <Grid item key='key-delete'>\n                            <Button\n                                size='small'\n                                className={editIndex === -1 ? classes.link : classes.disable}\n                                onClick={() => this.handleClickOpen(comment)}\n                                color='primary'\n                                aria-label={'Delete comment ' + comment.content}\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.Comments.CommentOptions.delete'\n                                    defaultMessage='Delete'\n                                />\n                            </Button>\n                        </Grid>,\n\n                    ]}\n\n                {comment.parentCommentId === null && AuthManager.getUser() && [\n                    <Grid item key='key-reply'>\n                        <Button\n                            size='small'\n                            className={classes.link}\n                            onClick={() => this.showAddComment(comment.id)}\n                            color='primary'\n                            aria-label={'Reply to comment ' + comment.content}\n                        >\n                            <FormattedMessage id='Apis.Details.Comments.CommentOptions.reply' defaultMessage='Reply' />\n                        </Button>\n                    </Grid>,\n                ]}\n\n                {/* only the comment owner can modify the comment from the exact entry point */}\n                {/* {comment.createdBy === AuthManager.getUser().name\n                    && comment.entryPoint === 'APIStore' && [\n                        <Grid item key='key-edit'>\n                            <Typography\n                                component='a'\n                                className={editIndex === -1 ? classes.link : classes.disable}\n                                onClick={() => this.showEditComment(index)}\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.Comments.CommentOptions.edit'\n                                    defaultMessage='Edit'\n                                />\n                            </Typography>\n                        </Grid>,\n                        <Grid item key='key-edit-verical-divider'>\n                            <VerticalDivider height={15} />\n                        </Grid>,\n                    ]} */}\n                {/* <Grid item className={classes.time}>\n                    <Typography component='a' variant='caption'>\n                        {this.displayDate(comment.createdTime)}\n                    </Typography>\n                </Grid>\n                {/* {editIndex === index\n                    ? null\n                    : [\n                        <Grid item key='key-category-vertical-divider'>\n                            <VerticalDivider height={15} />\n                        </Grid>,\n                        <Grid item className={classes.time} key='key-category'>\n                            <Typography component='a' variant='caption'>\n                                {comment.category}\n                            </Typography>\n                        </Grid>,\n                    ]}  */}\n            </Grid>\n        );\n    }\n}\n\nCommentOptions.defaultProps = {\n    showAddComment: null,\n};\n\nCommentOptions.propTypes = {\n    classes: PropTypes.instanceOf(Object).isRequired,\n    editIndex: PropTypes.number.isRequired,\n    index: PropTypes.number.isRequired,\n    comment: PropTypes.instanceOf(Object).isRequired,\n    handleClickOpen: PropTypes.func.isRequired,\n    showEditComment: PropTypes.func.isRequired,\n    showAddComment: PropTypes.func,\n};\n\nexport default withStyles(styles, { withTheme: true })(CommentOptions);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { TextField, Button, Typography, InputLabel } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Alert from '../../../Shared/Alert';\nimport API from '../../../../data/api';\n\nconst styles = theme => ({\n    commentIcon: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n    content: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n        paddingLeft: theme.spacing(2),\n        paddingTop: theme.spacing(1),\n        marginTop: theme.spacing(2),\n    },\n    textField: {\n        marginTop: 0,\n        marginRight: 5,\n        width: '100%',\n    },\n    commentAddWrapper: {\n        display: 'flex',\n        alignItems: 'top',\n        flexFlow: 'column',\n        '& label': {\n            marginBottom: theme.spacing(1),\n        },\n    },\n    commentAddButton: {\n        '& span.MuiButton-label': {\n            color: theme.palette.getContrastText(theme.palette.primary.main),\n        },\n    },\n});\n\n/**\n * Display a component to add a new comment\n * @class CommmentAdd\n * @extends {React.Component}\n */\nclass CommentAdd extends React.Component {\n    /**\n     * Creates an instance of CommentAdd\n     * @param {*} props properies passed by the parent element\n     * @memberof CommentAdd\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            content: '',\n            currentLength: 0,\n        };\n        this.inputChange = this.inputChange.bind(this);\n        this.handleClickAddComment = this.handleClickAddComment.bind(this);\n        this.handleClickCancel = this.handleClickCancel.bind(this);\n        // this.handleCategoryChange = this.handleCategoryChange.bind(this);\n        this.filterCommentToAddReply = this.filterCommentToAddReply.bind(this);\n    }\n\n    /**\n     * Handles the comment text when input changes\n     * @param {Object} {target} target element\n     * @memberof CommentAdd\n     */\n    inputChange({ target }) {\n        this.setState({ content: target.value, currentLength: target.value.length });\n    }\n\n    /**\n     * Hides the component to add a new comment when cancelled\n     * @memberof CommentAdd\n     */\n    handleClickCancel() {\n        this.setState({ content: '' });\n        const { handleShowReply } = this.props;\n        handleShowReply(-1);\n    }\n\n    /**\n     * Filters the comment to add the reply\n     * @memberof CommentAdd\n     */\n    filterCommentToAddReply(commentToFilter) {\n        const { replyTo } = this.props;\n        return commentToFilter.id === replyTo;\n    }\n\n    /**\n     * Handles adding a new comment\n     * @memberof CommentAdd\n     */\n    handleClickAddComment() {\n        const {\n            apiId, intl, replyTo, handleShowReply, addComment, addReply,\n        } = this.props;\n        const { content } = this.state;\n        const Api = new API();\n        const comment = {\n            content: content.trim(), category: \"general\"\n        };\n\n        // to check whether a string does not contain only white spaces\n        if (comment.content.replace(/\\s/g, '').length) {\n            Api.addComment(apiId, comment, replyTo)\n                .then((newComment) => {\n                    this.setState({ content: '' });\n                    if (replyTo === null) {\n                        if (addComment) {\n                            addComment(newComment.body);\n                        }\n                    } else if (addReply) {\n                        addReply(newComment.body);\n                    }\n                })\n                .catch((error) => {\n                    console.error(error);\n                    if (error.response && error.response.body && error.response.body.message) {\n                        Alert.error(error.response.body.message);\n                    } else {\n                        Alert.error(intl.formatMessage({\n                            defaultMessage: 'Something went wrong while adding the comment',\n                            id: 'Apis.Details.Comments.CommentAdd.something.went.wrong',\n                        }));\n                    }\n                });\n        } else {\n            Alert.error(intl.formatMessage({\n                defaultMessage: 'You cannot enter a blank comment',\n                id: 'Apis.Details.Comments.CommentAdd.error.blank.comment',\n            }));\n        }\n        this.setState({ currentLength: 0 });\n        if (replyTo !== null) {\n            handleShowReply();\n        }\n    }\n\n    handleCancel = () => {\n        const { cancelCallback } = this.props;\n        if (cancelCallback) {\n            cancelCallback();\n        } else {\n            this.handleClickCancel(-1);\n        }\n    };\n    /**\n     * Render method of the component\n     * @returns {React.Component} Comment html component\n     * @memberof CommentAdd\n     */\n    render() {\n        const {\n            classes, cancelButton, theme, intl,\n        } = this.props;\n        const { content, currentLength } = this.state;\n        return (\n            <Grid container spacing={1} className={classes.contentWrapper}>\n                <Grid item xs zeroMinWidth>\n                    <div className={classes.commentAddWrapper}>\n                        <InputLabel htmlFor=\"standard-multiline-flexible\">\n                            <FormattedMessage\n                                id='Apis.Details.Comments.CommentAdd.write.comment.label'\n                                defaultMessage='Write a comment'\n                            />\n                        </InputLabel>\n                        <TextField\n                            id='standard-multiline-flexible'\n                            autoFocus\n                            multiline\n                            rows='4'\n                            className={classes.textField}\n                            margin='normal'\n                            placeholder={intl.formatMessage({\n                                defaultMessage: 'Write a comment',\n                                id: 'Apis.Details.Comments.CommentAdd.write.comment.help',\n                            })}\n                            inputProps={{ maxLength: theme.custom.maxCommentLength }}\n                            value={content}\n                            onChange={this.inputChange}\n                            variant='outlined'\n                        />\n                        <Typography className={classes.content} align='right'>\n                            {currentLength + '/' + theme.custom.maxCommentLength}\n                        </Typography>\n                    </div>\n                    <Grid container spacing={1}>\n                        <Grid item>\n                            <Button\n                                variant='contained'\n                                color='primary'\n                                disabled={currentLength === 0}\n                                onClick={() => this.handleClickAddComment()}\n                                className={classes.commentAddButton}\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.Comments.CommentAdd.btn.add.comment'\n                                    defaultMessage='Comment'\n                                />\n                            </Button>\n                        </Grid>\n                        {cancelButton && (\n                            <Grid item>\n                                <Button onClick={this.handleCancel} className={classes.button}>\n                                    <FormattedMessage\n                                        id='Apis.Details.Comments.CommentAdd.btn.cancel'\n                                        defaultMessage='Cancel'\n                                    />\n                                </Button>\n                            </Grid>\n                        )}\n                    </Grid>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nCommentAdd.defaultProps = {\n    replyTo: null,\n    handleShowReply: null,\n    commentsUpdate: null,\n    cancelCallback: null,\n};\n\nCommentAdd.propTypes = {\n    classes: PropTypes.instanceOf(Object).isRequired,\n    cancelButton: PropTypes.bool.isRequired,\n    apiId: PropTypes.string.isRequired,\n    replyTo: PropTypes.string,\n    handleShowReply: PropTypes.func,\n    commentsUpdate: PropTypes.func,\n    allComments: PropTypes.instanceOf(Array).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n    cancelCallback: PropTypes.func,\n};\n\nexport default injectIntl(withStyles(styles, { withTheme: true })(CommentAdd));\n","/* eslint-disable react/prop-types */\n/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { Typography, Tooltip } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport Box from '@material-ui/core/Box';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\ndayjs.extend(relativeTime);\n\nimport classNames from 'classnames';\nimport Alert from 'AppComponents/Shared/Alert';\nimport ConfirmDialog from 'AppComponents/Shared/ConfirmDialog';\nimport API from 'AppData/api';\nimport CommentEdit from './CommentEdit';\nimport CommentOptions from './CommentOptions';\nimport CommentAdd from './CommentAdd';\n\nconst styles = (theme) => ({\n    link: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        cursor: 'pointer',\n    },\n    commentIcon: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n    commentText: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        marginTop: 0,\n        width: '99%',\n        whiteSpace: 'pre-wrap',\n        overflowWrap: 'break-word',\n        wordBreak: 'break-all',\n    },\n    root: {\n        marginTop: theme.spacing(1),\n    },\n    contentWrapper: {\n        paddingLeft: theme.spacing(2),\n        paddingTop: theme.spacing(1),\n    },\n    contentWrapperOverview: {\n        background: 'transparent',\n        width: '100%',\n    },\n    divider: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n        width: '60%',\n    },\n    paper: {\n        margin: 0,\n        marginTop: theme.spacing(1),\n        marginRight: theme.spacing(3),\n        paddingBottom: theme.spacing(3),\n    },\n    cleanBack: {\n        background: 'transparent',\n        width: '100%',\n        boxShadow: 'none',\n    },\n});\n\n/**\n * Display a particular comment and details\n * @class Comment\n * @extends {React.Component}\n */\nclass Comment extends React.Component {\n    /**\n     * Creates an instance of Comment\n     * @param {*} props properies passed by the parent element\n     * @memberof Comment\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            openDialog: false,\n            replyId: -1,\n            editIndex: -1,\n            deleteComment: null,\n        };\n        this.handleClickDeleteComment = this.handleClickDeleteComment.bind(this);\n        this.handleShowEdit = this.handleShowEdit.bind(this);\n        this.handleShowReply = this.handleShowReply.bind(this);\n        this.handleClickOpen = this.handleClickOpen.bind(this);\n        this.showAddComment = this.showAddComment.bind(this);\n        this.showEditComment = this.showEditComment.bind(this);\n        this.handleConfirmDialog = this.handleConfirmDialog.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.filterRemainingComments = this.filterRemainingComments.bind(this);\n        this.filterCommentToDelete = this.filterCommentToDelete.bind(this);\n        this.handleLoadMoreReplies = this.handleLoadMoreReplies.bind(this);\n        this.handleAddReply = this.handleAddReply.bind(this);\n        this.handleDeleteReply = this.handleDeleteReply.bind(this);\n    }\n\n    /**\n     * Add two numbers.\n     * @param {string} commentToFilter comment to filter.\n     * @returns {boolean} filtering needed or not.\n     */\n    filterRemainingComments(commentToFilter) {\n        const { deleteComment } = this.state;\n        return commentToFilter.id !== deleteComment.id;\n    }\n\n    /**\n     * Add two numbers.\n     * @param {JSON} commentToFilter comment to filter.\n     * @returns {string} id of the comment.\n     */\n    filterCommentToDelete(commentToFilter) {\n        const { deleteComment } = this.state;\n        return commentToFilter.id === deleteComment.parentCommentId;\n    }\n\n    /**\n     * Shows the component to add a new comment\n     * @param {any} id of comment\n     * @memberof Comment\n     */\n    showAddComment(id) {\n        this.setState({ replyId: id });\n    }\n\n    /**\n     * Shows the component to edit a comment\n     * @param {any} index Index of comment in the array\n     * @memberof Comment\n     */\n    showEditComment(index) {\n        const { editIndex } = this.state;\n        if (editIndex === -1) {\n            this.setState({ editIndex: index });\n        }\n    }\n\n    /**\n     * Hides the component to edit a comment\n     * @param {any} index Index of comment in the array\n     * @memberof Comment\n     */\n    handleShowEdit() {\n        this.setState({ editIndex: -1 });\n    }\n\n    /**\n     * Hides the component to add a new comment\n     * @param {any} index Index of comment in the array\n     * @memberof Comment\n     */\n    handleShowReply() {\n        this.setState({ replyId: -1 });\n    }\n\n    /**\n     * Shows the confimation dialog to delete a comment\n     * @param {Object} comment Comment that has to be deleted\n     * @memberof Comment\n     */\n    handleClickOpen(comment) {\n        const { editIndex } = this.state;\n        if (editIndex === -1) {\n            this.setState({ deleteComment: comment, openDialog: true });\n        }\n    }\n\n    /**\n     * Hides the confimation dialog to delete a comment\n     * @memberof Comment\n     */\n    handleClose() {\n        this.setState({ openDialog: false });\n    }\n\n    /**\n     * Handles the Confirm Dialog\n     * @param {*} message properies passed by the Confirm Dialog\n     * @memberof Comment\n     */\n    handleConfirmDialog(message) {\n        if (message) {\n            this.handleClickDeleteComment();\n        } else {\n            this.handleClose();\n        }\n    }\n\n    /**\n     * Handles deleting a comment\n     * @memberof Comment\n     */\n    handleClickDeleteComment() {\n        const apiClient = new API();\n\n        const { deleteComment } = this.state;\n        const {\n            apiId, intl, onDeleteComment,\n        } = this.props;\n        const commentIdOfCommentToDelete = deleteComment.id;\n        const parentCommentIdOfCommentToDelete = deleteComment.parentCommentId;\n        this.handleClose();\n\n        apiClient\n            .deleteComment(apiId, commentIdOfCommentToDelete)\n            .then(() => {\n                if (parentCommentIdOfCommentToDelete === null) {\n                    if (onDeleteComment) {\n                        onDeleteComment(commentIdOfCommentToDelete);\n                    }\n                    Alert.info(intl.formatMessage({\n                        defaultMessage: 'Comment has been successfully deleted',\n                        id: 'Apis.Details.Comments.Comment.comment.deleted',\n                    }));\n                } else {\n                    this.handleDeleteReply(parentCommentIdOfCommentToDelete, commentIdOfCommentToDelete);\n                    Alert.info(intl.formatMessage({\n                        defaultMessage: 'Reply comment has been successfully deleted',\n                        id: 'Apis.Details.Comments.Comment.reply.comment.deleted',\n                    }));\n                }\n            })\n            .catch((error) => {\n                console.error(error);\n                if (error.response) {\n                    Alert.error(error.response.body.message);\n                }\n                else {\n                    Alert.error(\n                        intl.formatMessage({\n                            defaultMessage: 'Something went wrong while deleting comment',\n                            id: 'Apis.Details.Comments.Comment.something.went.wrong',\n                        })\n                        + ' - '\n                        + commentIdOfCommentToDelete,\n                    );\n                }\n            });\n    }\n\n    /**\n     * Handles loading more comment replies\n     * @param {Object} comment comment for which replies should be loaded\n     * @memberof Comments\n     */\n    handleLoadMoreReplies(comment) {\n        const { apiId, comments, updateComment } = this.props;\n        const { id, replies: { count, list } } = comment;\n        const restApi = new API();\n\n        restApi\n            .getAllCommentReplies(apiId, id, 3, count)\n            .then((result) => {\n                if (result.body) {\n                    const { list: replyList, count: replyCount } = result.body;\n                    const existingComment = comments.find((entry) => entry.id === id);\n\n                    const newRepliesList = list.concat(replyList);\n                    const newCount = count + replyCount;\n                    const newLimit = newCount <= 3 ? 3 : newCount;\n\n                    const updatedComment = {\n                        ...existingComment,\n                        replies: {\n                            count: newCount,\n                            list: newRepliesList,\n                            pagination: { ...existingComment.replies.pagination, limit: newLimit },\n                        },\n                    };\n                    if (updateComment) {\n                        updateComment(updatedComment);\n                    }\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            });\n    }\n\n    /**\n     * Delete reply\n     * @param {string} parentCommentId parent comment of reply\n     * @param {string} replyCommentId deleted reply comment\n     * @memberof Comments\n     */\n    handleDeleteReply(parentCommentId, replyCommentId) {\n        const { comments, updateComment, apiId } = this.props;\n        const existingComment = comments.find((item) => item.id === parentCommentId);\n        const { replies } = existingComment;\n        // updated values\n        const updatedRepliesList = replies.list.filter((reply) => reply.id !== replyCommentId);\n        const newTotal = replies.pagination.total - 1;\n        const newLimit = replies.pagination.limit > newTotal ? newTotal : replies.pagination.limit;\n        const newCount = replies.count - 1;\n\n        if (newTotal > newCount) {\n            const restApi = new API();\n            restApi\n                .getAllCommentReplies(apiId, parentCommentId, 1, newLimit - 1)\n                .then((result) => {\n                    if (result.body) {\n                        const updatedComment = {\n                            ...existingComment,\n                            replies: {\n                                ...replies,\n                                list: [...updatedRepliesList, ...result.body.list],\n                                pagination: {\n                                    ...replies.pagination,\n                                    total: newTotal,\n                                },\n                            },\n                        };\n                        if (updateComment) {\n                            updateComment(updatedComment);\n                        }\n                    }\n                })\n                .catch((error) => {\n                    if (process.env.NODE_ENV !== 'production') {\n                        console.log(error);\n                    }\n                });\n        } else {\n            const updatedComment = {\n                ...existingComment,\n                replies: {\n                    ...replies,\n                    count: newCount,\n                    list: updatedRepliesList,\n                    pagination: {\n                        ...replies.pagination,\n                        limit: newLimit,\n                        total: newTotal,\n                    },\n                },\n            };\n            if (updateComment) {\n                updateComment(updatedComment);\n            }\n        }\n    }\n\n    /**\n     * Add new reply\n     * @param {Object} comment added reply comment\n     * @memberof Comments\n     */\n    handleAddReply(comment) {\n        const { comments, updateComment } = this.props;\n        const { parentCommentId } = comment;\n        const existingComment = comments.find((item) => item.id === parentCommentId);\n        const { replies } = existingComment;\n        const newCount = (replies.count || 0) + 1;\n        const newLimit = newCount <= 3 ? 3 : newCount;\n        const updatedComment = {\n            ...existingComment,\n            replies: {\n                ...replies,\n                count: newCount,\n                list: [...replies.list, comment],\n                pagination: {\n                    ...replies.pagination,\n                    limit: newLimit,\n                    offset: replies.pagination.offset || 0,\n                    total: replies.pagination.total + 1,\n                },\n            },\n        };\n        if (updateComment) {\n            updateComment(updatedComment);\n        }\n    }\n\n    /**\n     * Render method of the component\n     * @returns {React.Component} Comment html component\n     * @memberof Comment\n     */\n    render() {\n        const {\n            classes, comments, apiId, allComments, isOverview, isCrossTenantUser,\n        } = this.props;\n\n        const { editIndex, openDialog, replyId } = this.state;\n        return (\n            <>\n                <div className={classNames({ [classes.paper]: !isOverview && comments.length > 0 }, { [classes.cleanBack]: isOverview })}>\n                    {comments\n                        && comments\n                            .slice(0)\n                            .map((comment, index) => (\n                                <div\n                                    // eslint-disable-next-line react/no-array-index-key\n                                    key={comment.id + '-' + index}\n                                    className={classNames(\n                                        { [classes.contentWrapper]: !isOverview },\n                                        { [classes.contentWrapperOverview]: isOverview },\n                                    )}\n                                >\n                                    {index !== 0 && <Divider className={classes.divider} />}\n                                    <Grid md={8} container spacing={1} className={classNames({ [classes.root]: !isOverview })}>\n                                        <Grid item>\n                                            <Icon className={classes.commentIcon}>account_circle</Icon>\n                                        </Grid>\n                                        <Grid item xs zeroMinWidth>\n                                            <Typography noWrap className={classes.commentText}>\n                                                {(comment.commenterInfo && comment.commenterInfo.firstName) ?\n                                                    (comment.commenterInfo.firstName + comment.commenterInfo.lastName) :\n                                                    comment.createdBy}\n                                            </Typography>\n                                            <Tooltip title={comment.createdTime} aria-label={comment.createdTime}>\n                                                <Typography noWrap className={classes.commentText} variant='caption'>\n                                                    {dayjs(comment.createdTime).fromNow()}\n                                                </Typography>\n                                            </Tooltip>\n\n                                            <Typography className={classes.commentText}>{comment.content}</Typography>\n\n                                            {!isCrossTenantUser && (\n                                                <CommentOptions\n                                                    comment={comment}\n                                                    editIndex={editIndex}\n                                                    index={index}\n                                                    showAddComment={this.showAddComment}\n                                                    handleClickOpen={this.handleClickOpen}\n                                                    showEditComment={this.showEditComment}\n                                                />\n                                            )}\n\n                                            {comment.id === replyId && (\n                                                <Box ml={6} mb={2}>\n                                                    <CommentAdd\n                                                        apiId={apiId}\n                                                        replyTo={comment.id}\n                                                        allComments={allComments}\n                                                        handleShowReply={this.handleShowReply}\n                                                        cancelButton\n                                                        addReply={this.handleAddReply}\n                                                    />\n                                                </Box>\n                                            )}\n\n                                            {comment.replies && comment.replies.list.map((reply, index) => (\n                                                <>\n                                                    <Box ml={8}>\n                                                        {index !== 0 && <Divider className={classes.divider} />}\n                                                        <Grid container spacing={1} className={classes.root}>\n                                                            <Grid item>\n                                                                <Icon className={classes.commentIcon}>account_circle</Icon>\n                                                            </Grid>\n                                                            <Grid item xs zeroMinWidth>\n                                                                <Typography noWrap className={classes.commentText}>\n                                                                    {(reply.commenterInfo && reply.commenterInfo.fullName)\n                                                                        ? reply.commenterInfo.fullName : reply.createdBy}\n                                                                </Typography>\n                                                                <Tooltip title={comment.createdTime} aria-label={comment.createdTime}>\n                                                                    <Typography noWrap className={classes.commentText} variant='caption'>\n                                                                        {dayjs(reply.createdTime).fromNow()}\n                                                                    </Typography>\n                                                                </Tooltip>\n\n                                                                {index !== editIndex && (\n                                                                    <Typography className={classes.commentText}>\n                                                                        {reply.content}</Typography>\n                                                                )}\n\n                                                                {index === editIndex && (\n                                                                    <CommentEdit\n                                                                        apiId={apiId}\n                                                                        allComments={reply}\n                                                                        comment={reply}\n                                                                        toggleShowEdit={this.handleShowEdit}\n                                                                    />\n                                                                )}\n\n                                                                {!isCrossTenantUser && (\n                                                                    <CommentOptions\n                                                                        comment={reply}\n                                                                        editIndex={editIndex}\n                                                                        index={index}\n                                                                        showAddComment={this.showAddComment}\n                                                                        handleClickOpen={this.handleClickOpen}\n                                                                        showEditComment={this.showEditComment}\n                                                                    />\n                                                                )}\n                                                            </Grid>\n                                                        </Grid>\n                                                    </Box>\n                                                </>\n                                            ))}\n                                            {comment.replies && comment.replies.count < comment.replies.pagination.total\n                                                && (\n                                                    <div className={classes.contentWrapper}>\n                                                        <Grid container spacing={4} className={classes.root}>\n                                                            <Grid item>\n                                                                <Typography className={classes.verticalSpace} variant='body1'>\n                                                                    <a\n                                                                        className={classes.link + ' ' + classes.loadMoreLink}\n                                                                        onClick={() => this.handleLoadMoreReplies(comment)}\n                                                                        onKeyDown={() => this.handleLoadMoreReplies(comment)}\n                                                                    >\n                                                                        <FormattedMessage\n                                                                            id='Apis.Details.Comments.Comment.load.more.replies'\n                                                                            defaultMessage='Show More Replies'\n                                                                        />\n                                                                    </a>\n                                                                </Typography>\n                                                            </Grid>\n                                                            <Grid item>\n                                                                <Typography className={classes.verticalSpace} zvariant='body1'>\n                                                                    {'(' + (comment.replies.count) + ' of '\n                                                                        + comment.replies.pagination.total + ')'}\n                                                                </Typography>\n                                                            </Grid>\n                                                        </Grid>\n                                                    </div>\n                                                )}\n                                        </Grid>\n                                    </Grid>\n                                </div>\n                            ))}\n                </div>\n                <ConfirmDialog\n                    key='key-dialog'\n                    labelCancel={<FormattedMessage\n                        id='Apis.Details.Comments.Comment.delete.dialog.label.cancel'\n                        defaultMessage='Cancel'\n                    />}\n                    title={<FormattedMessage\n                        id='Apis.Details.Comments.Comment.delete.dialog.title'\n                        defaultMessage='Confirm Delete'\n                    />}\n                    message={<FormattedMessage\n                        id='Apis.Details.Comments.Comment.delete.dialog.message'\n                        defaultMessage='Are you sure you want to delete this comment?'\n                    />}\n                    labelOk={<FormattedMessage\n                        id='Apis.Details.Comments.Comment.delete.dialog.label.ok'\n                        defaultMessage='Yes'\n                    />}\n                    callback={this.handleConfirmDialog}\n                    open={openDialog}\n                />\n            </>\n        );\n    }\n}\nComment.defaultProps = {\n    isOverview: false,\n};\nComment.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    apiId: PropTypes.string.isRequired,\n    allComments: PropTypes.instanceOf(Array).isRequired,\n    comments: PropTypes.instanceOf(Array).isRequired,\n    isOverview: PropTypes.bool,\n    isCrossTenantUser: PropTypes.bool.isRequired,\n    updateComment: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(Comment));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport { Typography } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid/Grid';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport classNames from 'classnames';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport withSettings from 'AppComponents/Shared/withSettingsContext';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport Comment from './Comment';\nimport CommentAdd from './CommentAdd';\nimport API from '../../../../data/api';\nimport { ApiContext } from '../ApiContext';\nimport AuthManager from '../../../../data/AuthManager';\n\nconst styles = (theme) => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n    paper: {\n        marginRight: theme.spacing(3),\n        paddingBottom: theme.spacing(3),\n        paddingRight: theme.spacing(2),\n        '& span, & h5, & label, & td, & li, & div, & input': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        },\n    },\n    contentWrapper: {\n        paddingLeft: theme.spacing(3),\n        marginTop: theme.spacing(1),\n    },\n    contentWrapperOverview: {\n        padding: 0,\n        width: '100%',\n        boxShadow: 'none',\n    },\n    titleSub: {\n        cursor: 'pointer',\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n    link: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        cursor: 'pointer',\n    },\n    verticalSpace: {\n        marginTop: theme.spacing(0.2),\n    },\n    loadMoreLink: {\n        textDecoration: 'none',\n    },\n    genericMessageWrapper: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n        marginRight: theme.spacing(3),\n    },\n    paperProgress: {\n        padding: theme.spacing(3),\n        marginTop: theme.spacing(2),\n    },\n    button: {\n        textTransform: 'capitalize',\n    },\n});\n\n/**\n * Display a comment list\n * @class Comments\n * @extends {React.Component}\n */\nclass Comments extends Component {\n    static contextType = ApiContext;\n\n    /**\n     * Creates an instance of Comments\n     * @param {*} props properies passed by the parent element\n     * @memberof Comments\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            expanded: true,\n            allComments: null,\n            comments: [],\n            totalComments: 0,\n            apiId: null,\n            showCommentAdd: false,\n        };\n        this.handleExpandClick = this.handleExpandClick.bind(this);\n        this.handleLoadMoreComments = this.handleLoadMoreComments.bind(this);\n        this.toggleCommentAdd = this.toggleCommentAdd.bind(this);\n        this.addComment = this.addComment.bind(this);\n        this.updateComment = this.updateComment.bind(this);\n        this.onDeleteComment = this.onDeleteComment.bind(this);\n        this.isCrossTenant = this.isCrossTenant.bind(this);\n    }\n\n    /**\n     * Gets all the comments for a particular API, when component mounts\n     * @memberof Comments\n     */\n    componentDidMount() {\n        let {\n            apiId, theme, match, intl, isOverview, setCount,\n        } = this.props;\n        if (match) apiId = match.params.apiUuid;\n        this.setState({ apiId });\n\n        const restApi = new API();\n        const limit = theme.custom.commentsLimit;\n        const offset = 0;\n\n        restApi\n            .getAllComments(apiId, limit, offset)\n            .then((result) => {\n                let commentList = result.body.list;\n                if (isOverview) {\n                    setCount(commentList.length);\n                    if (commentList.length > 2) {\n                        commentList = commentList.slice(commentList.length - 3, commentList.length);\n                    }\n                }\n                this.setState({\n                    allComments: commentList,\n                    comments: commentList,\n                    totalComments: result.body.pagination.total,\n                });\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            });\n    }\n\n    /**\n     * Handles loading the previous comments\n     * @memberof Comments\n     */\n    handleLoadMoreComments() {\n        const { allComments, apiId, comments } = this.state;\n        const { theme } = this.props;\n        const restApi = new API();\n        const limit = theme.custom.commentsLimit;\n        const offset = comments.length;\n\n        restApi\n            .getAllComments(apiId, limit, offset)\n            .then((result) => {\n                const newAllCommentList = allComments.concat(result.body.list);\n                this.setState({ allComments: newAllCommentList, comments: newAllCommentList });\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            });\n    }\n\n    /**\n     * Handles expanding the comment section\n     * @memberof Comments\n     */\n    handleExpandClick() {\n        const { expanded } = this.state;\n        this.setState({ expanded: !expanded });\n    }\n\n    /**\n     * Add comment to the comment list\n     * @param {any} comment added comment\n     * @memberof Comments\n     */\n    addComment(comment) {\n        const { totalComments, allComments } = this.state;\n        const { theme: { custom: { commentsLimit } } } = this.props;\n        const newTotal = totalComments + 1;\n\n        this.setState({\n            allComments: [comment, ...allComments],\n            totalComments: newTotal,\n            comments: [comment, ...allComments],\n        });\n    }\n\n    /**\n     * Update a specific comment in the comment list\n     * @param {any} comment updated comment\n     * @memberof Comments\n     */\n    updateComment(comment) {\n        const { comments } = this.state;\n\n        const newComments = comments.reduce((acc, cur) => {\n            let temp = cur;\n            if (cur.id === comment.id) {\n                temp = comment;\n            }\n            return [...acc, temp];\n        }, []);\n        this.setState({\n            allComments: newComments,\n            comments: newComments,\n        });\n    }\n\n    /**\n     * Delete a comment\n     * @param {string} commentIdOfCommentToDelete id of deleted commetn\n     * @memberof Comments\n     */\n    onDeleteComment(commentIdOfCommentToDelete) {\n        const {\n            apiId, comments, totalComments,\n        } = this.state;\n\n        const remainingComments = comments.filter((item) => item.id !== commentIdOfCommentToDelete);\n        const newTotal = totalComments - 1;\n\n        if (newTotal > remainingComments.length) {\n            const restApi = new API();\n\n            restApi\n                .getAllComments(apiId, 1, remainingComments.length)\n                .then((result) => {\n                    if (result.body) {\n                        this.setState({\n                            totalComments: newTotal,\n                            comments: [...remainingComments, ...result.body.list],\n                            allComments: [...remainingComments, ...result.body.list],\n                        });\n                    }\n                })\n                .catch((error) => {\n                    if (process.env.NODE_ENV !== 'production') {\n                        console.log(error);\n                    }\n                });\n        } else {\n            this.setState({\n                totalComments: newTotal,\n                comments: remainingComments,\n                allComments: remainingComments,\n            });\n        }\n    }\n\n    /**\n     * Method to compare the tenant domains\n     * @param {*} advertiseInfo advertiseInfo object for the API\n     * @param {*} currentUser current logged in user\n     * @returns {boolean} true or false\n     */\n    isCrossTenant(currentUser, tenantDomain) {\n        if (!tenantDomain) {\n            return false;\n        }\n        let loggedInUserDomain = null;\n        const loggedInUser = currentUser.name;\n\n        if (loggedInUser.includes('@')) {\n            const splitLoggedInUser = loggedInUser.split('@');\n            loggedInUserDomain = splitLoggedInUser[splitLoggedInUser.length - 1];\n        } else {\n            loggedInUserDomain = 'carbon.super';\n        }\n\n        if (tenantDomain !== loggedInUserDomain) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    toggleCommentAdd() {\n        this.setState((prevState) => ({ showCommentAdd: !prevState.showCommentAdd }));\n    }\n\n    /**\n     * Render method of the component\n     * @returns {React.Component} Comment html component\n     * @memberof Comments\n     */\n    render() {\n        const { classes, isOverview, tenantDomain } = this.props;\n        const {\n            comments, allComments, totalComments, showCommentAdd,\n        } = this.state;\n        const isCrossTenantUser = AuthManager.getUser() && this.isCrossTenant(AuthManager.getUser(), tenantDomain);\n        return (\n            <ApiContext.Consumer>\n                {({ api }) => (\n                    <div\n                        className={classNames(\n                            { [classes.contentWrapper]: !isOverview },\n                            { [classes.contentWrapperOverview]: isOverview },\n                        )}\n                    >\n                        {!isOverview && (\n                            <div className={classes.root}>\n                                <Typography variant='h4' component='h2' className={classes.titleSub}>\n                                    {totalComments + (' ')}\n                                    <FormattedMessage id='Apis.Details.Comments.title' defaultMessage='Comments' />\n                                </Typography>\n                            </div>\n                        )}\n\n                        {!isCrossTenantUser && AuthManager.getUser() &&(\n                            <Box mt={2} ml={1}>\n                                {!showCommentAdd && (\n                                    <Button\n                                        color='primary'\n                                        size='small'\n                                        className={classes.button}\n                                        startIcon={<AddCircleOutlineIcon />}\n                                        onClick={this.toggleCommentAdd}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.Comments.write.a.new.comment'\n                                            defaultMessage='Write a New Comment'\n                                        />\n                                    </Button>\n                                )}\n                                {showCommentAdd && (\n                                    <CommentAdd\n                                        apiId={api.id}\n                                        commentsUpdate={this.addComment}\n                                        addComment={this.addComment}\n                                        allComments={allComments}\n                                        replyTo={null}\n                                        cancelCallback={this.toggleCommentAdd}\n                                        cancelButton\n                                    />\n                                )}\n                            </Box>\n                        )}\n                        {!allComments && (\n                            <Paper className={classes.paperProgress}>\n                                <CircularProgress size={24} />\n                            </Paper>\n                        )}\n                        {allComments && totalComments === 0\n                            && (\n                                <Box mt={2} mb={2} ml={1}>\n                                    <InlineMessage\n                                        type='info'\n                                        title={(\n                                            <FormattedMessage\n                                                id='Apis.Details.Comments.no.comments'\n                                                defaultMessage='No Comments Yet'\n                                            />\n                                        )}\n                                    >\n                                        <Typography component='p'>\n                                            <FormattedMessage\n                                                id='Apis.Details.Comments.no.comments.content'\n                                                defaultMessage='No comments available for this API yet'\n                                            />\n                                        </Typography>\n                                    </InlineMessage>\n                                </Box>\n                            )}\n                        <Comment\n                            comments={comments}\n                            isCrossTenantUser={isCrossTenantUser}\n                            apiId={api.id}\n                            allComments={allComments}\n                            onDeleteComment={this.onDeleteComment}\n                            updateComment={this.updateComment}\n                        />\n                        {totalComments > comments.length && (\n                            <div className={classes.contentWrapper}>\n                                <Grid container spacing={4} className={classes.root}>\n                                    <Grid item>\n                                        <Typography className={classes.verticalSpace} variant='body1'>\n                                            <a\n                                                className={classes.link + ' ' + classes.loadMoreLink}\n                                                onClick={this.handleLoadMoreComments}\n                                            >\n                                                <FormattedMessage\n                                                    id='Apis.Details.Comments.load.previous.comments'\n                                                    defaultMessage='Show More'\n                                                />\n                                            </a>\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item>\n                                        <Typography className={classes.verticalSpace} variant='body1'>\n                                            {'(' + comments.length + ' of ' + totalComments + ')'}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </div>\n                        )}\n                    </div>\n                )}\n            </ApiContext.Consumer>\n        );\n    }\n}\n\nComments.defaultProps = {\n    setCount: () => { },\n};\nComments.propTypes = {\n    classes: PropTypes.instanceOf(Object).isRequired,\n    setCount: PropTypes.func,\n};\n\nexport default injectIntl(withStyles(styles, { withTheme: true })(withSettings(Comments)));\n"],"sourceRoot":""}