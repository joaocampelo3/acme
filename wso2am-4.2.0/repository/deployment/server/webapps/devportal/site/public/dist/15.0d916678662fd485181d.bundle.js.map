{"version":3,"sources":["webpack:///./node_modules/@graphiql/react/dist/searchcursor.es.js","webpack:///./node_modules/@graphiql/react/dist/matchbrackets.es.js","webpack:///./node_modules/@graphiql/react/dist/sublime.es.js"],"names":["__defProp","Object","defineProperty","__name","target","value","configurable","_mergeNamespaces","n","m","forEach","e","Array","isArray","keys","k","d","getOwnPropertyDescriptor","get","enumerable","freeze","searchcursor$2","exports","CodeMirror","doFold","noFold","Pos","regexpFlags","regexp","flags","ignoreCase","global","multiline","ensureFlags","current","i","length","indexOf","charAt","RegExp","source","maybeMultiline","test","searchRegexpForward","doc","start","line","ch","last","lastLine","lastIndex","string","getLine","match","exec","from","index","to","searchRegexpForwardMultiline","chunk","curLine","before","slice","split","inside","startLine","startCh","lastMatchIn","endMargin","newMatch","end","searchRegexpBackward","first","firstLine","searchRegexpBackwardMultiline","chunkSize","adjustPos","orig","folded","pos","foldFunc","min","max","Math","mid","len","searchStringForward","query","caseFold","fold","lines","search","found","cutFrom","endString","searchStringBackward","lastIndexOf","top","topString","SearchCursor","options","this","atOccurrence","afterEmptyMatch","clipPos","matches","reverse","pos2","String","prototype","normalize","str","toLowerCase","findNext","find","findPrevious","head","cmpPos","result","replace","newText","origin","splitLines","replaceRange","defineExtension","defineDocExtension","ranges","cur","getSearchCursor","getCursor","push","anchor","setSelections","mod","searchcursor","searchcursor$1","__proto__","Symbol","toStringTag","matchbrackets$2","ie_lt8","navigator","userAgent","document","documentMode","matching","bracketRegex","config","findMatchingBracket","cm","where","getLineHandle","afterCursor","getWrapperElement","className","re","text","dir","strict","style","getTokenTypeAt","scanForBracket","forward","maxScanLen","maxScanLineLength","maxScanLines","stack","lineEnd","lineNo","pop","matchBrackets","autoclear","maxHighlightLen","state","maxHighlightLineLength","highlightNonMatching","marks","listSelections","empty","markText","focused","focus","clear","operation","i2","setTimeout","doMatchBrackets","currentlyHighlighted","clearHighlighted","defineOption","val","old","Init","off","on","oldConfig","matchbrackets","matchbrackets$1","sublime$2","cmds","commands","findPosSubword","type","startPos","next","cat","isWordChar","toUpperCase","moveSubword","extendSelectionsBy","range","display","shift","extend","insertLine","above","isReadOnly","Pass","newSelection","at","indentLine","execCommand","wordAt","word","addCursorToSelection","newRanges","newAnchor","findPosV","goalColumn","newHead","cursorCoords","left","newRange","isSelectedRange","selectBetweenBrackets","opening","closing","puncType","sortLines","caseSensitive","direction","selected","toSort","ranges2","from2","to2","getRange","sort","a","b","au","bu","modifyWordOrSelection","indices","replacements","replaceSelections","getTarget","findAndGoTo","setSelection","goSubwordLeft","goSubwordRight","scrollLineUp","info","getScrollInfo","somethingSelected","visibleBottomLine","lineAtHeight","clientHeight","scrollTo","defaultTextHeight","scrollLineDown","visibleTopLine","splitSelectionByLine","lineRanges","singleSelectionTop","scroll","selectLine","extended","insertLineAfter","insertLineBefore","selectNextOccurrence","fullWord","sublimeFindFullWord","sel","addSelection","skipAndSelectNextOccurrence","prevAnchor","prevHead","filter","addCursorToPrevLine","addCursorToNextLine","selectScope","goToBracket","prev","swapLineUp","linesToMove","newSels","scrollIntoView","swapLineDown","toggleCommentIndented","toggleComment","indent","joinLines","joined","offset","obj","actual","duplicateLine","rangeCount","reverseSortLines","sortLinesInsensitive","reverseSortLinesInsensitive","nextBookmark","sublimeBookmarks","prevBookmark","unshift","toggleBookmark","findMarksAt","findMarks","j","sublimeBookmark","splice","clearWhenEmpty","clearBookmarks","selectBookmarks","smartBackspace","cursors","indentUnit","getOption","cursor","toStartOfLine","column","countColumn","deletePos","findPosH","prevIndent","findColumn","delLineRight","upcaseAtCursor","downcaseAtCursor","setSublimeMark","sublimeMark","setBookmark","selectToSublimeMark","deleteToSublimeMark","tmp","sublimeKilled","swapWithSublimeMark","setCursor","sublimeYank","replaceSelection","showInCenter","bottom","findUnder","findUnderPrevious","findAllUnder","primaryIndex","keyMap","macSublime","normalizeKeyMap","pcSublime","mac","default","macDefault","sublime","sublime$1"],"mappings":"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","file":"15.0d916678662fd485181d.bundle.js","sourcesContent":["var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nimport { a as codemirror } from \"./codemirror.es.js\";\nfunction _mergeNamespaces(n, m) {\n  m.forEach(function(e) {\n    e && typeof e !== \"string\" && !Array.isArray(e) && Object.keys(e).forEach(function(k) {\n      if (k !== \"default\" && !(k in n)) {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function() {\n            return e[k];\n          }\n        });\n      }\n    });\n  });\n  return Object.freeze(n);\n}\n__name(_mergeNamespaces, \"_mergeNamespaces\");\nvar searchcursor$2 = { exports: {} };\n(function(module, exports) {\n  (function(mod) {\n    mod(codemirror.exports);\n  })(function(CodeMirror) {\n    var Pos = CodeMirror.Pos;\n    function regexpFlags(regexp) {\n      var flags = regexp.flags;\n      return flags != null ? flags : (regexp.ignoreCase ? \"i\" : \"\") + (regexp.global ? \"g\" : \"\") + (regexp.multiline ? \"m\" : \"\");\n    }\n    __name(regexpFlags, \"regexpFlags\");\n    function ensureFlags(regexp, flags) {\n      var current = regexpFlags(regexp), target = current;\n      for (var i = 0; i < flags.length; i++)\n        if (target.indexOf(flags.charAt(i)) == -1)\n          target += flags.charAt(i);\n      return current == target ? regexp : new RegExp(regexp.source, target);\n    }\n    __name(ensureFlags, \"ensureFlags\");\n    function maybeMultiline(regexp) {\n      return /\\\\s|\\\\n|\\n|\\\\W|\\\\D|\\[\\^/.test(regexp.source);\n    }\n    __name(maybeMultiline, \"maybeMultiline\");\n    function searchRegexpForward(doc, regexp, start) {\n      regexp = ensureFlags(regexp, \"g\");\n      for (var line = start.line, ch = start.ch, last = doc.lastLine(); line <= last; line++, ch = 0) {\n        regexp.lastIndex = ch;\n        var string = doc.getLine(line), match = regexp.exec(string);\n        if (match)\n          return {\n            from: Pos(line, match.index),\n            to: Pos(line, match.index + match[0].length),\n            match\n          };\n      }\n    }\n    __name(searchRegexpForward, \"searchRegexpForward\");\n    function searchRegexpForwardMultiline(doc, regexp, start) {\n      if (!maybeMultiline(regexp))\n        return searchRegexpForward(doc, regexp, start);\n      regexp = ensureFlags(regexp, \"gm\");\n      var string, chunk = 1;\n      for (var line = start.line, last = doc.lastLine(); line <= last; ) {\n        for (var i = 0; i < chunk; i++) {\n          if (line > last)\n            break;\n          var curLine = doc.getLine(line++);\n          string = string == null ? curLine : string + \"\\n\" + curLine;\n        }\n        chunk = chunk * 2;\n        regexp.lastIndex = start.ch;\n        var match = regexp.exec(string);\n        if (match) {\n          var before = string.slice(0, match.index).split(\"\\n\"), inside = match[0].split(\"\\n\");\n          var startLine = start.line + before.length - 1, startCh = before[before.length - 1].length;\n          return {\n            from: Pos(startLine, startCh),\n            to: Pos(startLine + inside.length - 1, inside.length == 1 ? startCh + inside[0].length : inside[inside.length - 1].length),\n            match\n          };\n        }\n      }\n    }\n    __name(searchRegexpForwardMultiline, \"searchRegexpForwardMultiline\");\n    function lastMatchIn(string, regexp, endMargin) {\n      var match, from = 0;\n      while (from <= string.length) {\n        regexp.lastIndex = from;\n        var newMatch = regexp.exec(string);\n        if (!newMatch)\n          break;\n        var end = newMatch.index + newMatch[0].length;\n        if (end > string.length - endMargin)\n          break;\n        if (!match || end > match.index + match[0].length)\n          match = newMatch;\n        from = newMatch.index + 1;\n      }\n      return match;\n    }\n    __name(lastMatchIn, \"lastMatchIn\");\n    function searchRegexpBackward(doc, regexp, start) {\n      regexp = ensureFlags(regexp, \"g\");\n      for (var line = start.line, ch = start.ch, first = doc.firstLine(); line >= first; line--, ch = -1) {\n        var string = doc.getLine(line);\n        var match = lastMatchIn(string, regexp, ch < 0 ? 0 : string.length - ch);\n        if (match)\n          return {\n            from: Pos(line, match.index),\n            to: Pos(line, match.index + match[0].length),\n            match\n          };\n      }\n    }\n    __name(searchRegexpBackward, \"searchRegexpBackward\");\n    function searchRegexpBackwardMultiline(doc, regexp, start) {\n      if (!maybeMultiline(regexp))\n        return searchRegexpBackward(doc, regexp, start);\n      regexp = ensureFlags(regexp, \"gm\");\n      var string, chunkSize = 1, endMargin = doc.getLine(start.line).length - start.ch;\n      for (var line = start.line, first = doc.firstLine(); line >= first; ) {\n        for (var i = 0; i < chunkSize && line >= first; i++) {\n          var curLine = doc.getLine(line--);\n          string = string == null ? curLine : curLine + \"\\n\" + string;\n        }\n        chunkSize *= 2;\n        var match = lastMatchIn(string, regexp, endMargin);\n        if (match) {\n          var before = string.slice(0, match.index).split(\"\\n\"), inside = match[0].split(\"\\n\");\n          var startLine = line + before.length, startCh = before[before.length - 1].length;\n          return {\n            from: Pos(startLine, startCh),\n            to: Pos(startLine + inside.length - 1, inside.length == 1 ? startCh + inside[0].length : inside[inside.length - 1].length),\n            match\n          };\n        }\n      }\n    }\n    __name(searchRegexpBackwardMultiline, \"searchRegexpBackwardMultiline\");\n    var doFold, noFold;\n    if (String.prototype.normalize) {\n      doFold = /* @__PURE__ */ __name(function(str) {\n        return str.normalize(\"NFD\").toLowerCase();\n      }, \"doFold\");\n      noFold = /* @__PURE__ */ __name(function(str) {\n        return str.normalize(\"NFD\");\n      }, \"noFold\");\n    } else {\n      doFold = /* @__PURE__ */ __name(function(str) {\n        return str.toLowerCase();\n      }, \"doFold\");\n      noFold = /* @__PURE__ */ __name(function(str) {\n        return str;\n      }, \"noFold\");\n    }\n    function adjustPos(orig, folded, pos, foldFunc) {\n      if (orig.length == folded.length)\n        return pos;\n      for (var min = 0, max = pos + Math.max(0, orig.length - folded.length); ; ) {\n        if (min == max)\n          return min;\n        var mid = min + max >> 1;\n        var len = foldFunc(orig.slice(0, mid)).length;\n        if (len == pos)\n          return mid;\n        else if (len > pos)\n          max = mid;\n        else\n          min = mid + 1;\n      }\n    }\n    __name(adjustPos, \"adjustPos\");\n    function searchStringForward(doc, query, start, caseFold) {\n      if (!query.length)\n        return null;\n      var fold = caseFold ? doFold : noFold;\n      var lines = fold(query).split(/\\r|\\n\\r?/);\n      search:\n        for (var line = start.line, ch = start.ch, last = doc.lastLine() + 1 - lines.length; line <= last; line++, ch = 0) {\n          var orig = doc.getLine(line).slice(ch), string = fold(orig);\n          if (lines.length == 1) {\n            var found = string.indexOf(lines[0]);\n            if (found == -1)\n              continue search;\n            var start = adjustPos(orig, string, found, fold) + ch;\n            return {\n              from: Pos(line, adjustPos(orig, string, found, fold) + ch),\n              to: Pos(line, adjustPos(orig, string, found + lines[0].length, fold) + ch)\n            };\n          } else {\n            var cutFrom = string.length - lines[0].length;\n            if (string.slice(cutFrom) != lines[0])\n              continue search;\n            for (var i = 1; i < lines.length - 1; i++)\n              if (fold(doc.getLine(line + i)) != lines[i])\n                continue search;\n            var end = doc.getLine(line + lines.length - 1), endString = fold(end), lastLine = lines[lines.length - 1];\n            if (endString.slice(0, lastLine.length) != lastLine)\n              continue search;\n            return {\n              from: Pos(line, adjustPos(orig, string, cutFrom, fold) + ch),\n              to: Pos(line + lines.length - 1, adjustPos(end, endString, lastLine.length, fold))\n            };\n          }\n        }\n    }\n    __name(searchStringForward, \"searchStringForward\");\n    function searchStringBackward(doc, query, start, caseFold) {\n      if (!query.length)\n        return null;\n      var fold = caseFold ? doFold : noFold;\n      var lines = fold(query).split(/\\r|\\n\\r?/);\n      search:\n        for (var line = start.line, ch = start.ch, first = doc.firstLine() - 1 + lines.length; line >= first; line--, ch = -1) {\n          var orig = doc.getLine(line);\n          if (ch > -1)\n            orig = orig.slice(0, ch);\n          var string = fold(orig);\n          if (lines.length == 1) {\n            var found = string.lastIndexOf(lines[0]);\n            if (found == -1)\n              continue search;\n            return {\n              from: Pos(line, adjustPos(orig, string, found, fold)),\n              to: Pos(line, adjustPos(orig, string, found + lines[0].length, fold))\n            };\n          } else {\n            var lastLine = lines[lines.length - 1];\n            if (string.slice(0, lastLine.length) != lastLine)\n              continue search;\n            for (var i = 1, start = line - lines.length + 1; i < lines.length - 1; i++)\n              if (fold(doc.getLine(start + i)) != lines[i])\n                continue search;\n            var top = doc.getLine(line + 1 - lines.length), topString = fold(top);\n            if (topString.slice(topString.length - lines[0].length) != lines[0])\n              continue search;\n            return {\n              from: Pos(line + 1 - lines.length, adjustPos(top, topString, top.length - lines[0].length, fold)),\n              to: Pos(line, adjustPos(orig, string, lastLine.length, fold))\n            };\n          }\n        }\n    }\n    __name(searchStringBackward, \"searchStringBackward\");\n    function SearchCursor(doc, query, pos, options) {\n      this.atOccurrence = false;\n      this.afterEmptyMatch = false;\n      this.doc = doc;\n      pos = pos ? doc.clipPos(pos) : Pos(0, 0);\n      this.pos = { from: pos, to: pos };\n      var caseFold;\n      if (typeof options == \"object\") {\n        caseFold = options.caseFold;\n      } else {\n        caseFold = options;\n        options = null;\n      }\n      if (typeof query == \"string\") {\n        if (caseFold == null)\n          caseFold = false;\n        this.matches = function(reverse, pos2) {\n          return (reverse ? searchStringBackward : searchStringForward)(doc, query, pos2, caseFold);\n        };\n      } else {\n        query = ensureFlags(query, \"gm\");\n        if (!options || options.multiline !== false)\n          this.matches = function(reverse, pos2) {\n            return (reverse ? searchRegexpBackwardMultiline : searchRegexpForwardMultiline)(doc, query, pos2);\n          };\n        else\n          this.matches = function(reverse, pos2) {\n            return (reverse ? searchRegexpBackward : searchRegexpForward)(doc, query, pos2);\n          };\n      }\n    }\n    __name(SearchCursor, \"SearchCursor\");\n    SearchCursor.prototype = {\n      findNext: function() {\n        return this.find(false);\n      },\n      findPrevious: function() {\n        return this.find(true);\n      },\n      find: function(reverse) {\n        var head = this.doc.clipPos(reverse ? this.pos.from : this.pos.to);\n        if (this.afterEmptyMatch && this.atOccurrence) {\n          head = Pos(head.line, head.ch);\n          if (reverse) {\n            head.ch--;\n            if (head.ch < 0) {\n              head.line--;\n              head.ch = (this.doc.getLine(head.line) || \"\").length;\n            }\n          } else {\n            head.ch++;\n            if (head.ch > (this.doc.getLine(head.line) || \"\").length) {\n              head.ch = 0;\n              head.line++;\n            }\n          }\n          if (CodeMirror.cmpPos(head, this.doc.clipPos(head)) != 0) {\n            return this.atOccurrence = false;\n          }\n        }\n        var result = this.matches(reverse, head);\n        this.afterEmptyMatch = result && CodeMirror.cmpPos(result.from, result.to) == 0;\n        if (result) {\n          this.pos = result;\n          this.atOccurrence = true;\n          return this.pos.match || true;\n        } else {\n          var end = Pos(reverse ? this.doc.firstLine() : this.doc.lastLine() + 1, 0);\n          this.pos = { from: end, to: end };\n          return this.atOccurrence = false;\n        }\n      },\n      from: function() {\n        if (this.atOccurrence)\n          return this.pos.from;\n      },\n      to: function() {\n        if (this.atOccurrence)\n          return this.pos.to;\n      },\n      replace: function(newText, origin) {\n        if (!this.atOccurrence)\n          return;\n        var lines = CodeMirror.splitLines(newText);\n        this.doc.replaceRange(lines, this.pos.from, this.pos.to, origin);\n        this.pos.to = Pos(this.pos.from.line + lines.length - 1, lines[lines.length - 1].length + (lines.length == 1 ? this.pos.from.ch : 0));\n      }\n    };\n    CodeMirror.defineExtension(\"getSearchCursor\", function(query, pos, caseFold) {\n      return new SearchCursor(this.doc, query, pos, caseFold);\n    });\n    CodeMirror.defineDocExtension(\"getSearchCursor\", function(query, pos, caseFold) {\n      return new SearchCursor(this, query, pos, caseFold);\n    });\n    CodeMirror.defineExtension(\"selectMatches\", function(query, caseFold) {\n      var ranges = [];\n      var cur = this.getSearchCursor(query, this.getCursor(\"from\"), caseFold);\n      while (cur.findNext()) {\n        if (CodeMirror.cmpPos(cur.to(), this.getCursor(\"to\")) > 0)\n          break;\n        ranges.push({ anchor: cur.from(), head: cur.to() });\n      }\n      if (ranges.length)\n        this.setSelections(ranges, 0);\n    });\n  });\n})();\nvar searchcursor = searchcursor$2.exports;\nvar searchcursor$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ _mergeNamespaces({\n  __proto__: null,\n  [Symbol.toStringTag]: \"Module\",\n  \"default\": searchcursor\n}, [searchcursor$2.exports]));\nexport { searchcursor$2 as a, searchcursor$1 as s };\n","var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nimport { a as codemirror } from \"./codemirror.es.js\";\nfunction _mergeNamespaces(n, m) {\n  m.forEach(function(e) {\n    e && typeof e !== \"string\" && !Array.isArray(e) && Object.keys(e).forEach(function(k) {\n      if (k !== \"default\" && !(k in n)) {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function() {\n            return e[k];\n          }\n        });\n      }\n    });\n  });\n  return Object.freeze(n);\n}\n__name(_mergeNamespaces, \"_mergeNamespaces\");\nvar matchbrackets$2 = { exports: {} };\n(function(module, exports) {\n  (function(mod) {\n    mod(codemirror.exports);\n  })(function(CodeMirror) {\n    var ie_lt8 = /MSIE \\d/.test(navigator.userAgent) && (document.documentMode == null || document.documentMode < 8);\n    var Pos = CodeMirror.Pos;\n    var matching = { \"(\": \")>\", \")\": \"(<\", \"[\": \"]>\", \"]\": \"[<\", \"{\": \"}>\", \"}\": \"{<\", \"<\": \">>\", \">\": \"<<\" };\n    function bracketRegex(config) {\n      return config && config.bracketRegex || /[(){}[\\]]/;\n    }\n    __name(bracketRegex, \"bracketRegex\");\n    function findMatchingBracket(cm, where, config) {\n      var line = cm.getLineHandle(where.line), pos = where.ch - 1;\n      var afterCursor = config && config.afterCursor;\n      if (afterCursor == null)\n        afterCursor = /(^| )cm-fat-cursor($| )/.test(cm.getWrapperElement().className);\n      var re = bracketRegex(config);\n      var match = !afterCursor && pos >= 0 && re.test(line.text.charAt(pos)) && matching[line.text.charAt(pos)] || re.test(line.text.charAt(pos + 1)) && matching[line.text.charAt(++pos)];\n      if (!match)\n        return null;\n      var dir = match.charAt(1) == \">\" ? 1 : -1;\n      if (config && config.strict && dir > 0 != (pos == where.ch))\n        return null;\n      var style = cm.getTokenTypeAt(Pos(where.line, pos + 1));\n      var found = scanForBracket(cm, Pos(where.line, pos + (dir > 0 ? 1 : 0)), dir, style, config);\n      if (found == null)\n        return null;\n      return {\n        from: Pos(where.line, pos),\n        to: found && found.pos,\n        match: found && found.ch == match.charAt(0),\n        forward: dir > 0\n      };\n    }\n    __name(findMatchingBracket, \"findMatchingBracket\");\n    function scanForBracket(cm, where, dir, style, config) {\n      var maxScanLen = config && config.maxScanLineLength || 1e4;\n      var maxScanLines = config && config.maxScanLines || 1e3;\n      var stack = [];\n      var re = bracketRegex(config);\n      var lineEnd = dir > 0 ? Math.min(where.line + maxScanLines, cm.lastLine() + 1) : Math.max(cm.firstLine() - 1, where.line - maxScanLines);\n      for (var lineNo = where.line; lineNo != lineEnd; lineNo += dir) {\n        var line = cm.getLine(lineNo);\n        if (!line)\n          continue;\n        var pos = dir > 0 ? 0 : line.length - 1, end = dir > 0 ? line.length : -1;\n        if (line.length > maxScanLen)\n          continue;\n        if (lineNo == where.line)\n          pos = where.ch - (dir < 0 ? 1 : 0);\n        for (; pos != end; pos += dir) {\n          var ch = line.charAt(pos);\n          if (re.test(ch) && (style === void 0 || (cm.getTokenTypeAt(Pos(lineNo, pos + 1)) || \"\") == (style || \"\"))) {\n            var match = matching[ch];\n            if (match && match.charAt(1) == \">\" == dir > 0)\n              stack.push(ch);\n            else if (!stack.length)\n              return { pos: Pos(lineNo, pos), ch };\n            else\n              stack.pop();\n          }\n        }\n      }\n      return lineNo - dir == (dir > 0 ? cm.lastLine() : cm.firstLine()) ? false : null;\n    }\n    __name(scanForBracket, \"scanForBracket\");\n    function matchBrackets(cm, autoclear, config) {\n      var maxHighlightLen = cm.state.matchBrackets.maxHighlightLineLength || 1e3, highlightNonMatching = config && config.highlightNonMatching;\n      var marks = [], ranges = cm.listSelections();\n      for (var i = 0; i < ranges.length; i++) {\n        var match = ranges[i].empty() && findMatchingBracket(cm, ranges[i].head, config);\n        if (match && (match.match || highlightNonMatching !== false) && cm.getLine(match.from.line).length <= maxHighlightLen) {\n          var style = match.match ? \"CodeMirror-matchingbracket\" : \"CodeMirror-nonmatchingbracket\";\n          marks.push(cm.markText(match.from, Pos(match.from.line, match.from.ch + 1), { className: style }));\n          if (match.to && cm.getLine(match.to.line).length <= maxHighlightLen)\n            marks.push(cm.markText(match.to, Pos(match.to.line, match.to.ch + 1), { className: style }));\n        }\n      }\n      if (marks.length) {\n        if (ie_lt8 && cm.state.focused)\n          cm.focus();\n        var clear = /* @__PURE__ */ __name(function() {\n          cm.operation(function() {\n            for (var i2 = 0; i2 < marks.length; i2++)\n              marks[i2].clear();\n          });\n        }, \"clear\");\n        if (autoclear)\n          setTimeout(clear, 800);\n        else\n          return clear;\n      }\n    }\n    __name(matchBrackets, \"matchBrackets\");\n    function doMatchBrackets(cm) {\n      cm.operation(function() {\n        if (cm.state.matchBrackets.currentlyHighlighted) {\n          cm.state.matchBrackets.currentlyHighlighted();\n          cm.state.matchBrackets.currentlyHighlighted = null;\n        }\n        cm.state.matchBrackets.currentlyHighlighted = matchBrackets(cm, false, cm.state.matchBrackets);\n      });\n    }\n    __name(doMatchBrackets, \"doMatchBrackets\");\n    function clearHighlighted(cm) {\n      if (cm.state.matchBrackets && cm.state.matchBrackets.currentlyHighlighted) {\n        cm.state.matchBrackets.currentlyHighlighted();\n        cm.state.matchBrackets.currentlyHighlighted = null;\n      }\n    }\n    __name(clearHighlighted, \"clearHighlighted\");\n    CodeMirror.defineOption(\"matchBrackets\", false, function(cm, val, old) {\n      if (old && old != CodeMirror.Init) {\n        cm.off(\"cursorActivity\", doMatchBrackets);\n        cm.off(\"focus\", doMatchBrackets);\n        cm.off(\"blur\", clearHighlighted);\n        clearHighlighted(cm);\n      }\n      if (val) {\n        cm.state.matchBrackets = typeof val == \"object\" ? val : {};\n        cm.on(\"cursorActivity\", doMatchBrackets);\n        cm.on(\"focus\", doMatchBrackets);\n        cm.on(\"blur\", clearHighlighted);\n      }\n    });\n    CodeMirror.defineExtension(\"matchBrackets\", function() {\n      matchBrackets(this, true);\n    });\n    CodeMirror.defineExtension(\"findMatchingBracket\", function(pos, config, oldConfig) {\n      if (oldConfig || typeof config == \"boolean\") {\n        if (!oldConfig) {\n          config = config ? { strict: true } : null;\n        } else {\n          oldConfig.strict = config;\n          config = oldConfig;\n        }\n      }\n      return findMatchingBracket(this, pos, config);\n    });\n    CodeMirror.defineExtension(\"scanForBracket\", function(pos, dir, style, config) {\n      return scanForBracket(this, pos, dir, style, config);\n    });\n  });\n})();\nvar matchbrackets = matchbrackets$2.exports;\nvar matchbrackets$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ _mergeNamespaces({\n  __proto__: null,\n  [Symbol.toStringTag]: \"Module\",\n  \"default\": matchbrackets\n}, [matchbrackets$2.exports]));\nexport { matchbrackets$2 as a, matchbrackets$1 as m };\n","var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nimport { a as codemirror } from \"./codemirror.es.js\";\nimport { a as searchcursor } from \"./searchcursor.es.js\";\nimport { a as matchbrackets } from \"./matchbrackets.es.js\";\nfunction _mergeNamespaces(n, m) {\n  m.forEach(function(e) {\n    e && typeof e !== \"string\" && !Array.isArray(e) && Object.keys(e).forEach(function(k) {\n      if (k !== \"default\" && !(k in n)) {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function() {\n            return e[k];\n          }\n        });\n      }\n    });\n  });\n  return Object.freeze(n);\n}\n__name(_mergeNamespaces, \"_mergeNamespaces\");\nvar sublime$2 = { exports: {} };\n(function(module, exports) {\n  (function(mod) {\n    mod(codemirror.exports, searchcursor.exports, matchbrackets.exports);\n  })(function(CodeMirror) {\n    var cmds = CodeMirror.commands;\n    var Pos = CodeMirror.Pos;\n    function findPosSubword(doc, start, dir) {\n      if (dir < 0 && start.ch == 0)\n        return doc.clipPos(Pos(start.line - 1));\n      var line = doc.getLine(start.line);\n      if (dir > 0 && start.ch >= line.length)\n        return doc.clipPos(Pos(start.line + 1, 0));\n      var state = \"start\", type, startPos = start.ch;\n      for (var pos = startPos, e = dir < 0 ? 0 : line.length, i = 0; pos != e; pos += dir, i++) {\n        var next = line.charAt(dir < 0 ? pos - 1 : pos);\n        var cat = next != \"_\" && CodeMirror.isWordChar(next) ? \"w\" : \"o\";\n        if (cat == \"w\" && next.toUpperCase() == next)\n          cat = \"W\";\n        if (state == \"start\") {\n          if (cat != \"o\") {\n            state = \"in\";\n            type = cat;\n          } else\n            startPos = pos + dir;\n        } else if (state == \"in\") {\n          if (type != cat) {\n            if (type == \"w\" && cat == \"W\" && dir < 0)\n              pos--;\n            if (type == \"W\" && cat == \"w\" && dir > 0) {\n              if (pos == startPos + 1) {\n                type = \"w\";\n                continue;\n              } else\n                pos--;\n            }\n            break;\n          }\n        }\n      }\n      return Pos(start.line, pos);\n    }\n    __name(findPosSubword, \"findPosSubword\");\n    function moveSubword(cm, dir) {\n      cm.extendSelectionsBy(function(range) {\n        if (cm.display.shift || cm.doc.extend || range.empty())\n          return findPosSubword(cm.doc, range.head, dir);\n        else\n          return dir < 0 ? range.from() : range.to();\n      });\n    }\n    __name(moveSubword, \"moveSubword\");\n    cmds.goSubwordLeft = function(cm) {\n      moveSubword(cm, -1);\n    };\n    cmds.goSubwordRight = function(cm) {\n      moveSubword(cm, 1);\n    };\n    cmds.scrollLineUp = function(cm) {\n      var info = cm.getScrollInfo();\n      if (!cm.somethingSelected()) {\n        var visibleBottomLine = cm.lineAtHeight(info.top + info.clientHeight, \"local\");\n        if (cm.getCursor().line >= visibleBottomLine)\n          cm.execCommand(\"goLineUp\");\n      }\n      cm.scrollTo(null, info.top - cm.defaultTextHeight());\n    };\n    cmds.scrollLineDown = function(cm) {\n      var info = cm.getScrollInfo();\n      if (!cm.somethingSelected()) {\n        var visibleTopLine = cm.lineAtHeight(info.top, \"local\") + 1;\n        if (cm.getCursor().line <= visibleTopLine)\n          cm.execCommand(\"goLineDown\");\n      }\n      cm.scrollTo(null, info.top + cm.defaultTextHeight());\n    };\n    cmds.splitSelectionByLine = function(cm) {\n      var ranges = cm.listSelections(), lineRanges = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var from = ranges[i].from(), to = ranges[i].to();\n        for (var line = from.line; line <= to.line; ++line)\n          if (!(to.line > from.line && line == to.line && to.ch == 0))\n            lineRanges.push({\n              anchor: line == from.line ? from : Pos(line, 0),\n              head: line == to.line ? to : Pos(line)\n            });\n      }\n      cm.setSelections(lineRanges, 0);\n    };\n    cmds.singleSelectionTop = function(cm) {\n      var range = cm.listSelections()[0];\n      cm.setSelection(range.anchor, range.head, { scroll: false });\n    };\n    cmds.selectLine = function(cm) {\n      var ranges = cm.listSelections(), extended = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var range = ranges[i];\n        extended.push({\n          anchor: Pos(range.from().line, 0),\n          head: Pos(range.to().line + 1, 0)\n        });\n      }\n      cm.setSelections(extended);\n    };\n    function insertLine(cm, above) {\n      if (cm.isReadOnly())\n        return CodeMirror.Pass;\n      cm.operation(function() {\n        var len = cm.listSelections().length, newSelection = [], last = -1;\n        for (var i = 0; i < len; i++) {\n          var head = cm.listSelections()[i].head;\n          if (head.line <= last)\n            continue;\n          var at = Pos(head.line + (above ? 0 : 1), 0);\n          cm.replaceRange(\"\\n\", at, null, \"+insertLine\");\n          cm.indentLine(at.line, null, true);\n          newSelection.push({ head: at, anchor: at });\n          last = head.line + 1;\n        }\n        cm.setSelections(newSelection);\n      });\n      cm.execCommand(\"indentAuto\");\n    }\n    __name(insertLine, \"insertLine\");\n    cmds.insertLineAfter = function(cm) {\n      return insertLine(cm, false);\n    };\n    cmds.insertLineBefore = function(cm) {\n      return insertLine(cm, true);\n    };\n    function wordAt(cm, pos) {\n      var start = pos.ch, end = start, line = cm.getLine(pos.line);\n      while (start && CodeMirror.isWordChar(line.charAt(start - 1)))\n        --start;\n      while (end < line.length && CodeMirror.isWordChar(line.charAt(end)))\n        ++end;\n      return { from: Pos(pos.line, start), to: Pos(pos.line, end), word: line.slice(start, end) };\n    }\n    __name(wordAt, \"wordAt\");\n    cmds.selectNextOccurrence = function(cm) {\n      var from = cm.getCursor(\"from\"), to = cm.getCursor(\"to\");\n      var fullWord = cm.state.sublimeFindFullWord == cm.doc.sel;\n      if (CodeMirror.cmpPos(from, to) == 0) {\n        var word = wordAt(cm, from);\n        if (!word.word)\n          return;\n        cm.setSelection(word.from, word.to);\n        fullWord = true;\n      } else {\n        var text = cm.getRange(from, to);\n        var query = fullWord ? new RegExp(\"\\\\b\" + text + \"\\\\b\") : text;\n        var cur = cm.getSearchCursor(query, to);\n        var found = cur.findNext();\n        if (!found) {\n          cur = cm.getSearchCursor(query, Pos(cm.firstLine(), 0));\n          found = cur.findNext();\n        }\n        if (!found || isSelectedRange(cm.listSelections(), cur.from(), cur.to()))\n          return;\n        cm.addSelection(cur.from(), cur.to());\n      }\n      if (fullWord)\n        cm.state.sublimeFindFullWord = cm.doc.sel;\n    };\n    cmds.skipAndSelectNextOccurrence = function(cm) {\n      var prevAnchor = cm.getCursor(\"anchor\"), prevHead = cm.getCursor(\"head\");\n      cmds.selectNextOccurrence(cm);\n      if (CodeMirror.cmpPos(prevAnchor, prevHead) != 0) {\n        cm.doc.setSelections(cm.doc.listSelections().filter(function(sel) {\n          return sel.anchor != prevAnchor || sel.head != prevHead;\n        }));\n      }\n    };\n    function addCursorToSelection(cm, dir) {\n      var ranges = cm.listSelections(), newRanges = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var range = ranges[i];\n        var newAnchor = cm.findPosV(range.anchor, dir, \"line\", range.anchor.goalColumn);\n        var newHead = cm.findPosV(range.head, dir, \"line\", range.head.goalColumn);\n        newAnchor.goalColumn = range.anchor.goalColumn != null ? range.anchor.goalColumn : cm.cursorCoords(range.anchor, \"div\").left;\n        newHead.goalColumn = range.head.goalColumn != null ? range.head.goalColumn : cm.cursorCoords(range.head, \"div\").left;\n        var newRange = { anchor: newAnchor, head: newHead };\n        newRanges.push(range);\n        newRanges.push(newRange);\n      }\n      cm.setSelections(newRanges);\n    }\n    __name(addCursorToSelection, \"addCursorToSelection\");\n    cmds.addCursorToPrevLine = function(cm) {\n      addCursorToSelection(cm, -1);\n    };\n    cmds.addCursorToNextLine = function(cm) {\n      addCursorToSelection(cm, 1);\n    };\n    function isSelectedRange(ranges, from, to) {\n      for (var i = 0; i < ranges.length; i++)\n        if (CodeMirror.cmpPos(ranges[i].from(), from) == 0 && CodeMirror.cmpPos(ranges[i].to(), to) == 0)\n          return true;\n      return false;\n    }\n    __name(isSelectedRange, \"isSelectedRange\");\n    var mirror = \"(){}[]\";\n    function selectBetweenBrackets(cm) {\n      var ranges = cm.listSelections(), newRanges = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var range = ranges[i], pos = range.head, opening = cm.scanForBracket(pos, -1);\n        if (!opening)\n          return false;\n        for (; ; ) {\n          var closing = cm.scanForBracket(pos, 1);\n          if (!closing)\n            return false;\n          if (closing.ch == mirror.charAt(mirror.indexOf(opening.ch) + 1)) {\n            var startPos = Pos(opening.pos.line, opening.pos.ch + 1);\n            if (CodeMirror.cmpPos(startPos, range.from()) == 0 && CodeMirror.cmpPos(closing.pos, range.to()) == 0) {\n              opening = cm.scanForBracket(opening.pos, -1);\n              if (!opening)\n                return false;\n            } else {\n              newRanges.push({ anchor: startPos, head: closing.pos });\n              break;\n            }\n          }\n          pos = Pos(closing.pos.line, closing.pos.ch + 1);\n        }\n      }\n      cm.setSelections(newRanges);\n      return true;\n    }\n    __name(selectBetweenBrackets, \"selectBetweenBrackets\");\n    cmds.selectScope = function(cm) {\n      selectBetweenBrackets(cm) || cm.execCommand(\"selectAll\");\n    };\n    cmds.selectBetweenBrackets = function(cm) {\n      if (!selectBetweenBrackets(cm))\n        return CodeMirror.Pass;\n    };\n    function puncType(type) {\n      return !type ? null : /\\bpunctuation\\b/.test(type) ? type : void 0;\n    }\n    __name(puncType, \"puncType\");\n    cmds.goToBracket = function(cm) {\n      cm.extendSelectionsBy(function(range) {\n        var next = cm.scanForBracket(range.head, 1, puncType(cm.getTokenTypeAt(range.head)));\n        if (next && CodeMirror.cmpPos(next.pos, range.head) != 0)\n          return next.pos;\n        var prev = cm.scanForBracket(range.head, -1, puncType(cm.getTokenTypeAt(Pos(range.head.line, range.head.ch + 1))));\n        return prev && Pos(prev.pos.line, prev.pos.ch + 1) || range.head;\n      });\n    };\n    cmds.swapLineUp = function(cm) {\n      if (cm.isReadOnly())\n        return CodeMirror.Pass;\n      var ranges = cm.listSelections(), linesToMove = [], at = cm.firstLine() - 1, newSels = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var range = ranges[i], from = range.from().line - 1, to = range.to().line;\n        newSels.push({\n          anchor: Pos(range.anchor.line - 1, range.anchor.ch),\n          head: Pos(range.head.line - 1, range.head.ch)\n        });\n        if (range.to().ch == 0 && !range.empty())\n          --to;\n        if (from > at)\n          linesToMove.push(from, to);\n        else if (linesToMove.length)\n          linesToMove[linesToMove.length - 1] = to;\n        at = to;\n      }\n      cm.operation(function() {\n        for (var i2 = 0; i2 < linesToMove.length; i2 += 2) {\n          var from2 = linesToMove[i2], to2 = linesToMove[i2 + 1];\n          var line = cm.getLine(from2);\n          cm.replaceRange(\"\", Pos(from2, 0), Pos(from2 + 1, 0), \"+swapLine\");\n          if (to2 > cm.lastLine())\n            cm.replaceRange(\"\\n\" + line, Pos(cm.lastLine()), null, \"+swapLine\");\n          else\n            cm.replaceRange(line + \"\\n\", Pos(to2, 0), null, \"+swapLine\");\n        }\n        cm.setSelections(newSels);\n        cm.scrollIntoView();\n      });\n    };\n    cmds.swapLineDown = function(cm) {\n      if (cm.isReadOnly())\n        return CodeMirror.Pass;\n      var ranges = cm.listSelections(), linesToMove = [], at = cm.lastLine() + 1;\n      for (var i = ranges.length - 1; i >= 0; i--) {\n        var range = ranges[i], from = range.to().line + 1, to = range.from().line;\n        if (range.to().ch == 0 && !range.empty())\n          from--;\n        if (from < at)\n          linesToMove.push(from, to);\n        else if (linesToMove.length)\n          linesToMove[linesToMove.length - 1] = to;\n        at = to;\n      }\n      cm.operation(function() {\n        for (var i2 = linesToMove.length - 2; i2 >= 0; i2 -= 2) {\n          var from2 = linesToMove[i2], to2 = linesToMove[i2 + 1];\n          var line = cm.getLine(from2);\n          if (from2 == cm.lastLine())\n            cm.replaceRange(\"\", Pos(from2 - 1), Pos(from2), \"+swapLine\");\n          else\n            cm.replaceRange(\"\", Pos(from2, 0), Pos(from2 + 1, 0), \"+swapLine\");\n          cm.replaceRange(line + \"\\n\", Pos(to2, 0), null, \"+swapLine\");\n        }\n        cm.scrollIntoView();\n      });\n    };\n    cmds.toggleCommentIndented = function(cm) {\n      cm.toggleComment({ indent: true });\n    };\n    cmds.joinLines = function(cm) {\n      var ranges = cm.listSelections(), joined = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var range = ranges[i], from = range.from();\n        var start = from.line, end = range.to().line;\n        while (i < ranges.length - 1 && ranges[i + 1].from().line == end)\n          end = ranges[++i].to().line;\n        joined.push({ start, end, anchor: !range.empty() && from });\n      }\n      cm.operation(function() {\n        var offset = 0, ranges2 = [];\n        for (var i2 = 0; i2 < joined.length; i2++) {\n          var obj = joined[i2];\n          var anchor = obj.anchor && Pos(obj.anchor.line - offset, obj.anchor.ch), head;\n          for (var line = obj.start; line <= obj.end; line++) {\n            var actual = line - offset;\n            if (line == obj.end)\n              head = Pos(actual, cm.getLine(actual).length + 1);\n            if (actual < cm.lastLine()) {\n              cm.replaceRange(\" \", Pos(actual), Pos(actual + 1, /^\\s*/.exec(cm.getLine(actual + 1))[0].length));\n              ++offset;\n            }\n          }\n          ranges2.push({ anchor: anchor || head, head });\n        }\n        cm.setSelections(ranges2, 0);\n      });\n    };\n    cmds.duplicateLine = function(cm) {\n      cm.operation(function() {\n        var rangeCount = cm.listSelections().length;\n        for (var i = 0; i < rangeCount; i++) {\n          var range = cm.listSelections()[i];\n          if (range.empty())\n            cm.replaceRange(cm.getLine(range.head.line) + \"\\n\", Pos(range.head.line, 0));\n          else\n            cm.replaceRange(cm.getRange(range.from(), range.to()), range.from());\n        }\n        cm.scrollIntoView();\n      });\n    };\n    function sortLines(cm, caseSensitive, direction) {\n      if (cm.isReadOnly())\n        return CodeMirror.Pass;\n      var ranges = cm.listSelections(), toSort = [], selected;\n      for (var i = 0; i < ranges.length; i++) {\n        var range = ranges[i];\n        if (range.empty())\n          continue;\n        var from = range.from().line, to = range.to().line;\n        while (i < ranges.length - 1 && ranges[i + 1].from().line == to)\n          to = ranges[++i].to().line;\n        if (!ranges[i].to().ch)\n          to--;\n        toSort.push(from, to);\n      }\n      if (toSort.length)\n        selected = true;\n      else\n        toSort.push(cm.firstLine(), cm.lastLine());\n      cm.operation(function() {\n        var ranges2 = [];\n        for (var i2 = 0; i2 < toSort.length; i2 += 2) {\n          var from2 = toSort[i2], to2 = toSort[i2 + 1];\n          var start = Pos(from2, 0), end = Pos(to2);\n          var lines = cm.getRange(start, end, false);\n          if (caseSensitive)\n            lines.sort(function(a, b) {\n              return a < b ? -direction : a == b ? 0 : direction;\n            });\n          else\n            lines.sort(function(a, b) {\n              var au = a.toUpperCase(), bu = b.toUpperCase();\n              if (au != bu) {\n                a = au;\n                b = bu;\n              }\n              return a < b ? -direction : a == b ? 0 : direction;\n            });\n          cm.replaceRange(lines, start, end);\n          if (selected)\n            ranges2.push({ anchor: start, head: Pos(to2 + 1, 0) });\n        }\n        if (selected)\n          cm.setSelections(ranges2, 0);\n      });\n    }\n    __name(sortLines, \"sortLines\");\n    cmds.sortLines = function(cm) {\n      sortLines(cm, true, 1);\n    };\n    cmds.reverseSortLines = function(cm) {\n      sortLines(cm, true, -1);\n    };\n    cmds.sortLinesInsensitive = function(cm) {\n      sortLines(cm, false, 1);\n    };\n    cmds.reverseSortLinesInsensitive = function(cm) {\n      sortLines(cm, false, -1);\n    };\n    cmds.nextBookmark = function(cm) {\n      var marks = cm.state.sublimeBookmarks;\n      if (marks)\n        while (marks.length) {\n          var current = marks.shift();\n          var found = current.find();\n          if (found) {\n            marks.push(current);\n            return cm.setSelection(found.from, found.to);\n          }\n        }\n    };\n    cmds.prevBookmark = function(cm) {\n      var marks = cm.state.sublimeBookmarks;\n      if (marks)\n        while (marks.length) {\n          marks.unshift(marks.pop());\n          var found = marks[marks.length - 1].find();\n          if (!found)\n            marks.pop();\n          else\n            return cm.setSelection(found.from, found.to);\n        }\n    };\n    cmds.toggleBookmark = function(cm) {\n      var ranges = cm.listSelections();\n      var marks = cm.state.sublimeBookmarks || (cm.state.sublimeBookmarks = []);\n      for (var i = 0; i < ranges.length; i++) {\n        var from = ranges[i].from(), to = ranges[i].to();\n        var found = ranges[i].empty() ? cm.findMarksAt(from) : cm.findMarks(from, to);\n        for (var j = 0; j < found.length; j++) {\n          if (found[j].sublimeBookmark) {\n            found[j].clear();\n            for (var k = 0; k < marks.length; k++)\n              if (marks[k] == found[j])\n                marks.splice(k--, 1);\n            break;\n          }\n        }\n        if (j == found.length)\n          marks.push(cm.markText(from, to, { sublimeBookmark: true, clearWhenEmpty: false }));\n      }\n    };\n    cmds.clearBookmarks = function(cm) {\n      var marks = cm.state.sublimeBookmarks;\n      if (marks)\n        for (var i = 0; i < marks.length; i++)\n          marks[i].clear();\n      marks.length = 0;\n    };\n    cmds.selectBookmarks = function(cm) {\n      var marks = cm.state.sublimeBookmarks, ranges = [];\n      if (marks)\n        for (var i = 0; i < marks.length; i++) {\n          var found = marks[i].find();\n          if (!found)\n            marks.splice(i--, 0);\n          else\n            ranges.push({ anchor: found.from, head: found.to });\n        }\n      if (ranges.length)\n        cm.setSelections(ranges, 0);\n    };\n    function modifyWordOrSelection(cm, mod) {\n      cm.operation(function() {\n        var ranges = cm.listSelections(), indices = [], replacements = [];\n        for (var i = 0; i < ranges.length; i++) {\n          var range = ranges[i];\n          if (range.empty()) {\n            indices.push(i);\n            replacements.push(\"\");\n          } else\n            replacements.push(mod(cm.getRange(range.from(), range.to())));\n        }\n        cm.replaceSelections(replacements, \"around\", \"case\");\n        for (var i = indices.length - 1, at; i >= 0; i--) {\n          var range = ranges[indices[i]];\n          if (at && CodeMirror.cmpPos(range.head, at) > 0)\n            continue;\n          var word = wordAt(cm, range.head);\n          at = word.from;\n          cm.replaceRange(mod(word.word), word.from, word.to);\n        }\n      });\n    }\n    __name(modifyWordOrSelection, \"modifyWordOrSelection\");\n    cmds.smartBackspace = function(cm) {\n      if (cm.somethingSelected())\n        return CodeMirror.Pass;\n      cm.operation(function() {\n        var cursors = cm.listSelections();\n        var indentUnit = cm.getOption(\"indentUnit\");\n        for (var i = cursors.length - 1; i >= 0; i--) {\n          var cursor = cursors[i].head;\n          var toStartOfLine = cm.getRange({ line: cursor.line, ch: 0 }, cursor);\n          var column = CodeMirror.countColumn(toStartOfLine, null, cm.getOption(\"tabSize\"));\n          var deletePos = cm.findPosH(cursor, -1, \"char\", false);\n          if (toStartOfLine && !/\\S/.test(toStartOfLine) && column % indentUnit == 0) {\n            var prevIndent = new Pos(cursor.line, CodeMirror.findColumn(toStartOfLine, column - indentUnit, indentUnit));\n            if (prevIndent.ch != cursor.ch)\n              deletePos = prevIndent;\n          }\n          cm.replaceRange(\"\", deletePos, cursor, \"+delete\");\n        }\n      });\n    };\n    cmds.delLineRight = function(cm) {\n      cm.operation(function() {\n        var ranges = cm.listSelections();\n        for (var i = ranges.length - 1; i >= 0; i--)\n          cm.replaceRange(\"\", ranges[i].anchor, Pos(ranges[i].to().line), \"+delete\");\n        cm.scrollIntoView();\n      });\n    };\n    cmds.upcaseAtCursor = function(cm) {\n      modifyWordOrSelection(cm, function(str) {\n        return str.toUpperCase();\n      });\n    };\n    cmds.downcaseAtCursor = function(cm) {\n      modifyWordOrSelection(cm, function(str) {\n        return str.toLowerCase();\n      });\n    };\n    cmds.setSublimeMark = function(cm) {\n      if (cm.state.sublimeMark)\n        cm.state.sublimeMark.clear();\n      cm.state.sublimeMark = cm.setBookmark(cm.getCursor());\n    };\n    cmds.selectToSublimeMark = function(cm) {\n      var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n      if (found)\n        cm.setSelection(cm.getCursor(), found);\n    };\n    cmds.deleteToSublimeMark = function(cm) {\n      var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n      if (found) {\n        var from = cm.getCursor(), to = found;\n        if (CodeMirror.cmpPos(from, to) > 0) {\n          var tmp = to;\n          to = from;\n          from = tmp;\n        }\n        cm.state.sublimeKilled = cm.getRange(from, to);\n        cm.replaceRange(\"\", from, to);\n      }\n    };\n    cmds.swapWithSublimeMark = function(cm) {\n      var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n      if (found) {\n        cm.state.sublimeMark.clear();\n        cm.state.sublimeMark = cm.setBookmark(cm.getCursor());\n        cm.setCursor(found);\n      }\n    };\n    cmds.sublimeYank = function(cm) {\n      if (cm.state.sublimeKilled != null)\n        cm.replaceSelection(cm.state.sublimeKilled, null, \"paste\");\n    };\n    cmds.showInCenter = function(cm) {\n      var pos = cm.cursorCoords(null, \"local\");\n      cm.scrollTo(null, (pos.top + pos.bottom) / 2 - cm.getScrollInfo().clientHeight / 2);\n    };\n    function getTarget(cm) {\n      var from = cm.getCursor(\"from\"), to = cm.getCursor(\"to\");\n      if (CodeMirror.cmpPos(from, to) == 0) {\n        var word = wordAt(cm, from);\n        if (!word.word)\n          return;\n        from = word.from;\n        to = word.to;\n      }\n      return { from, to, query: cm.getRange(from, to), word };\n    }\n    __name(getTarget, \"getTarget\");\n    function findAndGoTo(cm, forward) {\n      var target = getTarget(cm);\n      if (!target)\n        return;\n      var query = target.query;\n      var cur = cm.getSearchCursor(query, forward ? target.to : target.from);\n      if (forward ? cur.findNext() : cur.findPrevious()) {\n        cm.setSelection(cur.from(), cur.to());\n      } else {\n        cur = cm.getSearchCursor(query, forward ? Pos(cm.firstLine(), 0) : cm.clipPos(Pos(cm.lastLine())));\n        if (forward ? cur.findNext() : cur.findPrevious())\n          cm.setSelection(cur.from(), cur.to());\n        else if (target.word)\n          cm.setSelection(target.from, target.to);\n      }\n    }\n    __name(findAndGoTo, \"findAndGoTo\");\n    cmds.findUnder = function(cm) {\n      findAndGoTo(cm, true);\n    };\n    cmds.findUnderPrevious = function(cm) {\n      findAndGoTo(cm, false);\n    };\n    cmds.findAllUnder = function(cm) {\n      var target = getTarget(cm);\n      if (!target)\n        return;\n      var cur = cm.getSearchCursor(target.query);\n      var matches = [];\n      var primaryIndex = -1;\n      while (cur.findNext()) {\n        matches.push({ anchor: cur.from(), head: cur.to() });\n        if (cur.from().line <= target.from.line && cur.from().ch <= target.from.ch)\n          primaryIndex++;\n      }\n      cm.setSelections(matches, primaryIndex);\n    };\n    var keyMap = CodeMirror.keyMap;\n    keyMap.macSublime = {\n      \"Cmd-Left\": \"goLineStartSmart\",\n      \"Shift-Tab\": \"indentLess\",\n      \"Shift-Ctrl-K\": \"deleteLine\",\n      \"Alt-Q\": \"wrapLines\",\n      \"Ctrl-Left\": \"goSubwordLeft\",\n      \"Ctrl-Right\": \"goSubwordRight\",\n      \"Ctrl-Alt-Up\": \"scrollLineUp\",\n      \"Ctrl-Alt-Down\": \"scrollLineDown\",\n      \"Cmd-L\": \"selectLine\",\n      \"Shift-Cmd-L\": \"splitSelectionByLine\",\n      \"Esc\": \"singleSelectionTop\",\n      \"Cmd-Enter\": \"insertLineAfter\",\n      \"Shift-Cmd-Enter\": \"insertLineBefore\",\n      \"Cmd-D\": \"selectNextOccurrence\",\n      \"Shift-Cmd-Space\": \"selectScope\",\n      \"Shift-Cmd-M\": \"selectBetweenBrackets\",\n      \"Cmd-M\": \"goToBracket\",\n      \"Cmd-Ctrl-Up\": \"swapLineUp\",\n      \"Cmd-Ctrl-Down\": \"swapLineDown\",\n      \"Cmd-/\": \"toggleCommentIndented\",\n      \"Cmd-J\": \"joinLines\",\n      \"Shift-Cmd-D\": \"duplicateLine\",\n      \"F5\": \"sortLines\",\n      \"Shift-F5\": \"reverseSortLines\",\n      \"Cmd-F5\": \"sortLinesInsensitive\",\n      \"Shift-Cmd-F5\": \"reverseSortLinesInsensitive\",\n      \"F2\": \"nextBookmark\",\n      \"Shift-F2\": \"prevBookmark\",\n      \"Cmd-F2\": \"toggleBookmark\",\n      \"Shift-Cmd-F2\": \"clearBookmarks\",\n      \"Alt-F2\": \"selectBookmarks\",\n      \"Backspace\": \"smartBackspace\",\n      \"Cmd-K Cmd-D\": \"skipAndSelectNextOccurrence\",\n      \"Cmd-K Cmd-K\": \"delLineRight\",\n      \"Cmd-K Cmd-U\": \"upcaseAtCursor\",\n      \"Cmd-K Cmd-L\": \"downcaseAtCursor\",\n      \"Cmd-K Cmd-Space\": \"setSublimeMark\",\n      \"Cmd-K Cmd-A\": \"selectToSublimeMark\",\n      \"Cmd-K Cmd-W\": \"deleteToSublimeMark\",\n      \"Cmd-K Cmd-X\": \"swapWithSublimeMark\",\n      \"Cmd-K Cmd-Y\": \"sublimeYank\",\n      \"Cmd-K Cmd-C\": \"showInCenter\",\n      \"Cmd-K Cmd-G\": \"clearBookmarks\",\n      \"Cmd-K Cmd-Backspace\": \"delLineLeft\",\n      \"Cmd-K Cmd-1\": \"foldAll\",\n      \"Cmd-K Cmd-0\": \"unfoldAll\",\n      \"Cmd-K Cmd-J\": \"unfoldAll\",\n      \"Ctrl-Shift-Up\": \"addCursorToPrevLine\",\n      \"Ctrl-Shift-Down\": \"addCursorToNextLine\",\n      \"Cmd-F3\": \"findUnder\",\n      \"Shift-Cmd-F3\": \"findUnderPrevious\",\n      \"Alt-F3\": \"findAllUnder\",\n      \"Shift-Cmd-[\": \"fold\",\n      \"Shift-Cmd-]\": \"unfold\",\n      \"Cmd-I\": \"findIncremental\",\n      \"Shift-Cmd-I\": \"findIncrementalReverse\",\n      \"Cmd-H\": \"replace\",\n      \"F3\": \"findNext\",\n      \"Shift-F3\": \"findPrev\",\n      \"fallthrough\": \"macDefault\"\n    };\n    CodeMirror.normalizeKeyMap(keyMap.macSublime);\n    keyMap.pcSublime = {\n      \"Shift-Tab\": \"indentLess\",\n      \"Shift-Ctrl-K\": \"deleteLine\",\n      \"Alt-Q\": \"wrapLines\",\n      \"Ctrl-T\": \"transposeChars\",\n      \"Alt-Left\": \"goSubwordLeft\",\n      \"Alt-Right\": \"goSubwordRight\",\n      \"Ctrl-Up\": \"scrollLineUp\",\n      \"Ctrl-Down\": \"scrollLineDown\",\n      \"Ctrl-L\": \"selectLine\",\n      \"Shift-Ctrl-L\": \"splitSelectionByLine\",\n      \"Esc\": \"singleSelectionTop\",\n      \"Ctrl-Enter\": \"insertLineAfter\",\n      \"Shift-Ctrl-Enter\": \"insertLineBefore\",\n      \"Ctrl-D\": \"selectNextOccurrence\",\n      \"Shift-Ctrl-Space\": \"selectScope\",\n      \"Shift-Ctrl-M\": \"selectBetweenBrackets\",\n      \"Ctrl-M\": \"goToBracket\",\n      \"Shift-Ctrl-Up\": \"swapLineUp\",\n      \"Shift-Ctrl-Down\": \"swapLineDown\",\n      \"Ctrl-/\": \"toggleCommentIndented\",\n      \"Ctrl-J\": \"joinLines\",\n      \"Shift-Ctrl-D\": \"duplicateLine\",\n      \"F9\": \"sortLines\",\n      \"Shift-F9\": \"reverseSortLines\",\n      \"Ctrl-F9\": \"sortLinesInsensitive\",\n      \"Shift-Ctrl-F9\": \"reverseSortLinesInsensitive\",\n      \"F2\": \"nextBookmark\",\n      \"Shift-F2\": \"prevBookmark\",\n      \"Ctrl-F2\": \"toggleBookmark\",\n      \"Shift-Ctrl-F2\": \"clearBookmarks\",\n      \"Alt-F2\": \"selectBookmarks\",\n      \"Backspace\": \"smartBackspace\",\n      \"Ctrl-K Ctrl-D\": \"skipAndSelectNextOccurrence\",\n      \"Ctrl-K Ctrl-K\": \"delLineRight\",\n      \"Ctrl-K Ctrl-U\": \"upcaseAtCursor\",\n      \"Ctrl-K Ctrl-L\": \"downcaseAtCursor\",\n      \"Ctrl-K Ctrl-Space\": \"setSublimeMark\",\n      \"Ctrl-K Ctrl-A\": \"selectToSublimeMark\",\n      \"Ctrl-K Ctrl-W\": \"deleteToSublimeMark\",\n      \"Ctrl-K Ctrl-X\": \"swapWithSublimeMark\",\n      \"Ctrl-K Ctrl-Y\": \"sublimeYank\",\n      \"Ctrl-K Ctrl-C\": \"showInCenter\",\n      \"Ctrl-K Ctrl-G\": \"clearBookmarks\",\n      \"Ctrl-K Ctrl-Backspace\": \"delLineLeft\",\n      \"Ctrl-K Ctrl-1\": \"foldAll\",\n      \"Ctrl-K Ctrl-0\": \"unfoldAll\",\n      \"Ctrl-K Ctrl-J\": \"unfoldAll\",\n      \"Ctrl-Alt-Up\": \"addCursorToPrevLine\",\n      \"Ctrl-Alt-Down\": \"addCursorToNextLine\",\n      \"Ctrl-F3\": \"findUnder\",\n      \"Shift-Ctrl-F3\": \"findUnderPrevious\",\n      \"Alt-F3\": \"findAllUnder\",\n      \"Shift-Ctrl-[\": \"fold\",\n      \"Shift-Ctrl-]\": \"unfold\",\n      \"Ctrl-I\": \"findIncremental\",\n      \"Shift-Ctrl-I\": \"findIncrementalReverse\",\n      \"Ctrl-H\": \"replace\",\n      \"F3\": \"findNext\",\n      \"Shift-F3\": \"findPrev\",\n      \"fallthrough\": \"pcDefault\"\n    };\n    CodeMirror.normalizeKeyMap(keyMap.pcSublime);\n    var mac = keyMap.default == keyMap.macDefault;\n    keyMap.sublime = mac ? keyMap.macSublime : keyMap.pcSublime;\n  });\n})();\nvar sublime = sublime$2.exports;\nvar sublime$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ _mergeNamespaces({\n  __proto__: null,\n  [Symbol.toStringTag]: \"Module\",\n  \"default\": sublime\n}, [sublime$2.exports]));\nexport { sublime$1 as s };\n"],"sourceRoot":""}