{"version":3,"sources":["webpack:///./node_modules/@material-ui/icons/CloudDownloadRounded.js","webpack:///./source/src/app/components/Apis/Details/Documents/View.jsx","webpack:///./node_modules/@material-ui/icons/AddCircleOutline.js","webpack:///./node_modules/@material-ui/core/Grid/Grid.js","webpack:///./node_modules/@material-ui/core/utils/requirePropFactory.js","webpack:///./node_modules/@material-ui/core/utils/deprecatedPropType.js","webpack:///./node_modules/@material-ui/icons/Launch.js","webpack:///./source/src/app/components/Shared/ConfirmDialog.jsx","webpack:///./source/src/app/components/Apis/Details/Comments/CommentEdit.jsx","webpack:///./source/src/app/components/Apis/Details/Comments/CommentOptions.jsx","webpack:///./source/src/app/components/Apis/Details/Comments/CommentAdd.jsx","webpack:///./source/src/app/components/Apis/Details/Comments/Comment.jsx","webpack:///./source/src/app/components/Apis/Details/Comments/Comments.jsx","webpack:///./node_modules/@material-ui/icons/Code.js","webpack:///./node_modules/@material-ui/icons/MailOutline.js","webpack:///./node_modules/@material-ui/core/esm/TableContainer/TableContainer.js","webpack:///./source/src/app/components/Apis/Details/Social/EmbedCode.jsx","webpack:///./source/src/app/components/Apis/Details/Social/Social.jsx","webpack:///./source/src/app/components/Apis/Details/TaskState.jsx","webpack:///./source/src/app/components/Apis/Details/GoToTryOut.jsx","webpack:///./source/src/app/components/Apis/Details/SolaceEndpoints.jsx","webpack:///./source/src/app/components/Apis/Details/Environments.jsx","webpack:///./source/src/app/components/Apis/Details/OverviewDocuments.jsx","webpack:///./source/src/app/components/Apis/Details/SourceDownload.jsx","webpack:///./source/src/app/components/Apis/Details/Overview.jsx"],"names":["_interopRequireDefault","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","ReactMarkdown","lazy","View","props","classes","doc","apiId","intl","api","useContext","ApiContext","code","setCode","useState","isFileAvailable","setIsFileAvailable","restAPI","API","skipHtml","Settings","app","markdown","markdownSyntaxHighlighterProps","syntaxHighlighterProps","syntaxHighlighterDarkTheme","useEffect","sourceType","getInlineContentOfDocument","documentId","then","dataDoc","text","keys","forEach","fieldName","regex","RegExp","replace","catch","error","getFileForDocument","summary","otherTypeName","variant","className","docSummary","fallback","children","remarkPlugins","remarkGfm","components","node","inline","propsInner","match","exec","String","style","vscDarkPlus","vs","language","PreTag","html","displayURL","href","sourceUrl","target","rel","displayURLLink","color","button","disabled","onClick","done","response","fileName","contentDisposition","headers","indexOf","matches","contentType","blob","Blob","data","type","window","navigator","msSaveBlob","URL","webkitURL","downloadUrl","createObjectURL","aTag","document","download","location","body","appendChild","click","setTimeout","revokeObjectURL","downloadFile","process","id","defaultMessage","fileAvailability","propTypes","PropTypes","shape","isRequired","string","formatMessage","func","injectIntl","withStyles","theme","root","paddingTop","spacing","paddingBottom","docTitle","fontWeight","fontSize","palette","grey","docBadge","padding","background","primary","main","position","top","marginTop","getContrastText","display","paddingLeft","marginLeft","styles","_objectWithoutProperties2","_extends2","_clsx","_withStyles","SPACINGS","GRID_SIZES","getOffset","val","div","arguments","length","undefined","parse","parseFloat","concat","container","boxSizing","flexWrap","width","item","margin","zeroMinWidth","minWidth","flexDirection","alignItems","alignContent","justifyContent","breakpoint","themeSpacing","generateGutter","breakpoints","reduce","accumulator","key","globalStyles","size","Math","round","flexBasis","flexGrow","maxWidth","up","generateGrid","Grid","forwardRef","ref","_props$alignContent","_props$alignItems","classNameProp","_props$component","component","Component","_props$container","_props$direction","direction","_props$item","justify","_props$justifyContent","_props$lg","lg","_props$md","md","_props$sm","sm","_props$spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","xs","_props$zeroMinWidth","other","name","componentNameInError","requiredProp","propName","componentName","propFullName","propFullNameSafe","Error","validator","reason","componentNameSafe","ConfirmDialog","handleRequestClose","action","callback","this","Action","OK","render","title","message","labelCancel","labelOk","open","Dialog","role","onClose","dialogWrapper","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","CANCEL","deleteConformButton","bool","paper","CommentEdit","constructor","super","state","commentText","category","currentLength","inputChange","bind","handleCategoryChange","handleClickUpdateComment","handleClickCancel","filterCommentToUpdate","filterCommentToUpdateReply","componentDidMount","comment","setState","toggleShowEdit","commentsUpdate","allComments","event","commentToFilter","commentId","parentCommentId","Api","commentToEdit","trim","updateComment","result","updatedComment","index","findIndex","replyIndex","replies","console","Alert","FormControl","Select","onChange","MenuItem","TextField","autoFocus","multiline","textField","placeholder","inputProps","maxLength","custom","maxCommentLength","Typography","align","defaultProps","instanceOf","Array","contentWrapper","contentAreaWidth","unig","marginRight","withTheme","CommentOptions","showAddComment","showEditComment","handleClickOpen","replyId","editIndex","displayDate","timestamp","localDate","Date","toLocaleDateString","day","month","year","toLocaleTimeString","hour","minute","user","AuthManager","getUser","username","canDelete","createdBy","isAdmin","verticalSpace","link","disable","aria-label","content","number","cursor","time","commentIcon","whiteSpace","overflowWrap","CommentAdd","cancelCallback","handleClickAddComment","filterCommentToAddReply","handleShowReply","replyTo","addComment","addReply","newComment","cancelButton","commentAddWrapper","InputLabel","htmlFor","rows","commentAddButton","handleCancel","flexFlow","marginBottom","dayjs","extend","relativeTime","Comment","openDialog","deleteComment","handleClickDeleteComment","handleShowEdit","handleConfirmDialog","handleClose","filterRemainingComments","filterCommentToDelete","handleLoadMoreReplies","handleAddReply","handleDeleteReply","apiClient","onDeleteComment","commentIdOfCommentToDelete","parentCommentIdOfCommentToDelete","info","comments","count","list","getAllCommentReplies","replyList","replyCount","existingComment","find","entry","newRepliesList","newCount","newLimit","pagination","limit","replyCommentId","updatedRepliesList","filter","reply","newTotal","total","offset","isOverview","isCrossTenantUser","classNames","cleanBack","slice","map","contentWrapperOverview","Divider","divider","Icon","noWrap","commenterInfo","firstName","lastName","Tooltip","createdTime","fromNow","Box","ml","mb","fullName","loadMoreLink","onKeyDown","zvariant","wordBreak","boxShadow","Comments","expanded","totalComments","showCommentAdd","handleExpandClick","handleLoadMoreComments","toggleCommentAdd","isCrossTenant","setCount","params","apiUuid","restApi","commentsLimit","getAllComments","commentList","newAllCommentList","newComments","acc","cur","temp","remainingComments","currentUser","tenantDomain","loggedInUserDomain","loggedInUser","includes","splitLoggedInUser","split","prevState","Consumer","titleSub","mt","startIcon","Paper","paperProgress","CircularProgress","InlineMessage","paddingRight","textDecoration","genericMessageWrapper","textTransform","withSettings","overflowX","getModalStyle","left","transform","useStyles","makeStyles","backgroundColor","border","shadows","codeIcon","infoBar","iconStyle","right","modalStyle","setOpen","codeCopied","setCodeCopied","url","searchParams","set","embedCode","Modal","aria-labelledby","aria-describedby","placement","onCopy","socialLink","oneFlex","flex","socialLinkWrapper","borderRight","height","apiName","apiUrl","encodeURI","useTheme","slack","github","additionalProperties","prop","social","showSharing","active","showFacebook","showReddit","showTwitter","showEmbed","showEmail","src","context","alt","TaskState","completed","errors","inProgress","completedMessage","inProgressMessage","severity","description","icon","thickness","tryoutLabel","modal","statusBox","outline","asyncButton","keyStates","initialTaskStates","subscribe","prepare","generate","tasksReducer","status","GoToTryOut","subscribedApplications","applicationsAvailable","updateSubscriptionData","defaultApplications","x","label","defaultApplication","tasksStatus","tasksStatusDispatcher","useReducer","showStatus","setShowStatus","useIntl","history","useHistory","isXsOrBelow","useMediaQuery","down","isAsyncAPI","CONSTANTS","API_TYPES","WS","WEBSUB","SSE","ASYNC","isPrototypedAPI","lifeCycleStatus","toLowerCase","taskManager","async","promisedTask","taskResult","pushToTryout","push","values","tasks","current","anyErrors","redirectButton","advertiseInfo","advertised","throttlingPolicy","tiers","tierName","keyRequest","getKeyManagers","keyType","supportedGrantTypes","callbackUrl","keyManager","responseKeyManagerList","selectedKeyManager","responseKeyManagerListDefault","availableGrantTypes","k","e","getKeyRequest","applicationId","application","Application","get","getKeys","generateKeys","keyState","log","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","bgcolor","borderRadius","p","pr","borderBottom","input","avatar","sectionTitle","SolaceEndpoints","urlCopied","setUrlCopied","protocols","setProtocols","protocolsList","asyncTransportProtocols","JSON","gatewayVendor","gutterBottom","endpointURLs","environmentDisplayName","Chip","upperCaseString","protocol","data-testid","InputBase","endPointUrl","Avatar","sizes","interactive","IconButton","Environments","selectedEndpoint","updateSelectedEndpoint","mr","area-label","for","environmentName","endpoint","VerticalDivider","URLs","ws","wss","py","arrow","https","http","light","pt","apiExternalProductionEndpoint","apiExternalSandboxEndpoint","defaultVersionURLs","getDefaultVersionUrl","OverviewDocuments","docs","setDocs","getDocumentsByAPIId","obj","emptyBox","List","listWrapper","ListItem","gotoDoc","listItemStyle","ListItemIcon","listItemIcon","ListItemText","listItemPrimary","iconClass","secondary","boxBadge","A400","typography","h5","textAlign","subscriptionBox","linkStyle","subscriptionTop","resourceWrapper","overflow","actionPanel","linkToTest","buttonIcon","downloadLink","SourceDownload","accessTokenPart","Utils","getCookieWithoutEnvironment","isTokenCopied","setIsTokenCopied","customUrl","customUrlEnabledDomain","tenant","queryString","search","downloadWSDL","preventDefault","getWsdlClient","downloadWSDLForEnvironment","downloadGraphQLSchema","getGraphQLSchemaByAPIId","provider","version","downloadSwagger","promiseSwagger","getSwaggerByAPIIdAndEnvironment","getSwaggerByAPIId","downloadAsync","getAsyncApiSpecificationByAPIIdAndEnvironment","origin","linkTitle","textLabel","textValue","textIndent","apiThumb","borderColor","chipRoot","subtitle","cardRoot","moreLink","table","requestCount","requestUnit","launchIcon","originalDevportalUrl","Overview","apiDetailPages","showCredentials","showComments","showDocuments","showThumbnail","showRating","showSwaggerDescriptionOnOverview","descriptionHidden","setDescriptionHidden","isLoading","setIsLoading","notFound","setNotFound","allDocuments","setAllDocuments","overviewDocOverride","setOverviewDocOverride","swaggerDescription","setSwaggerDescription","allPolicies","setAllPolicies","rating","setRating","avgRating","setSelectedEndpoint","descriptionIsBig","smallDescription","join","getSubscriptionPolicies","getAllTiers","filteredList","str","policyName","filteredApiPolicies","t","isApiPolicy","getDocuments","overviewDoc","Promise","all","swaggerResponse","swagger","keyManagers","km","Progress","plugins","gfm","escapeHtml","ResourceNotFound","formattedMessage","paperWithDoc","elevation","fullScreen","dontShowName","ApiThumb","customWidth","customHeight","showInfo","area-lable","businessInformation","businessOwner","getProvider","selectedEnvName","filteredEndpoints","ep","originalDevPortalUrl","tier","Card","CardContent","cardMainTitle","timeUnit","Table","TableHead","TableRow","TableCell","TableBody","scope","Link","to","policy","StarRatingSummary","reviewCount","returnCount","StarRatingBar","isEditable","showSummary","setRatingUpdate","ratingLocal","endpointLabel","tags","tag","clickable","pl","businessOwnerEmail"],"mappings":"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","file":"APIOverview.9b9a6e01add6e880d662.bundle.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM17 13l-4.65 4.65c-.2.2-.51.2-.71 0L7 13h3V9h4v4h3z\"\n}), 'CloudDownloadRounded');\n\nexports.default = _default;","/* eslint-disable react/no-children-prop */\n/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, {\n    useState, useEffect, useContext, Suspense, lazy,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Icon from '@material-ui/core/Icon';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport API from 'AppData/api';\nimport Settings from 'Settings';\nimport remarkGfm from 'remark-gfm';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { vscDarkPlus, vs } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport HTMLRender from 'AppComponents/Shared/HTMLRender';\nimport { ApiContext } from '../ApiContext';\nimport Alert from '../../../Shared/Alert';\n\nconst ReactMarkdown = lazy(() => import('react-markdown' /* webpackChunkName: \"MDReactMarkdown\" */));\n\nconst styles = (theme) => ({\n    root: {\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n    docTitle: {\n        fontWeight: 100,\n        fontSize: 50,\n        color: theme.palette.grey[500],\n    },\n    docBadge: {\n        padding: theme.spacing(1),\n        background: theme.palette.primary.main,\n        position: 'absolute',\n        top: 0,\n        marginTop: -22,\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n    },\n    button: {\n        padding: theme.spacing(2),\n        marginTop: theme.spacing(2),\n    },\n    displayURL: {\n        padding: theme.spacing(2),\n        marginTop: theme.spacing(2),\n        background: theme.palette.grey[200],\n        color: theme.palette.getContrastText(theme.palette.grey[200]),\n        display: 'flex',\n    },\n    displayURLLink: {\n        paddingLeft: theme.spacing(2),\n    },\n    docSummary: {\n        marginTop: theme.spacing(2),\n        color: theme.palette.text.primary,\n    },\n    fileAvailability: {\n        marginTop: theme.spacing(1),\n        marginLeft: theme.spacing(0.8),\n    },\n});\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nfunction View(props) {\n    const {\n        classes, doc, apiId, intl,\n    } = props;\n    const { api } = useContext(ApiContext);\n    const [code, setCode] = useState('');\n    const [isFileAvailable, setIsFileAvailable] = useState(false);\n    const restAPI = new API();\n    const { skipHtml } = Settings.app.markdown;\n    const markdownSyntaxHighlighterProps = Settings.app.markdown.syntaxHighlighterProps || {};\n    const { syntaxHighlighterDarkTheme } = Settings.app.markdown;\n\n    const loadContentForDoc = () => {\n        const docPromise = restAPI.getInlineContentOfDocument(apiId, doc.documentId);\n        docPromise\n            .then((dataDoc) => {\n                let { text } = dataDoc;\n\n                Object.keys(api).forEach((fieldName) => {\n                    // eslint-disable-next-line no-useless-escape\n                    const regex = new RegExp('\\_\\_\\_' + fieldName + '\\_\\_\\_', 'g');\n                    text = text.replace(regex, api[fieldName]);\n                });\n                setCode(text);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            });\n    };\n\n    useEffect(() => {\n        if (doc.sourceType === 'MARKDOWN' || doc.sourceType === 'INLINE') loadContentForDoc();\n        if (doc.sourceType === 'FILE') {\n            const promisedGetContent = restAPI.getFileForDocument(apiId, doc.documentId);\n            promisedGetContent\n                .then(() => {\n                    setIsFileAvailable(true);\n                })\n                .catch(() => {\n                    setIsFileAvailable(false);\n                });\n        }\n    }, [props.doc]);\n\n    /**\n     * Download the document related file\n     * @param {any} response Response of download file\n     */\n    const downloadFile = (response) => {\n        let fileName = '';\n        const contentDisposition = response.headers['content-disposition'];\n\n        if (contentDisposition && contentDisposition.indexOf('attachment') !== -1) {\n            const fileNameReg = /filename[^;=\\n]*=((['\"]).*?\\2|[^;\\n]*)/;\n            const matches = fileNameReg.exec(contentDisposition);\n            if (matches != null && matches[1]) fileName = matches[1].replace(/['\"]/g, '');\n        }\n        const contentType = response.headers['content-type'];\n        const blob = new Blob([response.data], {\n            type: contentType,\n        });\n        if (typeof window.navigator.msSaveBlob !== 'undefined') {\n            window.navigator.msSaveBlob(blob, fileName);\n        } else {\n            const URL = window.URL || window.webkitURL;\n            const downloadUrl = URL.createObjectURL(blob);\n\n            if (fileName) {\n                const aTag = document.createElement('a');\n                if (typeof aTag.download === 'undefined') {\n                    window.location = downloadUrl;\n                } else {\n                    aTag.href = downloadUrl;\n                    aTag.download = fileName;\n                    document.body.appendChild(aTag);\n                    aTag.click();\n                }\n            } else {\n                window.location = downloadUrl;\n            }\n\n            setTimeout(() => {\n                URL.revokeObjectURL(downloadUrl);\n            }, 100);\n        }\n    };\n    const handleDownload = () => {\n        const promisedGetContent = restAPI.getFileForDocument(apiId, doc.documentId);\n        promisedGetContent\n            .then((done) => {\n                downloadFile(done, document);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Documents.View.error.downloading',\n                        defaultMessage: 'Error downloading the file',\n                    }));\n                }\n            });\n    };\n    return (\n        <>\n            {(doc.summary && doc.otherTypeName !== '_overview') && (\n                <Typography variant='body1' className={classes.docSummary}>\n                    {doc.summary}\n                </Typography>\n            )}\n\n            {doc.sourceType === 'MARKDOWN' && (\n                <div className='markdown-content-wrapper'>\n                    <Suspense fallback={<CircularProgress />}>\n                        <ReactMarkdown\n                            skipHtml={skipHtml}\n                            children={code}\n                            remarkPlugins={[remarkGfm]}\n                            components={{\n                                code({\n                                    node, inline, className, children, ...propsInner\n                                }) {\n                                    const match = /language-(\\w+)/.exec(className || '');\n                                    return !inline && match ? (\n                                        <SyntaxHighlighter\n                                            children={String(children).replace(/\\n$/, '')}\n                                            style={syntaxHighlighterDarkTheme ? vscDarkPlus : vs}\n                                            language={match[1]}\n                                            PreTag='div'\n                                            {...propsInner}\n                                            {...markdownSyntaxHighlighterProps}\n                                        />\n                                    ) : (\n                                        <code className={className} {...propsInner}>\n                                            {children}\n                                        </code>\n                                    );\n                                },\n                            }}\n                        />\n                    </Suspense>\n                </div>\n            )}\n            {doc.sourceType === 'INLINE' && <HTMLRender html={code} />}\n            {doc.sourceType === 'URL' && (\n                <a className={classes.displayURL} href={doc.sourceUrl} target='_blank' rel='noreferrer'>\n                    {doc.sourceUrl}\n                    <Icon className={classes.displayURLLink}>open_in_new</Icon>\n                </a>\n            )}\n            {doc.sourceType === 'FILE' && (\n                <Button\n                    variant='contained'\n                    color='default'\n                    className={classes.button}\n                    disabled={!isFileAvailable}\n                    onClick={handleDownload}\n                >\n                    <FormattedMessage id='Apis.Details.Documents.View.btn.download' defaultMessage='Download' />\n\n                    <Icon>arrow_downward</Icon>\n                </Button>\n            )}\n            {doc.sourceType === 'FILE' && !isFileAvailable && (\n                <Typography className={classes.fileAvailability}>\n                    <FormattedMessage\n                        id='Apis.Details.Documents.View.file.availability'\n                        defaultMessage='No file available'\n                    />\n                </Typography>\n            )}\n        </>\n    );\n}\n\nView.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    doc: PropTypes.shape({}).isRequired,\n    apiId: PropTypes.string.isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(View));\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'AddCircleOutline');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.styles = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n\nvar _withStyles = _interopRequireDefault(require(\"../styles/withStyles\"));\n\nvar _requirePropFactory = _interopRequireDefault(require(\"../utils/requirePropFactory\"));\n\nvar _deprecatedPropType = _interopRequireDefault(require(\"../utils/deprecatedPropType\"));\n\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    (0, _extends2.default)(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nvar styles = function styles(theme) {\n  return (0, _extends2.default)({\n    /* Styles applied to the root element. */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justifyContent=\"center\"`. */\n    'justify-content-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justifyContent=\"flex-end\"`. */\n    'justify-content-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justifyContent=\"space-between\"`. */\n    'justify-content-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justifyContent=\"space-around\"`. */\n    'justify-content-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justifyContent=\"space-evenly\"`. */\n    'justify-content-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\n\nexports.styles = styles;\nvar Grid = /*#__PURE__*/React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      justify = props.justify,\n      _props$justifyContent = props.justifyContent,\n      justifyContent = _props$justifyContent === void 0 ? 'flex-start' : _props$justifyContent,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = (0, _objectWithoutProperties2.default)(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"justifyContent\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n  var className = (0, _clsx.default)(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], (justify || justifyContent) !== 'flex-start' && classes[\"justify-content-xs-\".concat(String(justify || justifyContent))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return /*#__PURE__*/React.createElement(Component, (0, _extends2.default)({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: _propTypes.default.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: _propTypes.default.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: _propTypes.default.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: _propTypes.default.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: _propTypes.default\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: _propTypes.default.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: _propTypes.default.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: _propTypes.default.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   * @deprecated Use `justifyContent` instead, the prop was renamed\n   */\n  justify: (0, _deprecatedPropType.default)(_propTypes.default.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']), 'Use `justifyContent` instead, the prop was renamed.'),\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justifyContent: _propTypes.default.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: _propTypes.default.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: _propTypes.default.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: _propTypes.default.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: _propTypes.default.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: _propTypes.default.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: _propTypes.default.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: _propTypes.default.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: _propTypes.default.bool\n} : void 0;\nvar StyledGrid = (0, _withStyles.default)(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = (0, _requirePropFactory.default)('Grid');\n  StyledGrid.propTypes = (0, _extends2.default)({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justifyContent: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nvar _default = StyledGrid;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = requirePropFactory;\n\nfunction requirePropFactory(componentNameInError) {\n  if (process.env.NODE_ENV === 'production') {\n    return function () {\n      return null;\n    };\n  }\n\n  var requireProp = function requireProp(requiredProp) {\n    return function (props, propName, componentName, location, propFullName) {\n      var propFullNameSafe = propFullName || propName;\n\n      if (typeof props[propName] !== 'undefined' && !props[requiredProp]) {\n        return new Error(\"The prop `\".concat(propFullNameSafe, \"` of \") + \"`\".concat(componentNameInError, \"` must be used on `\").concat(requiredProp, \"`.\"));\n      }\n\n      return null;\n    };\n  };\n\n  return requireProp;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = deprecatedPropType;\n\nfunction deprecatedPropType(validator, reason) {\n  if (process.env.NODE_ENV === 'production') {\n    return function () {\n      return null;\n    };\n  }\n\n  return function (props, propName, componentName, location, propFullName) {\n    var componentNameSafe = componentName || '<<anonymous>>';\n    var propFullNameSafe = propFullName || propName;\n\n    if (typeof props[propName] !== 'undefined') {\n      return new Error(\"The \".concat(location, \" `\").concat(propFullNameSafe, \"` of \") + \"`\".concat(componentNameSafe, \"` is deprecated. \").concat(reason));\n    }\n\n    return null;\n  };\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\"\n}), 'Launch');\n\nexports.default = _default;","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport {\n    Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle,\n} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = (theme) => ({\n    dialogWrapper: {\n        '& span, & h5, & label, & td, & li, & div, & p': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        },\n    },\n    deleteConformButton: {\n        '& span.MuiButton-label': {\n            color: theme.palette.getContrastText(theme.palette.primary.main),\n        },\n    },\n});\n\n/**\n * React component for handling confirmation dialog box\n * @class ConfirmDialog\n * @extends {React.Component}\n */\nclass ConfirmDialog extends React.Component {\n    /**\n     * If user confirms the action invoke the callback with true else false\n     * @param {String} action One of ConfirmDialog.Action actions\n     * @memberof ConfirmDialog\n     */\n    handleRequestClose(action) {\n        const { callback } = this.props;\n        if (action === ConfirmDialog.Action.OK) {\n            callback(true);\n        } else {\n            callback(false);\n        }\n    }\n\n    /**\n     * @inheritDoc\n     * @returns {React.Component} Confirmation box\n     * @memberof ConfirmDialog\n     */\n    render() {\n        const {\n            title, message, labelCancel, labelOk, open, classes,\n        } = this.props;\n\n        return (\n            <Dialog role='alertdialog' open={open} onClose={this.handleRequestClose} className={classes.dialogWrapper}>\n                <DialogTitle>{title || <FormattedMessage id='Shared.ConfirmDialog.please.confirm' defaultMessage='Please Confirm' />}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{message || <FormattedMessage id='Shared.ConfirmDialog.please.confirm.sure' defaultMessage='Are you sure?' />}</DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.handleRequestClose(ConfirmDialog.Action.CANCEL)} color='primary'>\n                        {labelCancel || <FormattedMessage id='Shared.ConfirmDialog.cancel' defaultMessage='Cancel' />}\n                    </Button>\n                    <Button\n                        onClick={() => this.handleRequestClose(ConfirmDialog.Action.OK)}\n                        color='primary'\n                        variant='contained'\n                        className={classes.deleteConformButton}\n                    >\n                        {labelOk || <FormattedMessage id='Shared.ConfirmDialog.ok' defaultMessage='OK' />}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nConfirmDialog.propTypes = {\n    title: PropTypes.string.isRequired,\n    message: PropTypes.string.isRequired,\n    labelCancel: PropTypes.string.isRequired,\n    labelOk: PropTypes.string.isRequired,\n    callback: PropTypes.func.isRequired,\n    open: PropTypes.bool.isRequired,\n};\nConfirmDialog.Action = {\n    OK: 'ok',\n    CANCEL: 'cancel',\n};\n\nexport default withStyles(styles)(ConfirmDialog);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { FormattedMessage, injectIntl, } from 'react-intl';\nimport { TextField, Button, Typography } from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Grid from '@material-ui/core/Grid';\nimport Alert from '../../../Shared/Alert';\nimport API from '../../../../data/api';\n\nconst styles = theme => ({\n    textField: {\n        marginTop: 0,\n        width: '87.5%',\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n        paddingLeft: theme.spacing(2),\n        paddingTop: theme.spacing.unig,\n        marginTop: theme.spacing(2),\n    },\n    category: {\n        width: '12%',\n        marginRight: '0.5%',\n    },\n});\n\n/**\n * Display a component to edit a comment\n * @class CommmentEdit\n * @extends {React.Component}\n */\nclass CommentEdit extends React.Component {\n    /**\n     * Creates an instance of CommentEdit\n     * @param {*} props properies passed by the parent element\n     * @memberof CommentEdit\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            commentText: '',\n            category: '',\n            currentLength: 0,\n        };\n        this.inputChange = this.inputChange.bind(this);\n        this.handleCategoryChange = this.handleCategoryChange.bind(this);\n        this.handleClickUpdateComment = this.handleClickUpdateComment.bind(this);\n        this.handleClickCancel = this.handleClickCancel.bind(this);\n        this.filterCommentToUpdate = this.filterCommentToUpdate.bind(this);\n        this.filterCommentToUpdateReply = this.filterCommentToUpdateReply.bind(this);\n    }\n\n    /**\n     * @memberof Comments\n     */\n    componentDidMount() {\n        const { comment } = this.props;\n        this.setState({\n            commentText: comment.commentText,\n            category: comment.category,\n            currentLength: comment.commentText.length,\n        });\n    }\n\n    /**\n     * Handles the comment text when input changes\n     * @param {Object} {target} target element\n     * @memberof CommentEdit\n     */\n    inputChange({ target }) {\n        this.setState({ commentText: target.value, currentLength: target.value.length });\n    }\n\n    /**\n     * Hides the component to edit a comment when cancelled\n     * @memberof CommentEdit\n     */\n    handleClickCancel() {\n        const { toggleShowEdit, commentsUpdate, allComments } = this.props;\n        toggleShowEdit();\n        commentsUpdate(allComments);\n    }\n\n    /**\n     * Handles category when the category is changed\n     * @param {any} event Drop down select event\n     * @memberof CommentEdit\n     */\n    handleCategoryChange(event) {\n        this.setState({ category: event.target.value });\n    }\n\n    /**\n     * Filters the comment to update\n     * @memberof CommentAdd\n     */\n    filterCommentToUpdate(commentToFilter) {\n        const { comment } = this.props;\n        return commentToFilter.commentId === comment.commentId;\n    }\n\n    /**\n     * Filters the comment to update\n     * @memberof CommentAdd\n     */\n    filterCommentToUpdateReply(commentToFilter) {\n        const { comment } = this.props;\n        return commentToFilter.commentId === comment.parentCommentId;\n    }\n\n    /**\n     * Handles updating a comment\n     * @memberof CommentEdit\n     */\n    handleClickUpdateComment() {\n        const {\n            apiId, comment, allComments, toggleShowEdit, commentsUpdate, intl,\n        } = this.props;\n        const { category, commentText } = this.state;\n        const Api = new API();\n        const commentToEdit = comment;\n        commentToEdit.commentText = commentText.trim();\n        commentToEdit.category = category;\n\n        // to check whether a string does not contain only whitehis spaces\n        if (comment.commentText.replace(/\\s/g, '').length) {\n            Api.updateComment(apiId, commentToEdit.commentId, commentToEdit)\n                .then((result) => {\n                    const updatedComment = result.body;\n                    if (commentToEdit.parentCommentId === undefined) {\n                        const index = allComments.findIndex(this.filterCommentToUpdate);\n                        allComments[index].category = updatedComment.category;\n                        allComments[index].commentText = updatedComment.commentText;\n                    } else {\n                        const index = allComments.findIndex(this.filterCommentToUpdateReply);\n                        const replyIndex = allComments[index].replies.findIndex(this.filterCommentToUpdate);\n                        allComments[index].replies[replyIndex] = updatedComment;\n                    }\n                    toggleShowEdit();\n                    commentsUpdate(allComments);\n                })\n                .catch((error) => {\n                    console.error(error);\n                    if (error.response) {\n                        Alert.error(error.response.body.message);\n                    } else {\n                        Alert.error(\n                            intl.formatMessage({\n                                defaultMessage: 'Something went wrong while adding the comment',\n                                id: 'Apis.Details.Comments.CommentEdit.something.went.wrong',\n                            }),\n                        );\n                    }\n                });\n        } else {\n            Alert.error(\n                intl.formatMessage({\n                    defaultMessage: 'You cannot enter a blank comment',\n                    id: 'Apis.Details.Comments.CommentEdit.blank.comment.error',\n                }),\n            );\n        }\n    }\n\n    /**\n     * Render method of the component\n     * @returns {React.Component} Comment html component\n     * @memberof CommentEdit\n     */\n    render() {\n        const { classes, theme, intl } = this.props;\n        const { category, commentText, currentLength } = this.state;\n        return (\n            <div>\n                <FormControl className={classes.category}>\n                    <Select value={category} onChange={this.handleCategoryChange}>\n                        <MenuItem value='General'>\n                            <FormattedMessage id='Apis.Details.Comments.CommentEdit.general' defaultMessage='General' />\n                        </MenuItem>\n                        <MenuItem value='Feature Request'>\n                            <FormattedMessage\n                                id='Apis.Details.Comments.CommentEdit.feature.request'\n                                defaultMessage='Feature Request'\n                            />\n                        </MenuItem>\n                        <MenuItem value='Bug Report'>\n                            <FormattedMessage\n                                id='Apis.Details.Comments.CommentEdit.bug.report'\n                                defaultMessage='Bug Report'\n                            />\n                        </MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id='multiline-static'\n                    autoFocus\n                    multiline\n                    className={classes.textField}\n                    margin='normal'\n                    placeholder={intl.formatMessage({\n                        defaultMessage: 'Write a comment',\n                        id: 'Apis.Details.Comments.CommentEdit.write.a.comment',\n                    })}\n                    inputProps={{ maxLength: theme.custom.maxCommentLength }}\n                    value={commentText}\n                    onChange={this.inputChange}\n                />\n                <Typography className={classes.commentText} align='right'>\n                    {currentLength + '/' + theme.custom.maxCommentLength}\n                </Typography>\n                <Grid container spacing={1}>\n                    <Grid item>\n                        <Button variant='contained' color='primary' onClick={() => this.handleClickUpdateComment()}>\n                            <FormattedMessage id='Apis.Details.Comments.CommentEdit.btn.save' defaultMessage='Save' />\n                        </Button>\n                    </Grid>\n                    <Grid item>\n                        <Button onClick={() => this.handleClickCancel()} className={classes.button}>\n                            <FormattedMessage\n                                id='Apis.Details.Comments.CommentEdit.btn.cancel'\n                                defaultMessage='Cancel'\n                            />\n                        </Button>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nCommentEdit.defaultProps = {\n    commentsUpdate: null,\n};\n\nCommentEdit.propTypes = {\n    classes: PropTypes.instanceOf(Object).isRequired,\n    apiId: PropTypes.string.isRequired,\n    allComments: PropTypes.instanceOf(Array).isRequired,\n    // todo make commentsUpdate required once comment edit feature is supported\n    commentsUpdate: PropTypes.func,\n    toggleShowEdit: PropTypes.func.isRequired,\n    comment: PropTypes.instanceOf(Object).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n\nexport default injectIntl(withStyles(styles, { withTheme: true })(CommentEdit));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport AuthManager from '../../../../data/AuthManager';\n\nconst styles = theme => ({\n    link: {\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n        '& span.MuiButton-label': {\n            color: theme.palette.primary.main,\n            fontWeight: '400',\n        },\n        cursor: 'pointer',\n    },\n    time: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        marginTop: theme.spacing(0.3),\n    },\n    verticalSpace: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    disable: {\n        color: theme.palette.grey[200],\n    },\n    commentIcon: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n    commentText: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        marginTop: theme.spacing.unig,\n        width: '100%',\n        whiteSpace: 'pre-wrap',\n        overflowWrap: 'break-word',\n    },\n    root: {\n        marginTop: theme.spacing(2.5),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n        paddingLeft: theme.spacing(2),\n        paddingTop: theme.spacing.unig,\n    },\n});\n\n/**\n * Component to display options of the comment\n * @class CommentOptions\n * @extends {React.Component}\n */\nclass CommentOptions extends React.Component {\n    /**\n     * Creates an instance of CommentAdd\n     * @param {*} props properies passed by the parent element\n     * @memberof CommentAdd\n     */\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.showAddComment = this.showAddComment.bind(this);\n        this.showEditComment = this.showEditComment.bind(this);\n        this.handleClickOpen = this.handleClickOpen.bind(this);\n    }\n\n    /**\n     * Shows the component to add a new comment\n     * @param {any} index Index of comment in the array\n     * @memberof CommentOptions\n     */\n    showAddComment(replyId) {\n        const { showAddComment } = this.props;\n        showAddComment(replyId);\n    }\n\n    /**\n     * Shows the component to edit a comment\n     * @param {any} index Index of comment in the array\n     * @memberof Comment\n     */\n    showEditComment(index) {\n        const { editIndex, showEditComment } = this.props;\n        if (editIndex === -1) {\n            showEditComment(index);\n        }\n    }\n\n    /**\n     * Shows the confimation dialog to delete a comment\n     * @param {Object} comment Comment that has to be deleted\n     * @memberof Comment\n     */\n    handleClickOpen(comment) {\n        const { editIndex, handleClickOpen } = this.props;\n        if (editIndex === -1) {\n            handleClickOpen(comment);\n        }\n    }\n\n    /**\n     * Returns the date and time in a particular format\n     * @param {any} timestamp Timestamp that has to be formatted\n     * @memberof CommentOptions\n     */\n    displayDate(timestamp) {\n        const localDate = new Date(timestamp);\n        const localDateString = localDate.toLocaleDateString(undefined, {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n        });\n        const localTimeString = localDate.toLocaleTimeString(undefined, {\n            hour: '2-digit',\n            minute: '2-digit',\n        });\n        return localDateString + ' ' + localTimeString;\n    }\n\n    /**\n     * Render method of the component\n     * @returns {React.Component} Comment html component\n     * @memberof CommentOptions\n     */\n    render() {\n        const {\n            classes, comment, editIndex, index, theme,\n        } = this.props;\n        const user = AuthManager.getUser();\n        const username = user && user.name;\n        const canDelete = (comment.createdBy === username) || user && user.isAdmin();\n        return (\n            <Grid container className={classes.verticalSpace} key={comment.id}>\n                {/* only the comment owner or admin can delete a comment */}\n                {canDelete && [\n                        <Grid item key='key-delete'>\n                            <Button\n                                size='small'\n                                className={editIndex === -1 ? classes.link : classes.disable}\n                                onClick={() => this.handleClickOpen(comment)}\n                                color='primary'\n                                aria-label={'Delete comment ' + comment.content}\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.Comments.CommentOptions.delete'\n                                    defaultMessage='Delete'\n                                />\n                            </Button>\n                        </Grid>,\n\n                    ]}\n\n                {comment.parentCommentId === null && AuthManager.getUser() && [\n                    <Grid item key='key-reply'>\n                        <Button\n                            size='small'\n                            className={classes.link}\n                            onClick={() => this.showAddComment(comment.id)}\n                            color='primary'\n                            aria-label={'Reply to comment ' + comment.content}\n                        >\n                            <FormattedMessage id='Apis.Details.Comments.CommentOptions.reply' defaultMessage='Reply' />\n                        </Button>\n                    </Grid>,\n                ]}\n\n                {/* only the comment owner can modify the comment from the exact entry point */}\n                {/* {comment.createdBy === AuthManager.getUser().name\n                    && comment.entryPoint === 'APIStore' && [\n                        <Grid item key='key-edit'>\n                            <Typography\n                                component='a'\n                                className={editIndex === -1 ? classes.link : classes.disable}\n                                onClick={() => this.showEditComment(index)}\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.Comments.CommentOptions.edit'\n                                    defaultMessage='Edit'\n                                />\n                            </Typography>\n                        </Grid>,\n                        <Grid item key='key-edit-verical-divider'>\n                            <VerticalDivider height={15} />\n                        </Grid>,\n                    ]} */}\n                {/* <Grid item className={classes.time}>\n                    <Typography component='a' variant='caption'>\n                        {this.displayDate(comment.createdTime)}\n                    </Typography>\n                </Grid>\n                {/* {editIndex === index\n                    ? null\n                    : [\n                        <Grid item key='key-category-vertical-divider'>\n                            <VerticalDivider height={15} />\n                        </Grid>,\n                        <Grid item className={classes.time} key='key-category'>\n                            <Typography component='a' variant='caption'>\n                                {comment.category}\n                            </Typography>\n                        </Grid>,\n                    ]}  */}\n            </Grid>\n        );\n    }\n}\n\nCommentOptions.defaultProps = {\n    showAddComment: null,\n};\n\nCommentOptions.propTypes = {\n    classes: PropTypes.instanceOf(Object).isRequired,\n    editIndex: PropTypes.number.isRequired,\n    index: PropTypes.number.isRequired,\n    comment: PropTypes.instanceOf(Object).isRequired,\n    handleClickOpen: PropTypes.func.isRequired,\n    showEditComment: PropTypes.func.isRequired,\n    showAddComment: PropTypes.func,\n};\n\nexport default withStyles(styles, { withTheme: true })(CommentOptions);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { TextField, Button, Typography, InputLabel } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Alert from '../../../Shared/Alert';\nimport API from '../../../../data/api';\n\nconst styles = theme => ({\n    commentIcon: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n    content: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n        paddingLeft: theme.spacing(2),\n        paddingTop: theme.spacing(1),\n        marginTop: theme.spacing(2),\n    },\n    textField: {\n        marginTop: 0,\n        marginRight: 5,\n        width: '100%',\n    },\n    commentAddWrapper: {\n        display: 'flex',\n        alignItems: 'top',\n        flexFlow: 'column',\n        '& label': {\n            marginBottom: theme.spacing(1),\n        },\n    },\n    commentAddButton: {\n        '& span.MuiButton-label': {\n            color: theme.palette.getContrastText(theme.palette.primary.main),\n        },\n    },\n});\n\n/**\n * Display a component to add a new comment\n * @class CommmentAdd\n * @extends {React.Component}\n */\nclass CommentAdd extends React.Component {\n    /**\n     * Creates an instance of CommentAdd\n     * @param {*} props properies passed by the parent element\n     * @memberof CommentAdd\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            content: '',\n            currentLength: 0,\n        };\n        this.inputChange = this.inputChange.bind(this);\n        this.handleClickAddComment = this.handleClickAddComment.bind(this);\n        this.handleClickCancel = this.handleClickCancel.bind(this);\n        // this.handleCategoryChange = this.handleCategoryChange.bind(this);\n        this.filterCommentToAddReply = this.filterCommentToAddReply.bind(this);\n    }\n\n    /**\n     * Handles the comment text when input changes\n     * @param {Object} {target} target element\n     * @memberof CommentAdd\n     */\n    inputChange({ target }) {\n        this.setState({ content: target.value, currentLength: target.value.length });\n    }\n\n    /**\n     * Hides the component to add a new comment when cancelled\n     * @memberof CommentAdd\n     */\n    handleClickCancel() {\n        this.setState({ content: '' });\n        const { handleShowReply } = this.props;\n        handleShowReply(-1);\n    }\n\n    /**\n     * Filters the comment to add the reply\n     * @memberof CommentAdd\n     */\n    filterCommentToAddReply(commentToFilter) {\n        const { replyTo } = this.props;\n        return commentToFilter.id === replyTo;\n    }\n\n    /**\n     * Handles adding a new comment\n     * @memberof CommentAdd\n     */\n    handleClickAddComment() {\n        const {\n            apiId, intl, replyTo, handleShowReply, addComment, addReply,\n        } = this.props;\n        const { content } = this.state;\n        const Api = new API();\n        const comment = {\n            content: content.trim(), category: \"general\"\n        };\n\n        // to check whether a string does not contain only white spaces\n        if (comment.content.replace(/\\s/g, '').length) {\n            Api.addComment(apiId, comment, replyTo)\n                .then((newComment) => {\n                    this.setState({ content: '' });\n                    if (replyTo === null) {\n                        if (addComment) {\n                            addComment(newComment.body);\n                        }\n                    } else if (addReply) {\n                        addReply(newComment.body);\n                    }\n                })\n                .catch((error) => {\n                    console.error(error);\n                    if (error.response && error.response.body && error.response.body.message) {\n                        Alert.error(error.response.body.message);\n                    } else {\n                        Alert.error(intl.formatMessage({\n                            defaultMessage: 'Something went wrong while adding the comment',\n                            id: 'Apis.Details.Comments.CommentAdd.something.went.wrong',\n                        }));\n                    }\n                });\n        } else {\n            Alert.error(intl.formatMessage({\n                defaultMessage: 'You cannot enter a blank comment',\n                id: 'Apis.Details.Comments.CommentAdd.error.blank.comment',\n            }));\n        }\n        this.setState({ currentLength: 0 });\n        if (replyTo !== null) {\n            handleShowReply();\n        }\n    }\n\n    handleCancel = () => {\n        const { cancelCallback } = this.props;\n        if (cancelCallback) {\n            cancelCallback();\n        } else {\n            this.handleClickCancel(-1);\n        }\n    };\n    /**\n     * Render method of the component\n     * @returns {React.Component} Comment html component\n     * @memberof CommentAdd\n     */\n    render() {\n        const {\n            classes, cancelButton, theme, intl,\n        } = this.props;\n        const { content, currentLength } = this.state;\n        return (\n            <Grid container spacing={1} className={classes.contentWrapper}>\n                <Grid item xs zeroMinWidth>\n                    <div className={classes.commentAddWrapper}>\n                        <InputLabel htmlFor=\"standard-multiline-flexible\">\n                            <FormattedMessage\n                                id='Apis.Details.Comments.CommentAdd.write.comment.label'\n                                defaultMessage='Write a comment'\n                            />\n                        </InputLabel>\n                        <TextField\n                            id='standard-multiline-flexible'\n                            autoFocus\n                            multiline\n                            rows='4'\n                            className={classes.textField}\n                            margin='normal'\n                            placeholder={intl.formatMessage({\n                                defaultMessage: 'Write a comment',\n                                id: 'Apis.Details.Comments.CommentAdd.write.comment.help',\n                            })}\n                            inputProps={{ maxLength: theme.custom.maxCommentLength }}\n                            value={content}\n                            onChange={this.inputChange}\n                            variant='outlined'\n                        />\n                        <Typography className={classes.content} align='right'>\n                            {currentLength + '/' + theme.custom.maxCommentLength}\n                        </Typography>\n                    </div>\n                    <Grid container spacing={1}>\n                        <Grid item>\n                            <Button\n                                variant='contained'\n                                color='primary'\n                                disabled={currentLength === 0}\n                                onClick={() => this.handleClickAddComment()}\n                                className={classes.commentAddButton}\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.Comments.CommentAdd.btn.add.comment'\n                                    defaultMessage='Comment'\n                                />\n                            </Button>\n                        </Grid>\n                        {cancelButton && (\n                            <Grid item>\n                                <Button onClick={this.handleCancel} className={classes.button}>\n                                    <FormattedMessage\n                                        id='Apis.Details.Comments.CommentAdd.btn.cancel'\n                                        defaultMessage='Cancel'\n                                    />\n                                </Button>\n                            </Grid>\n                        )}\n                    </Grid>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nCommentAdd.defaultProps = {\n    replyTo: null,\n    handleShowReply: null,\n    commentsUpdate: null,\n    cancelCallback: null,\n};\n\nCommentAdd.propTypes = {\n    classes: PropTypes.instanceOf(Object).isRequired,\n    cancelButton: PropTypes.bool.isRequired,\n    apiId: PropTypes.string.isRequired,\n    replyTo: PropTypes.string,\n    handleShowReply: PropTypes.func,\n    commentsUpdate: PropTypes.func,\n    allComments: PropTypes.instanceOf(Array).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n    cancelCallback: PropTypes.func,\n};\n\nexport default injectIntl(withStyles(styles, { withTheme: true })(CommentAdd));\n","/* eslint-disable react/prop-types */\n/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { Typography, Tooltip } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport Box from '@material-ui/core/Box';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\ndayjs.extend(relativeTime);\n\nimport classNames from 'classnames';\nimport Alert from 'AppComponents/Shared/Alert';\nimport ConfirmDialog from 'AppComponents/Shared/ConfirmDialog';\nimport API from 'AppData/api';\nimport CommentEdit from './CommentEdit';\nimport CommentOptions from './CommentOptions';\nimport CommentAdd from './CommentAdd';\n\nconst styles = (theme) => ({\n    link: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        cursor: 'pointer',\n    },\n    commentIcon: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n    commentText: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        marginTop: 0,\n        width: '99%',\n        whiteSpace: 'pre-wrap',\n        overflowWrap: 'break-word',\n        wordBreak: 'break-all',\n    },\n    root: {\n        marginTop: theme.spacing(1),\n    },\n    contentWrapper: {\n        paddingLeft: theme.spacing(2),\n        paddingTop: theme.spacing(1),\n    },\n    contentWrapperOverview: {\n        background: 'transparent',\n        width: '100%',\n    },\n    divider: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n        width: '60%',\n    },\n    paper: {\n        margin: 0,\n        marginTop: theme.spacing(1),\n        marginRight: theme.spacing(3),\n        paddingBottom: theme.spacing(3),\n    },\n    cleanBack: {\n        background: 'transparent',\n        width: '100%',\n        boxShadow: 'none',\n    },\n});\n\n/**\n * Display a particular comment and details\n * @class Comment\n * @extends {React.Component}\n */\nclass Comment extends React.Component {\n    /**\n     * Creates an instance of Comment\n     * @param {*} props properies passed by the parent element\n     * @memberof Comment\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            openDialog: false,\n            replyId: -1,\n            editIndex: -1,\n            deleteComment: null,\n        };\n        this.handleClickDeleteComment = this.handleClickDeleteComment.bind(this);\n        this.handleShowEdit = this.handleShowEdit.bind(this);\n        this.handleShowReply = this.handleShowReply.bind(this);\n        this.handleClickOpen = this.handleClickOpen.bind(this);\n        this.showAddComment = this.showAddComment.bind(this);\n        this.showEditComment = this.showEditComment.bind(this);\n        this.handleConfirmDialog = this.handleConfirmDialog.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.filterRemainingComments = this.filterRemainingComments.bind(this);\n        this.filterCommentToDelete = this.filterCommentToDelete.bind(this);\n        this.handleLoadMoreReplies = this.handleLoadMoreReplies.bind(this);\n        this.handleAddReply = this.handleAddReply.bind(this);\n        this.handleDeleteReply = this.handleDeleteReply.bind(this);\n    }\n\n    /**\n     * Add two numbers.\n     * @param {string} commentToFilter comment to filter.\n     * @returns {boolean} filtering needed or not.\n     */\n    filterRemainingComments(commentToFilter) {\n        const { deleteComment } = this.state;\n        return commentToFilter.id !== deleteComment.id;\n    }\n\n    /**\n     * Add two numbers.\n     * @param {JSON} commentToFilter comment to filter.\n     * @returns {string} id of the comment.\n     */\n    filterCommentToDelete(commentToFilter) {\n        const { deleteComment } = this.state;\n        return commentToFilter.id === deleteComment.parentCommentId;\n    }\n\n    /**\n     * Shows the component to add a new comment\n     * @param {any} id of comment\n     * @memberof Comment\n     */\n    showAddComment(id) {\n        this.setState({ replyId: id });\n    }\n\n    /**\n     * Shows the component to edit a comment\n     * @param {any} index Index of comment in the array\n     * @memberof Comment\n     */\n    showEditComment(index) {\n        const { editIndex } = this.state;\n        if (editIndex === -1) {\n            this.setState({ editIndex: index });\n        }\n    }\n\n    /**\n     * Hides the component to edit a comment\n     * @param {any} index Index of comment in the array\n     * @memberof Comment\n     */\n    handleShowEdit() {\n        this.setState({ editIndex: -1 });\n    }\n\n    /**\n     * Hides the component to add a new comment\n     * @param {any} index Index of comment in the array\n     * @memberof Comment\n     */\n    handleShowReply() {\n        this.setState({ replyId: -1 });\n    }\n\n    /**\n     * Shows the confimation dialog to delete a comment\n     * @param {Object} comment Comment that has to be deleted\n     * @memberof Comment\n     */\n    handleClickOpen(comment) {\n        const { editIndex } = this.state;\n        if (editIndex === -1) {\n            this.setState({ deleteComment: comment, openDialog: true });\n        }\n    }\n\n    /**\n     * Hides the confimation dialog to delete a comment\n     * @memberof Comment\n     */\n    handleClose() {\n        this.setState({ openDialog: false });\n    }\n\n    /**\n     * Handles the Confirm Dialog\n     * @param {*} message properies passed by the Confirm Dialog\n     * @memberof Comment\n     */\n    handleConfirmDialog(message) {\n        if (message) {\n            this.handleClickDeleteComment();\n        } else {\n            this.handleClose();\n        }\n    }\n\n    /**\n     * Handles deleting a comment\n     * @memberof Comment\n     */\n    handleClickDeleteComment() {\n        const apiClient = new API();\n\n        const { deleteComment } = this.state;\n        const {\n            apiId, intl, onDeleteComment,\n        } = this.props;\n        const commentIdOfCommentToDelete = deleteComment.id;\n        const parentCommentIdOfCommentToDelete = deleteComment.parentCommentId;\n        this.handleClose();\n\n        apiClient\n            .deleteComment(apiId, commentIdOfCommentToDelete)\n            .then(() => {\n                if (parentCommentIdOfCommentToDelete === null) {\n                    if (onDeleteComment) {\n                        onDeleteComment(commentIdOfCommentToDelete);\n                    }\n                    Alert.info(intl.formatMessage({\n                        defaultMessage: 'Comment has been successfully deleted',\n                        id: 'Apis.Details.Comments.Comment.comment.deleted',\n                    }));\n                } else {\n                    this.handleDeleteReply(parentCommentIdOfCommentToDelete, commentIdOfCommentToDelete);\n                    Alert.info(intl.formatMessage({\n                        defaultMessage: 'Reply comment has been successfully deleted',\n                        id: 'Apis.Details.Comments.Comment.reply.comment.deleted',\n                    }));\n                }\n            })\n            .catch((error) => {\n                console.error(error);\n                if (error.response) {\n                    Alert.error(error.response.body.message);\n                }\n                else {\n                    Alert.error(\n                        intl.formatMessage({\n                            defaultMessage: 'Something went wrong while deleting comment',\n                            id: 'Apis.Details.Comments.Comment.something.went.wrong',\n                        })\n                        + ' - '\n                        + commentIdOfCommentToDelete,\n                    );\n                }\n            });\n    }\n\n    /**\n     * Handles loading more comment replies\n     * @param {Object} comment comment for which replies should be loaded\n     * @memberof Comments\n     */\n    handleLoadMoreReplies(comment) {\n        const { apiId, comments, updateComment } = this.props;\n        const { id, replies: { count, list } } = comment;\n        const restApi = new API();\n\n        restApi\n            .getAllCommentReplies(apiId, id, 3, count)\n            .then((result) => {\n                if (result.body) {\n                    const { list: replyList, count: replyCount } = result.body;\n                    const existingComment = comments.find((entry) => entry.id === id);\n\n                    const newRepliesList = list.concat(replyList);\n                    const newCount = count + replyCount;\n                    const newLimit = newCount <= 3 ? 3 : newCount;\n\n                    const updatedComment = {\n                        ...existingComment,\n                        replies: {\n                            count: newCount,\n                            list: newRepliesList,\n                            pagination: { ...existingComment.replies.pagination, limit: newLimit },\n                        },\n                    };\n                    if (updateComment) {\n                        updateComment(updatedComment);\n                    }\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            });\n    }\n\n    /**\n     * Delete reply\n     * @param {string} parentCommentId parent comment of reply\n     * @param {string} replyCommentId deleted reply comment\n     * @memberof Comments\n     */\n    handleDeleteReply(parentCommentId, replyCommentId) {\n        const { comments, updateComment, apiId } = this.props;\n        const existingComment = comments.find((item) => item.id === parentCommentId);\n        const { replies } = existingComment;\n        // updated values\n        const updatedRepliesList = replies.list.filter((reply) => reply.id !== replyCommentId);\n        const newTotal = replies.pagination.total - 1;\n        const newLimit = replies.pagination.limit > newTotal ? newTotal : replies.pagination.limit;\n        const newCount = replies.count - 1;\n\n        if (newTotal > newCount) {\n            const restApi = new API();\n            restApi\n                .getAllCommentReplies(apiId, parentCommentId, 1, newLimit - 1)\n                .then((result) => {\n                    if (result.body) {\n                        const updatedComment = {\n                            ...existingComment,\n                            replies: {\n                                ...replies,\n                                list: [...updatedRepliesList, ...result.body.list],\n                                pagination: {\n                                    ...replies.pagination,\n                                    total: newTotal,\n                                },\n                            },\n                        };\n                        if (updateComment) {\n                            updateComment(updatedComment);\n                        }\n                    }\n                })\n                .catch((error) => {\n                    if (process.env.NODE_ENV !== 'production') {\n                        console.log(error);\n                    }\n                });\n        } else {\n            const updatedComment = {\n                ...existingComment,\n                replies: {\n                    ...replies,\n                    count: newCount,\n                    list: updatedRepliesList,\n                    pagination: {\n                        ...replies.pagination,\n                        limit: newLimit,\n                        total: newTotal,\n                    },\n                },\n            };\n            if (updateComment) {\n                updateComment(updatedComment);\n            }\n        }\n    }\n\n    /**\n     * Add new reply\n     * @param {Object} comment added reply comment\n     * @memberof Comments\n     */\n    handleAddReply(comment) {\n        const { comments, updateComment } = this.props;\n        const { parentCommentId } = comment;\n        const existingComment = comments.find((item) => item.id === parentCommentId);\n        const { replies } = existingComment;\n        const newCount = (replies.count || 0) + 1;\n        const newLimit = newCount <= 3 ? 3 : newCount;\n        const updatedComment = {\n            ...existingComment,\n            replies: {\n                ...replies,\n                count: newCount,\n                list: [...replies.list, comment],\n                pagination: {\n                    ...replies.pagination,\n                    limit: newLimit,\n                    offset: replies.pagination.offset || 0,\n                    total: replies.pagination.total + 1,\n                },\n            },\n        };\n        if (updateComment) {\n            updateComment(updatedComment);\n        }\n    }\n\n    /**\n     * Render method of the component\n     * @returns {React.Component} Comment html component\n     * @memberof Comment\n     */\n    render() {\n        const {\n            classes, comments, apiId, allComments, isOverview, isCrossTenantUser,\n        } = this.props;\n\n        const { editIndex, openDialog, replyId } = this.state;\n        return (\n            <>\n                <div className={classNames({ [classes.paper]: !isOverview && comments.length > 0 }, { [classes.cleanBack]: isOverview })}>\n                    {comments\n                        && comments\n                            .slice(0)\n                            .map((comment, index) => (\n                                <div\n                                    // eslint-disable-next-line react/no-array-index-key\n                                    key={comment.id + '-' + index}\n                                    className={classNames(\n                                        { [classes.contentWrapper]: !isOverview },\n                                        { [classes.contentWrapperOverview]: isOverview },\n                                    )}\n                                >\n                                    {index !== 0 && <Divider className={classes.divider} />}\n                                    <Grid md={8} container spacing={1} className={classNames({ [classes.root]: !isOverview })}>\n                                        <Grid item>\n                                            <Icon className={classes.commentIcon}>account_circle</Icon>\n                                        </Grid>\n                                        <Grid item xs zeroMinWidth>\n                                            <Typography noWrap className={classes.commentText}>\n                                                {(comment.commenterInfo && comment.commenterInfo.firstName) ?\n                                                    (comment.commenterInfo.firstName + comment.commenterInfo.lastName) :\n                                                    comment.createdBy}\n                                            </Typography>\n                                            <Tooltip title={comment.createdTime} aria-label={comment.createdTime}>\n                                                <Typography noWrap className={classes.commentText} variant='caption'>\n                                                    {dayjs(comment.createdTime).fromNow()}\n                                                </Typography>\n                                            </Tooltip>\n\n                                            <Typography className={classes.commentText}>{comment.content}</Typography>\n\n                                            {!isCrossTenantUser && (\n                                                <CommentOptions\n                                                    comment={comment}\n                                                    editIndex={editIndex}\n                                                    index={index}\n                                                    showAddComment={this.showAddComment}\n                                                    handleClickOpen={this.handleClickOpen}\n                                                    showEditComment={this.showEditComment}\n                                                />\n                                            )}\n\n                                            {comment.id === replyId && (\n                                                <Box ml={6} mb={2}>\n                                                    <CommentAdd\n                                                        apiId={apiId}\n                                                        replyTo={comment.id}\n                                                        allComments={allComments}\n                                                        handleShowReply={this.handleShowReply}\n                                                        cancelButton\n                                                        addReply={this.handleAddReply}\n                                                    />\n                                                </Box>\n                                            )}\n\n                                            {comment.replies && comment.replies.list.map((reply, index) => (\n                                                <>\n                                                    <Box ml={8}>\n                                                        {index !== 0 && <Divider className={classes.divider} />}\n                                                        <Grid container spacing={1} className={classes.root}>\n                                                            <Grid item>\n                                                                <Icon className={classes.commentIcon}>account_circle</Icon>\n                                                            </Grid>\n                                                            <Grid item xs zeroMinWidth>\n                                                                <Typography noWrap className={classes.commentText}>\n                                                                    {(reply.commenterInfo && reply.commenterInfo.fullName)\n                                                                        ? reply.commenterInfo.fullName : reply.createdBy}\n                                                                </Typography>\n                                                                <Tooltip title={comment.createdTime} aria-label={comment.createdTime}>\n                                                                    <Typography noWrap className={classes.commentText} variant='caption'>\n                                                                        {dayjs(reply.createdTime).fromNow()}\n                                                                    </Typography>\n                                                                </Tooltip>\n\n                                                                {index !== editIndex && (\n                                                                    <Typography className={classes.commentText}>\n                                                                        {reply.content}</Typography>\n                                                                )}\n\n                                                                {index === editIndex && (\n                                                                    <CommentEdit\n                                                                        apiId={apiId}\n                                                                        allComments={reply}\n                                                                        comment={reply}\n                                                                        toggleShowEdit={this.handleShowEdit}\n                                                                    />\n                                                                )}\n\n                                                                {!isCrossTenantUser && (\n                                                                    <CommentOptions\n                                                                        comment={reply}\n                                                                        editIndex={editIndex}\n                                                                        index={index}\n                                                                        showAddComment={this.showAddComment}\n                                                                        handleClickOpen={this.handleClickOpen}\n                                                                        showEditComment={this.showEditComment}\n                                                                    />\n                                                                )}\n                                                            </Grid>\n                                                        </Grid>\n                                                    </Box>\n                                                </>\n                                            ))}\n                                            {comment.replies && comment.replies.count < comment.replies.pagination.total\n                                                && (\n                                                    <div className={classes.contentWrapper}>\n                                                        <Grid container spacing={4} className={classes.root}>\n                                                            <Grid item>\n                                                                <Typography className={classes.verticalSpace} variant='body1'>\n                                                                    <a\n                                                                        className={classes.link + ' ' + classes.loadMoreLink}\n                                                                        onClick={() => this.handleLoadMoreReplies(comment)}\n                                                                        onKeyDown={() => this.handleLoadMoreReplies(comment)}\n                                                                    >\n                                                                        <FormattedMessage\n                                                                            id='Apis.Details.Comments.Comment.load.more.replies'\n                                                                            defaultMessage='Show More Replies'\n                                                                        />\n                                                                    </a>\n                                                                </Typography>\n                                                            </Grid>\n                                                            <Grid item>\n                                                                <Typography className={classes.verticalSpace} zvariant='body1'>\n                                                                    {'(' + (comment.replies.count) + ' of '\n                                                                        + comment.replies.pagination.total + ')'}\n                                                                </Typography>\n                                                            </Grid>\n                                                        </Grid>\n                                                    </div>\n                                                )}\n                                        </Grid>\n                                    </Grid>\n                                </div>\n                            ))}\n                </div>\n                <ConfirmDialog\n                    key='key-dialog'\n                    labelCancel={<FormattedMessage\n                        id='Apis.Details.Comments.Comment.delete.dialog.label.cancel'\n                        defaultMessage='Cancel'\n                    />}\n                    title={<FormattedMessage\n                        id='Apis.Details.Comments.Comment.delete.dialog.title'\n                        defaultMessage='Confirm Delete'\n                    />}\n                    message={<FormattedMessage\n                        id='Apis.Details.Comments.Comment.delete.dialog.message'\n                        defaultMessage='Are you sure you want to delete this comment?'\n                    />}\n                    labelOk={<FormattedMessage\n                        id='Apis.Details.Comments.Comment.delete.dialog.label.ok'\n                        defaultMessage='Yes'\n                    />}\n                    callback={this.handleConfirmDialog}\n                    open={openDialog}\n                />\n            </>\n        );\n    }\n}\nComment.defaultProps = {\n    isOverview: false,\n};\nComment.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    apiId: PropTypes.string.isRequired,\n    allComments: PropTypes.instanceOf(Array).isRequired,\n    comments: PropTypes.instanceOf(Array).isRequired,\n    isOverview: PropTypes.bool,\n    isCrossTenantUser: PropTypes.bool.isRequired,\n    updateComment: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(Comment));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport { Typography } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid/Grid';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport classNames from 'classnames';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport withSettings from 'AppComponents/Shared/withSettingsContext';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport Comment from './Comment';\nimport CommentAdd from './CommentAdd';\nimport API from '../../../../data/api';\nimport { ApiContext } from '../ApiContext';\nimport AuthManager from '../../../../data/AuthManager';\n\nconst styles = (theme) => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n    paper: {\n        marginRight: theme.spacing(3),\n        paddingBottom: theme.spacing(3),\n        paddingRight: theme.spacing(2),\n        '& span, & h5, & label, & td, & li, & div, & input': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        },\n    },\n    contentWrapper: {\n        paddingLeft: theme.spacing(3),\n        marginTop: theme.spacing(1),\n    },\n    contentWrapperOverview: {\n        padding: 0,\n        width: '100%',\n        boxShadow: 'none',\n    },\n    titleSub: {\n        cursor: 'pointer',\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n    link: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        cursor: 'pointer',\n    },\n    verticalSpace: {\n        marginTop: theme.spacing(0.2),\n    },\n    loadMoreLink: {\n        textDecoration: 'none',\n    },\n    genericMessageWrapper: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n        marginRight: theme.spacing(3),\n    },\n    paperProgress: {\n        padding: theme.spacing(3),\n        marginTop: theme.spacing(2),\n    },\n    button: {\n        textTransform: 'capitalize',\n    },\n});\n\n/**\n * Display a comment list\n * @class Comments\n * @extends {React.Component}\n */\nclass Comments extends Component {\n    static contextType = ApiContext;\n\n    /**\n     * Creates an instance of Comments\n     * @param {*} props properies passed by the parent element\n     * @memberof Comments\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            expanded: true,\n            allComments: null,\n            comments: [],\n            totalComments: 0,\n            apiId: null,\n            showCommentAdd: false,\n        };\n        this.handleExpandClick = this.handleExpandClick.bind(this);\n        this.handleLoadMoreComments = this.handleLoadMoreComments.bind(this);\n        this.toggleCommentAdd = this.toggleCommentAdd.bind(this);\n        this.addComment = this.addComment.bind(this);\n        this.updateComment = this.updateComment.bind(this);\n        this.onDeleteComment = this.onDeleteComment.bind(this);\n        this.isCrossTenant = this.isCrossTenant.bind(this);\n    }\n\n    /**\n     * Gets all the comments for a particular API, when component mounts\n     * @memberof Comments\n     */\n    componentDidMount() {\n        let {\n            apiId, theme, match, intl, isOverview, setCount,\n        } = this.props;\n        if (match) apiId = match.params.apiUuid;\n        this.setState({ apiId });\n\n        const restApi = new API();\n        const limit = theme.custom.commentsLimit;\n        const offset = 0;\n\n        restApi\n            .getAllComments(apiId, limit, offset)\n            .then((result) => {\n                let commentList = result.body.list;\n                if (isOverview) {\n                    setCount(commentList.length);\n                    if (commentList.length > 2) {\n                        commentList = commentList.slice(commentList.length - 3, commentList.length);\n                    }\n                }\n                this.setState({\n                    allComments: commentList,\n                    comments: commentList,\n                    totalComments: result.body.pagination.total,\n                });\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            });\n    }\n\n    /**\n     * Handles loading the previous comments\n     * @memberof Comments\n     */\n    handleLoadMoreComments() {\n        const { allComments, apiId, comments } = this.state;\n        const { theme } = this.props;\n        const restApi = new API();\n        const limit = theme.custom.commentsLimit;\n        const offset = comments.length;\n\n        restApi\n            .getAllComments(apiId, limit, offset)\n            .then((result) => {\n                const newAllCommentList = allComments.concat(result.body.list);\n                this.setState({ allComments: newAllCommentList, comments: newAllCommentList });\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            });\n    }\n\n    /**\n     * Handles expanding the comment section\n     * @memberof Comments\n     */\n    handleExpandClick() {\n        const { expanded } = this.state;\n        this.setState({ expanded: !expanded });\n    }\n\n    /**\n     * Add comment to the comment list\n     * @param {any} comment added comment\n     * @memberof Comments\n     */\n    addComment(comment) {\n        const { totalComments, allComments } = this.state;\n        const { theme: { custom: { commentsLimit } } } = this.props;\n        const newTotal = totalComments + 1;\n\n        this.setState({\n            allComments: [comment, ...allComments],\n            totalComments: newTotal,\n            comments: [comment, ...allComments],\n        });\n    }\n\n    /**\n     * Update a specific comment in the comment list\n     * @param {any} comment updated comment\n     * @memberof Comments\n     */\n    updateComment(comment) {\n        const { comments } = this.state;\n\n        const newComments = comments.reduce((acc, cur) => {\n            let temp = cur;\n            if (cur.id === comment.id) {\n                temp = comment;\n            }\n            return [...acc, temp];\n        }, []);\n        this.setState({\n            allComments: newComments,\n            comments: newComments,\n        });\n    }\n\n    /**\n     * Delete a comment\n     * @param {string} commentIdOfCommentToDelete id of deleted commetn\n     * @memberof Comments\n     */\n    onDeleteComment(commentIdOfCommentToDelete) {\n        const {\n            apiId, comments, totalComments,\n        } = this.state;\n\n        const remainingComments = comments.filter((item) => item.id !== commentIdOfCommentToDelete);\n        const newTotal = totalComments - 1;\n\n        if (newTotal > remainingComments.length) {\n            const restApi = new API();\n\n            restApi\n                .getAllComments(apiId, 1, remainingComments.length)\n                .then((result) => {\n                    if (result.body) {\n                        this.setState({\n                            totalComments: newTotal,\n                            comments: [...remainingComments, ...result.body.list],\n                            allComments: [...remainingComments, ...result.body.list],\n                        });\n                    }\n                })\n                .catch((error) => {\n                    if (process.env.NODE_ENV !== 'production') {\n                        console.log(error);\n                    }\n                });\n        } else {\n            this.setState({\n                totalComments: newTotal,\n                comments: remainingComments,\n                allComments: remainingComments,\n            });\n        }\n    }\n\n    /**\n     * Method to compare the tenant domains\n     * @param {*} advertiseInfo advertiseInfo object for the API\n     * @param {*} currentUser current logged in user\n     * @returns {boolean} true or false\n     */\n    isCrossTenant(currentUser, tenantDomain) {\n        if (!tenantDomain) {\n            return false;\n        }\n        let loggedInUserDomain = null;\n        const loggedInUser = currentUser.name;\n\n        if (loggedInUser.includes('@')) {\n            const splitLoggedInUser = loggedInUser.split('@');\n            loggedInUserDomain = splitLoggedInUser[splitLoggedInUser.length - 1];\n        } else {\n            loggedInUserDomain = 'carbon.super';\n        }\n\n        if (tenantDomain !== loggedInUserDomain) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    toggleCommentAdd() {\n        this.setState((prevState) => ({ showCommentAdd: !prevState.showCommentAdd }));\n    }\n\n    /**\n     * Render method of the component\n     * @returns {React.Component} Comment html component\n     * @memberof Comments\n     */\n    render() {\n        const { classes, isOverview, tenantDomain } = this.props;\n        const {\n            comments, allComments, totalComments, showCommentAdd,\n        } = this.state;\n        const isCrossTenantUser = AuthManager.getUser() && this.isCrossTenant(AuthManager.getUser(), tenantDomain);\n        return (\n            <ApiContext.Consumer>\n                {({ api }) => (\n                    <div\n                        className={classNames(\n                            { [classes.contentWrapper]: !isOverview },\n                            { [classes.contentWrapperOverview]: isOverview },\n                        )}\n                    >\n                        {!isOverview && (\n                            <div className={classes.root}>\n                                <Typography variant='h4' component='h2' className={classes.titleSub}>\n                                    {totalComments + (' ')}\n                                    <FormattedMessage id='Apis.Details.Comments.title' defaultMessage='Comments' />\n                                </Typography>\n                            </div>\n                        )}\n\n                        {!isCrossTenantUser && AuthManager.getUser() &&(\n                            <Box mt={2} ml={1}>\n                                {!showCommentAdd && (\n                                    <Button\n                                        color='primary'\n                                        size='small'\n                                        className={classes.button}\n                                        startIcon={<AddCircleOutlineIcon />}\n                                        onClick={this.toggleCommentAdd}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.Comments.write.a.new.comment'\n                                            defaultMessage='Write a New Comment'\n                                        />\n                                    </Button>\n                                )}\n                                {showCommentAdd && (\n                                    <CommentAdd\n                                        apiId={api.id}\n                                        commentsUpdate={this.addComment}\n                                        addComment={this.addComment}\n                                        allComments={allComments}\n                                        replyTo={null}\n                                        cancelCallback={this.toggleCommentAdd}\n                                        cancelButton\n                                    />\n                                )}\n                            </Box>\n                        )}\n                        {!allComments && (\n                            <Paper className={classes.paperProgress}>\n                                <CircularProgress size={24} />\n                            </Paper>\n                        )}\n                        {allComments && totalComments === 0\n                            && (\n                                <Box mt={2} mb={2} ml={1}>\n                                    <InlineMessage\n                                        type='info'\n                                        title={(\n                                            <FormattedMessage\n                                                id='Apis.Details.Comments.no.comments'\n                                                defaultMessage='No Comments Yet'\n                                            />\n                                        )}\n                                    >\n                                        <Typography component='p'>\n                                            <FormattedMessage\n                                                id='Apis.Details.Comments.no.comments.content'\n                                                defaultMessage='No comments available for this API yet'\n                                            />\n                                        </Typography>\n                                    </InlineMessage>\n                                </Box>\n                            )}\n                        <Comment\n                            comments={comments}\n                            isCrossTenantUser={isCrossTenantUser}\n                            apiId={api.id}\n                            allComments={allComments}\n                            onDeleteComment={this.onDeleteComment}\n                            updateComment={this.updateComment}\n                        />\n                        {totalComments > comments.length && (\n                            <div className={classes.contentWrapper}>\n                                <Grid container spacing={4} className={classes.root}>\n                                    <Grid item>\n                                        <Typography className={classes.verticalSpace} variant='body1'>\n                                            <a\n                                                className={classes.link + ' ' + classes.loadMoreLink}\n                                                onClick={this.handleLoadMoreComments}\n                                            >\n                                                <FormattedMessage\n                                                    id='Apis.Details.Comments.load.previous.comments'\n                                                    defaultMessage='Show More'\n                                                />\n                                            </a>\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item>\n                                        <Typography className={classes.verticalSpace} variant='body1'>\n                                            {'(' + comments.length + ' of ' + totalComments + ')'}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </div>\n                        )}\n                    </div>\n                )}\n            </ApiContext.Consumer>\n        );\n    }\n}\n\nComments.defaultProps = {\n    setCount: () => { },\n};\nComments.propTypes = {\n    classes: PropTypes.instanceOf(Object).isRequired,\n    setCount: PropTypes.func,\n};\n\nexport default injectIntl(withStyles(styles, { withTheme: true })(withSettings(Comments)));\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z\"\n}), 'Code');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 14H4V8l8 5 8-5v10zm-8-7L4 6h16l-8 5z\"\n}), 'MailOutline');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    width: '100%',\n    overflowX: 'auto'\n  }\n};\nvar TableContainer = /*#__PURE__*/React.forwardRef(function TableContainer(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableContainer.propTypes = {\n  /**\n   * The table itself, normally `<Table />`\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableContainer'\n})(TableContainer);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport CodeIcon from '@material-ui/icons/Code';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Icon from '@material-ui/core/Icon';\n\n/**\n * Position the modal\n * @returns {JSON} css atrributes JSON.\n */\nfunction getModalStyle() {\n    const top = 50;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        position: 'absolute',\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n    codeIcon: {\n        cursor: 'pointer',\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n    },\n    code: {\n        background: '#efefef',\n        color: 'cc0000',\n        border: 'solid 1px #ccc',\n        padding: theme.spacing(1),\n    },\n    iconStyle: {\n        position: 'absolute',\n        top: 60,\n        right: 30,\n    },\n}));\n\n/**\n * Adds two numbers together.\n * @param {JSON} props props passed from parent\n * @returns {JSX} code in a modal\n */\nfunction EmbedCode(props) {\n    const { intl } = props;\n    const classes = useStyles();\n    // getModalStyle is not a pure function, we roll the style only on the first render\n    const [modalStyle] = React.useState(getModalStyle);\n    const [open, setOpen] = React.useState(false);\n    const [codeCopied, setCodeCopied] = React.useState(false);\n    const url = new URL(window.location);\n    url.searchParams.set('widget', true);\n\n    const onCopy = () => {\n        setCodeCopied(true);\n        setTimeout(() => setCodeCopied(false), 2000);\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const embedCode = '<iframe width=\"450\" height=\"120\" src=\"'\n        + url + '\" frameBorder=\"0\" allowFullScreen title=\"Embed API\" />';\n\n    return (\n        <div>\n            <CodeIcon className={classes.codeIcon} onClick={handleOpen} />\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby='simple-modal-title'\n                aria-describedby='simple-modal-description'\n            >\n                <div style={modalStyle} className={classes.paper}>\n                    <h2 id='simple-modal-title'>\n                        <FormattedMessage\n                            id='Apis.Details.Social.EmbedCode'\n                            defaultMessage='Embed'\n                        />\n                    </h2>\n                    <div className={classes.code}>\n                        <code>{embedCode}</code>\n                    </div>\n                    <Tooltip\n                        title={\n                            codeCopied\n                                ? intl.formatMessage({\n                                    defaultMessage: 'Copied',\n                                    id: 'Apis.Details.Environments.copied',\n                                })\n                                : intl.formatMessage({\n                                    defaultMessage: 'Copy to clipboard',\n                                    id: 'Apis.Details.Environments.copy.to.clipboard',\n                                })\n                        }\n                        placement='right'\n                        className={classes.iconStyle}\n                    >\n                        <CopyToClipboard\n                            text={embedCode}\n                            onCopy={onCopy}\n                        >\n                            <Icon color='secondary'>file_copy</Icon>\n                        </CopyToClipboard>\n                    </Tooltip>\n                </div>\n            </Modal>\n        </div>\n    );\n}\n\nexport default injectIntl(EmbedCode);\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { injectIntl } from 'react-intl';\nimport { app } from 'Settings';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport EmbedCode from 'AppComponents/Apis/Details/Social/EmbedCode';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\n\nconst useStyles = makeStyles((theme) => ({\n    socialLink: {\n        display: 'inline-block',\n        '& img': {\n            width: 32,\n            marginRight: theme.spacing(1),\n        },\n    },\n    oneFlex: {\n        flex: 1,\n    },\n    socialLinkWrapper: {\n        marginTop: 16,\n        display: 'flex',\n        alignItems: 'center',\n        paddingRight: theme.spacing(2),\n        '& > div': {\n            display: 'inline-block',\n        },\n    },\n    divider: {\n        display: 'inline-block',\n        borderRight: 'solid 1px #ccc',\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        height: 30,\n    },\n    codeIcon: {\n        cursor: 'pointer',\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n    },\n}));\n\n/**\n * Render the social icons\n * @param {int} num1 The first number.\n * @param {int} num2 The second number.\n * @returns {int} The sum of the two numbers.\n */\nfunction Social() {\n    const classes = useStyles();\n    const { api } = useContext(ApiContext);\n    const { name: apiName } = api;\n    const apiUrl = encodeURI(window.location);\n    const theme = useTheme();\n    const [slack, github] = [\n        api.additionalProperties.find((prop) => prop.name === 'slack_url'),\n        api.additionalProperties.find((prop) => prop.name === 'github_repo'),\n    ];\n    const {\n        custom: {\n            social: {\n                showSharing: {\n                    active, showFacebook, showReddit, showTwitter, showEmbed, showEmail,\n                },\n            },\n        },\n    } = theme;\n    return (\n        <>\n            <div className={classes.oneFlex} />\n            <div className={classes.socialLinkWrapper}>\n                {slack && (\n                    <>\n                        <a\n                            className={classes.socialLink}\n                            id='Slack'\n                            href={slack.value}\n                            target='_blank'\n                            rel='noopener noreferrer'\n                            title='Slack'\n                        >\n                            <img\n                                src={`${app.context}/site/public/images/social/slack.png`}\n                                alt='Slack'\n                            />\n                        </a>\n                    </>\n                )}\n                {github && (\n                    <>\n                        <a\n                            className={classes.socialLink}\n                            id='github'\n                            href={github.value}\n                            target='_blank'\n                            rel='noopener noreferrer'\n                            title='GitHub'\n                        >\n                            <img\n                                src={`${app.context}/site/public/images/social/github.jpg`}\n                                alt='GitHub'\n                            />\n                        </a>\n                    </>\n                )}\n                {active && (slack || github) && (\n                    <div className={classes.divider} />\n                )}\n                {active && showFacebook && (\n                    <a\n                        className={classes.socialLink}\n                        id='facebook'\n                        href={`http://www.facebook.com/sharer.php?u=${apiUrl}`}\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        title='Facebook'\n                    >\n                        <img\n                            src={`${app.context}/site/public/images/social/facebook.png`}\n                            alt='Facebook'\n                        />\n                    </a>\n                )}\n                {/* Twitter */}\n                {active && showTwitter && (\n                    <a\n                        className={classes.socialLink}\n                        id='Twitter'\n                        href={`http://twitter.com/share?url=${apiUrl}&text=${apiName}`}\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        title='Twitter'\n                    >\n                        <img\n                            src={`${app.context}/site/public/images/social/twitter.png`}\n                            alt='Twitter'\n                        />\n                    </a>\n                )}\n                {/* Reddit */}\n                {active && showReddit && (\n                    <a\n                        className={classes.socialLink}\n                        id='Reddit'\n                        href={`http://www.reddit.com/submit?url=${apiUrl}&title=${apiName}`}\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        title='Reddit'\n                    >\n                        <img\n                            src={`${app.context}/site/public/images/social/reddit.png`}\n                            alt='Reddit'\n                        />\n                    </a>\n                )}\n                {active && showEmbed && (\n                    <>\n                        <div className={classes.divider} />\n                        {/* TODO: Fix spelling mistake ~tmkb */}\n                        <EmbedCode />\n                    </>\n                )}\n                {active && showEmail && (\n                    <>\n                        <div className={classes.divider} />\n                        <a href={`mailto:?Subject=${apiName}&body=Link+:+${apiUrl}\"`} className={classes.codeIcon}>\n                            <MailOutlineIcon />\n                        </a>\n                    </>\n                )}\n            </div>\n        </>\n    );\n}\n\nexport default injectIntl(Social);\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Alert from '@material-ui/lab/Alert';\nimport { FormattedMessage } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n/**\n * @export\n * @param {JSON} props props from parent\n * @return {JSX} rendered output\n */\nexport default function TaskState(props) {\n    const {\n        completed, errors, inProgress, children, completedMessage, inProgressMessage,\n    } = props;\n    let severity;\n    let message = children;\n    if (completed) {\n        severity = 'success';\n        if (completedMessage) {\n            message = completedMessage;\n        }\n    } else if (inProgress) {\n        severity = 'info';\n        if (inProgressMessage) {\n            message = inProgressMessage;\n        }\n    } else {\n        severity = 'waiting';\n    }\n    if (errors) {\n        severity = 'error';\n        if (errors.response) {\n            const { body } = errors.response;\n            message = (\n                <>\n                    <b>\n                        [\n                        {body.code}\n                        ]\n                    </b>\n                    {' '}\n                    :\n                    {body.description}\n                </>\n            );\n        } else {\n            message = (\n                <>\n                    <FormattedMessage\n                        id='Apis.Listing.TaskState.generic.error.prefix'\n                        defaultMessage='Error while'\n                    />\n                    {' '}\n                    {inProgressMessage}\n                </>\n            );\n        }\n    }\n\n    return (\n        <>\n            <Grid item xs={12}>\n                <Alert\n                    icon={inProgress ? <CircularProgress size={20} thickness={2} /> : null}\n                    variant={errors ? 'standard' : 'plain'}\n                    severity={severity}\n                >\n                    {message}\n                </Alert>\n            </Grid>\n        </>\n    );\n}\n","/* eslint-disable prefer-destructuring */\n/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, {\n    useReducer, useContext, useState,\n} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { useHistory } from 'react-router-dom';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport API from 'AppData/api';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Application from 'AppData/Application';\nimport Alert from 'AppComponents/Shared/Alert';\nimport AuthManager from 'AppData/AuthManager';\nimport CONSTANTS from 'AppData/Constants';\nimport { ApiContext } from './ApiContext';\nimport TaskState from './TaskState';\n\nconst useStyles = makeStyles(() => ({\n    tryoutLabel: {\n        whiteSpace: 'nowrap',\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    statusBox: {\n        outline: 'none',\n    },\n    asyncButton: {\n        minWidth: 115,\n    },\n}));\n\nconst keyStates = {\n    COMPLETED: 'COMPLETED',\n    APPROVED: 'APPROVED',\n    CREATED: 'CREATED',\n    REJECTED: 'REJECTED',\n};\n\nconst restApi = new API();\nconst initialTaskStates = {\n    subscribe: { inProgress: true, completed: false, errors: false },\n    prepare: { inProgress: false, completed: false, errors: false },\n    generate: { inProgress: false, completed: false, errors: false },\n};\n\nconst tasksReducer = (state, action) => {\n    const { name, status } = action;\n    if (name === 'reset') {\n        return initialTaskStates;\n    }\n    // In the case of a key collision, the right-most (last) object's value wins out\n    return { ...state, [name]: { ...state[name], ...status } };\n};\n/**\n *\n * @returns {JSX} rendered output\n */\nexport default function GoToTryOut() {\n    const user = AuthManager.getUser();\n    const {\n        api, subscribedApplications, applicationsAvailable, updateSubscriptionData,\n    } = useContext(ApiContext);\n    const defaultApplications = applicationsAvailable.filter((x) => x.label === 'DefaultApplication');\n    const defaultApplication = defaultApplications.length > 0 ? defaultApplications[0] : null;\n    const [tasksStatus, tasksStatusDispatcher] = useReducer(tasksReducer, initialTaskStates);\n    const [showStatus, setShowStatus] = useState(false);\n    const classes = useStyles();\n    const intl = useIntl();\n    const history = useHistory();\n    const theme = useTheme();\n    const isXsOrBelow = useMediaQuery(theme.breakpoints.down('xs'));\n    const isAsyncAPI = (api\n        && (api.type === CONSTANTS.API_TYPES.WS\n            || api.type === CONSTANTS.API_TYPES.WEBSUB\n            || api.type === CONSTANTS.API_TYPES.SSE\n            || api.type === CONSTANTS.API_TYPES.ASYNC));\n    const isPrototypedAPI = api.lifeCycleStatus && api.lifeCycleStatus.toLowerCase() === 'prototyped';\n    const getKeyRequest = async () => {\n        const promisedKeyManagers = restApi.getKeyManagers();\n        return promisedKeyManagers\n            .then((response) => {\n                const keyRequest = {\n                    keyType: 'SANDBOX',\n                    supportedGrantTypes: [],\n                    callbackUrl: '',\n                    additionalProperties: {},\n                    keyManager: '',\n                };\n                const responseKeyManagerList = [];\n                response.body.list.map((item) => responseKeyManagerList.push(item));\n\n                // Selecting a key manager from the list of key managers.\n                let selectedKeyManager;\n                if (responseKeyManagerList.length > 0) {\n                    const responseKeyManagerListDefault = responseKeyManagerList.filter((x) => x.name === 'Resident Key Manager');\n                    selectedKeyManager = responseKeyManagerListDefault.length > 0 ? responseKeyManagerListDefault[0]\n                        : responseKeyManagerList[0];\n                }\n\n                // Setting key request\n                try {\n                    keyRequest.keyManager = selectedKeyManager.id;\n                    // Filtering Grant Types for Token Exchange\n                    keyRequest.supportedGrantTypes = selectedKeyManager.availableGrantTypes\n                        .filter((k) => (k !== 'urn:ietf:params:oauth:grant-type:token-exchange'));\n                    if (selectedKeyManager.availableGrantTypes.includes('implicit')\n                        || selectedKeyManager.availableGrantTypes.includes('authorization_code')) {\n                        keyRequest.callbackUrl = 'http://localhost';\n                    }\n                } catch (e) {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Credentials.Wizard.GenerateKeysStep.error.keymanager',\n                        defaultMessage: 'Error while selecting the key manager',\n                    }));\n                }\n                return keyRequest;\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            });\n    };\n    const generateKeys = async (keyRequest, applicationId) => {\n        const application = await Application.get(applicationId);\n        const keys = await application.getKeys(keyRequest.keyType);\n        if (keys.size > 0) {\n            return;\n        }\n        application.generateKeys(\n            keyRequest.keyType, keyRequest.supportedGrantTypes,\n            keyRequest.callbackUrl,\n            keyRequest.additionalProperties, keyRequest.keyManager,\n        ).then((response) => {\n            if (response.keyState === keyStates.CREATED || response.keyState === keyStates.REJECTED) {\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.GoToTryOut.error.keymanager',\n                    defaultMessage: 'Key Generation is Blocked.',\n                }));\n            } else {\n                console.log('Keys generated successfully with ID : ' + response);\n            }\n            return response;\n        }).catch((error) => {\n            if (process.env.NODE_ENV !== 'production') {\n                console.log(error);\n            }\n            const { status } = error;\n            if (status === 404) {\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.GoToTryOut.error.404',\n                    defaultMessage: 'Resource not found.',\n                }));\n            }\n        });\n    };\n\n    const taskManager = async (promisedTask, name) => {\n        tasksStatusDispatcher({ name, status: { inProgress: true } });\n        let taskResult;\n        try {\n            taskResult = await promisedTask;\n        } catch (errors) {\n            console.error(errors);\n            tasksStatusDispatcher({ name, status: { errors } });\n        }\n        tasksStatusDispatcher({ name, status: { inProgress: false, completed: true } });\n        return taskResult;\n    };\n\n    const pushToTryout = async () => {\n        await updateSubscriptionData();\n        if (isAsyncAPI) {\n            history.push('/apis/' + api.id + '/definition');\n        } else {\n            history.push('/apis/' + api.id + '/test');\n        }\n    };\n\n    /**\n     *Handle onClick event for `Deploy Sample API` Button\n     * @memberof GoToTryOut\n     */\n    const handleTryOutClick = async () => {\n        let throttlingPolicy = null;\n        if (api.tiers && api.tiers.length > 0) {\n            throttlingPolicy = api.tiers[0].tierName;\n        } else {\n            history.push('/apis/' + api.id + '/test');\n        }\n        setShowStatus(true);\n        // Get the request for key generation using the key managers.\n        const keyRequest = await taskManager(getKeyRequest(), 'prepare');\n        // Generate consumer key and secret\n        await taskManager(generateKeys(keyRequest, defaultApplication.value), 'generate');\n        // Subscribe this API to the default application\n        await taskManager(restApi.subscribe(\n            api.id,\n            defaultApplication.value,\n            throttlingPolicy,\n        ), 'subscribe');\n    };\n\n    Object.values(tasksStatus)\n        .map((tasks) => tasks.completed)\n        .reduce((done, current) => current && done);\n    const anyErrors = Object.values(tasksStatus).map((tasks) => tasks.errors).find((error) => error !== false);\n\n    const redirectButton = isAsyncAPI ? (\n        <Button\n            variant='outlined'\n            color='primary'\n            size='small'\n            classes={{ root: classes.asyncButton, label: classes.tryoutLabel }}\n            onClick={pushToTryout}\n        >\n            <FormattedMessage\n                id='Apis.Details.GoToTryOut.btn.view.definition'\n                defaultMessage='View Definition'\n            />\n        </Button>\n    ) : (\n        <Button\n            variant='contained'\n            color='primary'\n            size='medium'\n            classes={{ label: classes.tryoutLabel }}\n            onClick={pushToTryout}\n            aria-label='Go to Try Out page'\n        >\n            <FormattedMessage\n                id='Apis.Details.GoToTryOut.btn.tryout'\n                defaultMessage='Try Out'\n            />\n        </Button>\n    );\n    if (!defaultApplication\n        || subscribedApplications.length > 0\n        || api.advertiseInfo.advertised\n        || !user\n        || isAsyncAPI\n        || isPrototypedAPI) {\n        return (\n            <>{redirectButton}</>\n\n        );\n    }\n    return (\n        <>\n            <Button\n                onClick={handleTryOutClick}\n                variant='contained'\n                color='primary'\n                size='medium'\n                aria-label='Try Out the API'\n                classes={{ label: classes.tryoutLabel }}\n            >\n                <FormattedMessage\n                    id='Apis.Details.GoToTryOut.btn.tryout'\n                    defaultMessage='Try Out'\n                />\n            </Button>\n\n            <Modal\n                aria-label='Preparing to Try Out the API'\n                className={classes.modal}\n                open={showStatus}\n                // onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n                role='status'\n            >\n                <Fade in={showStatus}>\n                    <Box\n                        bgcolor='background.paper'\n                        borderRadius='borderRadius'\n                        width={isXsOrBelow ? 4 / 5 : 1 / 4}\n                        className={classes.statusBox}\n                        p={2}\n                    >\n                        <Grid\n                            container\n                            direction='row'\n                            justify='center'\n                            alignItems='center'\n                        >\n                            <TaskState\n                                completed={tasksStatus.subscribe.completed}\n                                errors={tasksStatus.subscribe.errors}\n                                inProgress={tasksStatus.subscribe.inProgress}\n                                completedMessage={(\n                                    <FormattedMessage\n                                        id='Apis.Details.GoToTryOut.popup.subscribe.complete.success'\n                                        defaultMessage='API subscribe to DefaultApplication successfully!'\n                                    />\n                                )}\n                                inProgressMessage={(\n                                    <FormattedMessage\n                                        id='Apis.Details.GoToTryOut.popup.subscribe.inprogress'\n                                        defaultMessage='API subscribing to DefaultApplication ...'\n                                    />\n                                )}\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.GoToTryOut.popup.subscribe.complete'\n                                    defaultMessage='API subscribe to DefaultApplication'\n                                />\n                            </TaskState>\n                            <TaskState\n                                completed={tasksStatus.prepare.completed}\n                                errors={tasksStatus.prepare.errors}\n                                inProgress={tasksStatus.prepare.inProgress}\n                                completedMessage={(\n                                    <FormattedMessage\n                                        id='Apis.Details.GoToTryOut.popup.prepare.complete'\n                                        defaultMessage='Getting ready to generate keys'\n                                    />\n                                )}\n                                inProgressMessage={(\n                                    <FormattedMessage\n                                        id='Apis.Details.GoToTryOut.popup.prepare.inprogress'\n                                        defaultMessage='Gathering information to generate keys ...'\n                                    />\n                                )}\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.GoToTryOut.popup.prepare.complete'\n                                    defaultMessage='Getting ready to generate keys'\n                                />\n                            </TaskState>\n                            <TaskState\n                                completed={tasksStatus.generate.completed}\n                                errors={tasksStatus.generate.errors}\n                                inProgress={tasksStatus.generate.inProgress}\n                                completedMessage={(\n                                    <FormattedMessage\n                                        id='Apis.Details.GoToTryOut.popup.generate.complete'\n                                        defaultMessage='Consumer key and secret generated successfully!'\n                                    />\n                                )}\n                                inProgressMessage={(\n                                    <FormattedMessage\n                                        id='Apis.Details.GoToTryOut.popup.generate.inprogress'\n                                        defaultMessage='Generating Consumer key and secret ...'\n                                    />\n                                )}\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.GoToTryOut.popup.key.secret'\n                                    defaultMessage='Consumer key and secret'\n                                />\n                            </TaskState>\n                            {anyErrors ? (\n                                <Grid item xs={12}>\n                                    <Button\n                                        onClick={() => {\n                                            setShowStatus(false);\n                                            tasksStatusDispatcher({ name: 'reset' });\n                                        }}\n                                        variant='outlined'\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.GoToTryOut.continue.on.close'\n                                            defaultMessage='Close'\n                                        />\n                                    </Button>\n                                </Grid>\n                            ) : (\n                                <>\n                                    <Grid item xs={12}>\n                                        <Typography variant='caption'>\n                                            <FormattedMessage\n                                                id='Apis.Details.GoToTryOut.popup.final.message'\n                                                defaultMessage={'All set to try out. Use the \"Generate Keys\"'\n                                                + ' button to get an access token while you are on the Try Out page.'}\n                                            />\n                                        </Typography>\n\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Box display='flex' pr={4}>\n                                            <Box flex={1} />\n                                            {redirectButton}\n                                        </Box>\n                                    </Grid>\n                                </>\n                            )}\n                        </Grid>\n                    </Box>\n                </Fade>\n            </Modal>\n\n        </>\n    );\n}\n","/*\n *  Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\nimport React, { useContext, useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport PropTypes from 'prop-types';\nimport Icon from '@material-ui/core/Icon';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid';\nimport Chip from '@material-ui/core/Chip';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { upperCaseString } from 'AppData/stringFormatter';\nimport { ApiContext } from './ApiContext';\nimport GoToTryOut from './GoToTryOut';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: '100%',\n        border: `solid 1px ${theme.palette.grey[300]}`,\n        '& .MuiInputBase-root:before,  .MuiInputBase-root:hover': {\n            borderBottom: 'none !important',\n            color: theme.palette.primary.main,\n        },\n        '& .MuiSelect-select': {\n            color: theme.palette.primary.main,\n            paddingLeft: theme.spacing(),\n        },\n        '& .MuiInputBase-input': {\n            color: theme.palette.primary.main,\n        },\n        '& .material-icons': {\n            fontSize: 16,\n            color: `${theme.palette.grey[700]} !important`,\n        },\n        borderRadius: 10,\n        marginRight: theme.spacing(),\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    avatar: {\n        width: 30,\n        height: 30,\n        background: 'transparent',\n        border: `solid 1px ${theme.palette.grey[300]}`,\n    },\n    iconStyle: {\n        cursor: 'pointer',\n        margin: '-10px 0',\n        padding: '0 0 0 5px',\n        '& .material-icons': {\n            fontSize: 18,\n            color: '#9c9c9c',\n        },\n    },\n\n    sectionTitle: {\n        color: '#424242',\n        fontSize: '0.85rem',\n        marginRight: 20,\n        fontWeight: 400,\n    },\n}));\n\nfunction SolaceEndpoints() {\n    const { api } = useContext(ApiContext);\n    const [urlCopied, setUrlCopied] = useState(false);\n    const [protocols, setProtocols] = useState(null);\n\n    const intl = useIntl();\n    const classes = useStyles();\n\n    const onCopy = () => {\n        setUrlCopied(true);\n        const caller = function () {\n            setUrlCopied(false);\n        };\n        setTimeout(caller, 2000);\n    };\n\n    useEffect(() => {\n        const protocolsList = [];\n        if (api.asyncTransportProtocols) {\n            api.asyncTransportProtocols.map((e) => {\n                protocolsList.push(JSON.parse(e));\n                return null;\n            });\n            setProtocols(protocolsList);\n        }\n    }, [api]);\n\n    return (\n\n        <>\n            {(api.gatewayVendor === 'solace') && (\n                <Grid container spacing={2} xs={12}>\n                    <Grid item spacing={2} xs={2}>\n                        <Typography\n                            variant='subtitle2'\n                            component='label'\n                            gutterBottom\n                            align='left'\n                            className={classes.sectionTitle}\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.protocols.and.endpoints'\n                                defaultMessage='Protocols & Endpoints'\n                            />\n                        </Typography>\n                    </Grid>\n                    <Grid item spacing={2} xs={10}>\n                        <GoToTryOut />\n                    </Grid>\n                    <Grid item spacing={2} xs={12}>\n                        <Grid container spacing={2} xs={12}>\n\n                            <Grid item spacing={2} xs={12}>\n                                {api.endpointURLs.map((e) => (\n                                    <Typography\n                                        component='p'\n                                        variant='subtitle2'\n                                    >\n                                        {e.environmentDisplayName}\n                                    </Typography>\n                                ))}\n                            </Grid>\n                            <Grid item spacing={2} xs={12}>\n                                {protocols && protocols.map((p) => (\n                                    <Grid container spacing={2} xs={12}>\n                                        <Grid item>\n                                            <Typography component='p' variant='body1'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.NewOverview.Endpoints.blank'\n                                                    defaultMessage='-'\n                                                />\n                                            </Typography>\n                                        </Grid>\n                                        <Grid\n                                            item\n                                            style={{\n                                                display: 'flex',\n                                                alignItems: 'center',\n                                                justifyContent: 'center',\n                                            }}\n                                        >\n                                            <Chip\n                                                label={upperCaseString(p.protocol)}\n                                                data-testid={upperCaseString(p.protocol) + '-label'}\n                                                color='primary'\n                                                style={{\n                                                    width: '70px',\n                                                }}\n                                            />\n                                        </Grid>\n                                        <Grid\n                                            xs={10}\n                                            item\n                                            style={{\n                                                display: 'flex',\n                                                alignItems: 'center',\n                                                justifyContent: 'center',\n                                            }}\n                                        >\n                                            <Paper\n                                                id='gateway-envirounment'\n                                                component='form'\n                                                className={classes.root}\n                                            >\n                                                <InputBase\n                                                    className={classes.input}\n                                                    inputProps={{ 'aria-label': 'api url' }}\n                                                    value={p.endPointUrl}\n                                                />\n                                                <Avatar className={classes.avatar} sizes={30}>\n                                                    <Tooltip\n                                                        title={\n                                                            urlCopied\n                                                                ? intl.formatMessage({\n                                                                    defaultMessage: 'Copied',\n                                                                    id: 'Apis.Details.Environments.copied',\n                                                                })\n                                                                : intl.formatMessage({\n                                                                    defaultMessage: 'Copy to clipboard',\n                                                                    id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                                })\n                                                        }\n                                                        interactive\n                                                        placement='right'\n                                                        className={classes.iconStyle}\n                                                    >\n                                                        <CopyToClipboard\n                                                            text={p.endPointUrl}\n                                                            // text={endpoint.URLs.http}\n                                                            onCopy={() => onCopy('urlCopied')}\n                                                        >\n                                                            <IconButton\n                                                                aria-label='Copy the API URL to clipboard'\n                                                            >\n                                                                <Icon color='secondary'>file_copy</Icon>\n                                                            </IconButton>\n                                                        </CopyToClipboard>\n                                                    </Tooltip>\n                                                </Avatar>\n                                            </Paper>\n                                        </Grid>\n                                    </Grid>\n                                ))}\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            )}\n        </>\n    );\n}\n\nSolaceEndpoints.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default SolaceEndpoints;\n","/* eslint-disable no-unreachable */\n/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useContext, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\nimport Avatar from '@material-ui/core/Avatar';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Box from '@material-ui/core/Box';\nimport Icon from '@material-ui/core/Icon';\nimport Divider from '@material-ui/core/Divider';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { ApiContext } from './ApiContext';\nimport GoToTryOut from './GoToTryOut';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: '100%',\n        border: `solid 1px ${theme.palette.grey[300]}`,\n        '& .MuiInputBase-root:before,  .MuiInputBase-root:hover': {\n            borderBottom: 'none !important',\n            color: theme.palette.primary.main,\n        },\n        '& .MuiSelect-select': {\n            color: theme.palette.primary.main,\n            paddingLeft: theme.spacing(),\n        },\n        '& .MuiInputBase-input': {\n            color: theme.palette.primary.main,\n        },\n        '& .material-icons': {\n            fontSize: 16,\n            color: `${theme.palette.grey[700]} !important`,\n        },\n        borderRadius: 10,\n        marginRight: theme.spacing(),\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    avatar: {\n        width: 30,\n        height: 30,\n        background: 'transparent',\n        border: `solid 1px ${theme.palette.grey[300]}`,\n    },\n    iconStyle: {\n        cursor: 'pointer',\n        margin: '-10px 0',\n        padding: '0 0 0 5px',\n        '& .material-icons': {\n            fontSize: 18,\n            color: '#9c9c9c',\n        },\n    },\n\n    sectionTitle: {\n        color: '#424242',\n        fontSize: '0.85rem',\n        marginRight: 20,\n        fontWeight: 400,\n    },\n}));\n\n/**\n *  @inheritdoc\n */\nfunction Environments(props) {\n    const { selectedEndpoint, updateSelectedEndpoint } = props;\n    const {\n        api,\n        api: { advertiseInfo },\n    } = useContext(ApiContext);\n    const [urlCopied, setUrlCopied] = useState(false);\n\n    const intl = useIntl();\n    const classes = useStyles();\n\n    const onCopy = () => {\n        setUrlCopied(true);\n        const caller = function () {\n            setUrlCopied(false);\n        };\n        setTimeout(caller, 2000);\n    };\n\n    const getDefaultVersionUrl = () => {\n        const { defaultVersionURLs } = selectedEndpoint;\n        if (defaultVersionURLs\n            && (defaultVersionURLs.https\n                || defaultVersionURLs.http\n                || defaultVersionURLs.ws\n                || defaultVersionURLs.wss)) {\n            return (\n                <>\n                    {`\n            ${intl.formatMessage({\n                    id: 'Apis.Details.Environments.default.url',\n                    defaultMessage: '( Default Version ) ',\n                })}\n            ${(defaultVersionURLs.https || defaultVersionURLs.http || defaultVersionURLs.ws || defaultVersionURLs.wss)}`}\n                    <Tooltip\n                        title={\n                            urlCopied\n                                ? intl.formatMessage({\n                                    defaultMessage: 'Copied',\n                                    id: 'Apis.Details.Environments.copied',\n                                })\n                                : intl.formatMessage({\n                                    defaultMessage: 'Copy to clipboard',\n                                    id: 'Apis.Details.Environments.copy.to.clipboard',\n                                })\n                        }\n                        interactive\n                        placement='right'\n                        className={classes.iconStyle}\n                    >\n                        <CopyToClipboard\n                            text={defaultVersionURLs.https\n                                || defaultVersionURLs.http\n                                || defaultVersionURLs.ws\n                                || defaultVersionURLs.wss}\n                            // text={endpoint.URLs.http}\n                            onCopy={() => onCopy('urlCopied')}\n                        >\n                            <IconButton aria-label='Copy the Default Version URL to clipboard'>\n                                <Icon color='secondary'>file_copy</Icon>\n                            </IconButton>\n                        </CopyToClipboard>\n                    </Tooltip>\n                </>\n            );\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     *  @inheritdoc\n     */\n    // if (!selectedEndpoint) {\n    //     return <Progress />;\n    // }\n    return (\n        <Box display='flex' flexDirection='column' width='100%'>\n            <Box mr={5} display='flex' area-label='API URL details' alignItems='center' width='100%' flexDirection='row'>\n                {selectedEndpoint && (!advertiseInfo || !advertiseInfo.advertised) && (\n                    <>\n                        <Typography\n                            variant='subtitle2'\n                            component='label'\n                            for='gateway-envirounment'\n                            gutterBottom\n                            align='left'\n                            className={classes.sectionTitle}\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.Environments.label.url'\n                                defaultMessage='URL'\n                            />\n                        </Typography>\n                        <Paper id='gateway-envirounment' component='form' className={classes.root}>\n                            {api.endpointURLs.length > 1 && (\n                                <>\n                                    <Select\n                                        value={selectedEndpoint.environmentName}\n                                        onChange={updateSelectedEndpoint}\n                                        aria-label='Select the Gateway Environment'\n                                    >\n                                        {api.endpointURLs.map((endpoint) => (\n                                            <MenuItem value={endpoint.environmentName}>\n                                                {endpoint.environmentDisplayName || endpoint.environmentName}\n                                            </MenuItem>\n                                        ))}\n                                    </Select>\n                                    <VerticalDivider height={api.type === 'GRAPHQL' && (selectedEndpoint.URLs.ws\n                                        || selectedEndpoint.URLs.wss) ? 80 : 30}\n                                    />\n                                </>\n                            )}\n                            <Box display='flex' flexDirection='column' width='100%'>\n                                <Box py={0.5} display='flex' alignItems='center' width='100%' flexDirection='row'>\n                                    <Tooltip\n                                        title={(\n                                            <Typography color='inherit'>\n                                                {(api.type === 'GRAPHQL')\n                                                    ? intl.formatMessage({\n                                                        defaultMessage: 'Gateway HTTP URL for GraphQL Queries and Mutations',\n                                                        id: 'Apis.Details.Environments.GraphQL.HTTP.Gateway.URL',\n                                                    })\n                                                    : intl.formatMessage({\n                                                        defaultMessage: 'Gateway URL',\n                                                        id: 'Apis.Details.Environments.Gateway.URL',\n                                                    })}\n                                            </Typography>\n                                        )}\n                                        placement='left-start'\n                                        arrow\n                                    >\n                                        <InputBase\n                                            className={classes.input}\n                                            inputProps={{ 'aria-label': 'api url' }}\n                                            value={selectedEndpoint.URLs.https\n                                            || selectedEndpoint.URLs.http\n                                            || selectedEndpoint.URLs.wss\n                                            || selectedEndpoint.URLs.ws}\n                                            data-testid='http-url'\n                                        />\n                                    </Tooltip>\n                                    <Avatar className={classes.avatar} sizes={30}>\n                                        <Tooltip\n                                            title={\n                                                urlCopied\n                                                    ? intl.formatMessage({\n                                                        defaultMessage: 'Copied',\n                                                        id: 'Apis.Details.Environments.copied',\n                                                    })\n                                                    : intl.formatMessage({\n                                                        defaultMessage: 'Copy to clipboard',\n                                                        id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                    })\n                                            }\n                                            interactive\n                                            placement='right'\n                                            className={classes.iconStyle}\n                                        >\n                                            <CopyToClipboard\n                                                text={selectedEndpoint.URLs.https\n                                            || selectedEndpoint.URLs.http\n                                            || selectedEndpoint.URLs.wss\n                                            || selectedEndpoint.URLs.ws}\n                                                // text={endpoint.URLs.http}\n                                                onCopy={() => onCopy('urlCopied')}\n                                            >\n                                                <IconButton aria-label='Copy the API URL to clipboard'>\n                                                    <Icon color='secondary'>file_copy</Icon>\n                                                </IconButton>\n                                            </CopyToClipboard>\n                                        </Tooltip>\n                                    </Avatar>\n                                </Box>\n                                {api.type === 'GRAPHQL' && (selectedEndpoint.URLs.ws || selectedEndpoint.URLs.wss)\n                            && (\n                                <>\n                                    <Divider light />\n                                    <Box pt={0.5} display='flex' alignItems='center' width='100%' flexDirection='row'>\n                                        <>\n                                            <Tooltip\n                                                title={(\n                                                    <Typography color='inherit'>\n                                                        {intl.formatMessage({\n                                                            defaultMessage: 'Gateway Websocket URL for GraphQL Subscriptions',\n                                                            id: 'Apis.Details.Environments.GraphQL.WS.Gateway.URL',\n                                                        })}\n                                                    </Typography>\n                                                )}\n                                                placement='left-start'\n                                                arrow\n                                            >\n                                                <InputBase\n                                                    className={classes.input}\n                                                    inputProps={{ 'aria-label': 'api url' }}\n                                                    value={selectedEndpoint.URLs.wss\n                                                    || selectedEndpoint.URLs.ws}\n                                                    data-testid='websocket-url'\n                                                />\n                                            </Tooltip>\n                                            <Avatar className={classes.avatar} sizes={30}>\n                                                <Tooltip\n                                                    title={urlCopied\n                                                        ? intl.formatMessage({\n                                                            defaultMessage: 'Copied',\n                                                            id: 'Apis.Details.Environments.copied',\n                                                        })\n                                                        : intl.formatMessage({\n                                                            defaultMessage: 'Copy to clipboard',\n                                                            id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                        })}\n                                                    interactive\n                                                    placement='right'\n                                                    className={classes.iconStyle}\n                                                >\n                                                    <CopyToClipboard\n                                                        text={selectedEndpoint.URLs.wss\n                                                            || selectedEndpoint.URLs.ws}\n                                                        onCopy={() => onCopy('urlCopied')}\n                                                    >\n                                                        <IconButton aria-label='Copy the API URL to clipboard'>\n                                                            <Icon color='secondary'>file_copy</Icon>\n                                                        </IconButton>\n                                                    </CopyToClipboard>\n                                                </Tooltip>\n                                            </Avatar>\n                                        </>\n                                    </Box>\n\n                                </>\n                            )}\n                            </Box>\n                        </Paper>\n                    </>\n                )}\n                {advertiseInfo && advertiseInfo.advertised && (advertiseInfo.apiExternalProductionEndpoint\n                    || advertiseInfo.apiExternalSandboxEndpoint) && (\n                    <>\n                        <Typography\n                            variant='subtitle2'\n                            component='label'\n                            for='external-endpoint-url'\n                            gutterBottom\n                            align='left'\n                            className={classes.sectionTitle}\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.Environments.externalEndpoint.label.url'\n                                defaultMessage='URL'\n                            />\n                        </Typography>\n                        <Paper id='external-endpoint-url' component='form' className={classes.root}>\n                            <Box display='flex' flexDirection='column' width='100%'>\n                                <Box py={0.5} display='flex' alignItems='center' width='100%' flexDirection='row'>\n                                    <Tooltip\n                                        title={(\n                                            <Typography color='inherit'>\n                                                {intl.formatMessage({\n                                                    defaultMessage: 'External Production Endpoint',\n                                                    id: 'Apis.Details.Environments.apiExternalProductionEndpoint',\n                                                })}\n                                            </Typography>\n                                        )}\n                                        placement='left-start'\n                                        arrow\n                                    >\n                                        <InputBase\n                                            className={classes.input}\n                                            inputProps={{ 'aria-label': 'api url' }}\n                                            value={advertiseInfo.apiExternalProductionEndpoint}\n                                        />\n                                    </Tooltip>\n                                    <Avatar className={classes.avatar} sizes={30}>\n                                        <Tooltip\n                                            title={\n                                                urlCopied\n                                                    ? intl.formatMessage({\n                                                        defaultMessage: 'Copied',\n                                                        id: 'Apis.Details.Environments.copied',\n                                                    })\n                                                    : intl.formatMessage({\n                                                        defaultMessage: 'Copy to clipboard',\n                                                        id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                    })\n                                            }\n                                            interactive\n                                            placement='right'\n                                            className={classes.iconStyle}\n                                        >\n                                            <CopyToClipboard\n                                                text={advertiseInfo.apiExternalProductionEndpoint}\n                                                // text={endpoint.URLs.http}\n                                                onCopy={() => onCopy('urlCopied')}\n                                            >\n                                                <IconButton aria-label='Copy the API URL to clipboard'>\n                                                    <Icon color='secondary'>file_copy</Icon>\n                                                </IconButton>\n                                            </CopyToClipboard>\n                                        </Tooltip>\n                                    </Avatar>\n                                </Box>\n                                {advertiseInfo.apiExternalSandboxEndpoint && (\n                                    <>\n                                        <Divider light />\n                                        <Box pt={0.5} display='flex' alignItems='center' width='100%' flexDirection='row'>\n                                            <>\n                                                <Tooltip\n                                                    title={(\n                                                        <Typography color='inherit'>\n                                                            {intl.formatMessage({\n                                                                defaultMessage: 'External Sandbox Endpoint',\n                                                                id: 'Apis.Details.Environments.apiExternalSandboxEndpoint',\n                                                            })}\n                                                        </Typography>\n                                                    )}\n                                                    placement='left-start'\n                                                    arrow\n                                                >\n                                                    <InputBase\n                                                        className={classes.input}\n                                                        inputProps={{ 'aria-label': 'api url' }}\n                                                        value={advertiseInfo.apiExternalSandboxEndpoint}\n                                                    />\n                                                </Tooltip>\n                                                <Avatar className={classes.avatar} sizes={30}>\n                                                    <Tooltip\n                                                        title={urlCopied\n                                                            ? intl.formatMessage({\n                                                                defaultMessage: 'Copied',\n                                                                id: 'Apis.Details.Environments.copied',\n                                                            })\n                                                            : intl.formatMessage({\n                                                                defaultMessage: 'Copy to clipboard',\n                                                                id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                            })}\n                                                        interactive\n                                                        placement='right'\n                                                        className={classes.iconStyle}\n                                                    >\n                                                        <CopyToClipboard\n                                                            text={advertiseInfo.apiExternalSandboxEndpoint}\n                                                            onCopy={() => onCopy('urlCopied')}\n                                                        >\n                                                            <IconButton aria-label='Copy the API URL to clipboard'>\n                                                                <Icon color='secondary'>file_copy</Icon>\n                                                            </IconButton>\n                                                        </CopyToClipboard>\n                                                    </Tooltip>\n                                                </Avatar>\n                                            </>\n                                        </Box>\n\n                                    </>\n                                )}\n                            </Box>\n                        </Paper>\n                    </>\n                )}\n                {!selectedEndpoint && (advertiseInfo && advertiseInfo.advertised\n                    && !(advertiseInfo.apiExternalProductionEndpoint || advertiseInfo.apiExternalSandboxEndpoint)) && (\n                    <Typography variant='subtitle2' component='p' gutterBottom align='left' className={classes.sectionTitle}>\n                        <FormattedMessage\n                            id='Apis.Details.Environments.label.noendpoint'\n                            defaultMessage='No endpoints yet.'\n                        />\n                    </Typography>\n                )}\n                <GoToTryOut />\n            </Box>\n            {(!api.advertiseInfo || !api.advertiseInfo.advertised) && (\n                <Box ml={8} alignItems='center' mt={1}>\n                    {selectedEndpoint && (\n                        <Typography variant='caption'>\n                            {getDefaultVersionUrl()}\n                        </Typography>\n                    )}\n                </Box>\n            )}\n        </Box>\n\n    );\n}\nEnvironments.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default Environments;\n","/* eslint-disable react/prop-types */\n/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Icon from '@material-ui/core/Icon';\nimport { withStyles } from '@material-ui/core/styles';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\n\n/**\n * Add two numbers.\n * @param {JSON} theme The second number.\n * @returns {JSON} The theme object.\n */\nconst styles = (theme) => ({\n    root: {\n        padding: theme.spacing(3),\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    iconClass: {\n        marginRight: 10,\n        color: theme.palette.secondary.main,\n    },\n    boxBadge: {\n        background: theme.palette.grey.A400,\n        color: theme.palette.getContrastText(theme.palette.grey.A400),\n        fontSize: theme.typography.h5.fontSize,\n        padding: theme.spacing(1),\n        width: 30,\n        height: 30,\n        marginRight: 20,\n        textAlign: 'center',\n    },\n    subscriptionBox: {\n        paddingLeft: theme.spacing(2),\n    },\n    linkStyle: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        fontSize: theme.typography.fontSize,\n    },\n    subscriptionTop: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    resourceWrapper: {\n        height: 192,\n        overflow: 'auto',\n    },\n    actionPanel: {\n        justifyContent: 'flex-start',\n    },\n    linkToTest: {\n        textDecoration: 'none',\n    },\n    emptyBox: {\n        background: '#ffffff55',\n        color: '#444',\n        border: 'solid 1px #fff',\n        padding: theme.spacing(2),\n        marginTop: 50,\n    },\n    listWrapper: {\n        padding: 0,\n        margin: 0,\n        width: '100%',\n    },\n    listItemStyle: {\n        padding: 0,\n        margin: 0,\n    },\n    listItemIcon: {\n        minWidth: 30,\n        color: '#BBBEBC66',\n    },\n    listItemPrimary: {\n        fontSize: '14px',\n    },\n});\n\n/**\n * Add two numbers.\n * @param {number} props The second number.\n * @returns {JSX} jsx.\n */\nfunction OverviewDocuments(props) {\n    const [docs, setDocs] = useState([]);\n    const intl = useIntl();\n    const { apiId } = props;\n    const history = useHistory();\n    useEffect(() => {\n        const restApi = new API();\n        const promisedApi = restApi.getDocumentsByAPIId(apiId);\n        promisedApi\n            .then((response) => {\n                if (response.obj.list.length > 0) {\n                    // Rearanging the response to group them by the sourceType property.\n                    setDocs(response.obj.list);\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Overview.documents.error.occurred',\n                        defaultMessage: 'Error occurred',\n                    }));\n                }\n            });\n    }, []);\n\n    const gotoDoc = (documentId) => {\n        history.push('/apis/' + apiId + '/documents/' + documentId);\n    };\n    /**\n     *\n     *\n     * @returns\n     * @memberof Overview\n     */\n\n    const { classes } = props;\n    if (docs.length === 0) {\n        return (\n            <Grid container className={classes.root} spacing={2}>\n                <Grid item xs={12}>\n                    <div className={classes.emptyBox}>\n                        <Typography variant='body2'>\n                            <FormattedMessage\n                                id='Apis.Details.Overview.documents.no.content'\n                                defaultMessage='No Documents Available'\n                            />\n                        </Typography>\n                    </div>\n                </Grid>\n            </Grid>\n        );\n    }\n\n    return (\n        docs.length > 0 && (\n            <List\n                component='nav'\n                aria-label='Available document list'\n                className={classes.listWrapper}\n            >\n                {docs.map((doc, index) => (\n                    index <= 1\n                    && (\n                        <ListItem button onClick={() => gotoDoc(doc.documentId)} className={classes.listItemStyle} key={doc.name}>\n                            <ListItemIcon classes={{ root: classes.listItemIcon }}>\n                                <Icon>insert_drive_file</Icon>\n                            </ListItemIcon>\n                            <ListItemText\n                                primary={doc.name}\n                                // secondary={truncateString(100, doc.summary)}\n                                classes={{ primary: classes.listItemPrimary }}\n                            />\n                        </ListItem>\n                    )\n                ))}\n            </List>\n        )\n    );\n}\n\nOverviewDocuments.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(OverviewDocuments);\n","/* eslint-disable no-unreachable */\n/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport CloudDownloadRounded from '@material-ui/icons/CloudDownloadRounded';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport API from 'AppData/api';\nimport Utils from 'AppData/Utils';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport Settings from 'Settings';\nimport queryString from 'query-string';\nimport { ApiContext } from './ApiContext';\n\nconst useStyles = makeStyles((theme) => ({\n    iconStyle: {\n        cursor: 'pointer',\n        margin: '-10px 0',\n        padding: '0 0 0 5px',\n        '& .material-icons': {\n            fontSize: 18,\n            color: theme.palette.secondary.main,\n        },\n    },\n    buttonIcon: {\n        marginRight: 10,\n    },\n    downloadLink: {\n        fontSize: 14,\n        color: theme.palette.primary.main,\n        display: 'flex',\n    },\n}));\n\n/**\n * Renders the download links.\n * @returns {JSX} rendered output\n */\nfunction SourceDownload(props) {\n    const { selectedEndpoint } = props;\n    const { api } = useContext(ApiContext);\n    const apiClient = new API();\n    const classes = useStyles();\n    const intl = useIntl();\n    const accessTokenPart = Utils.getCookieWithoutEnvironment('WSO2_AM_TOKEN_1_Default');\n    const [isTokenCopied, setIsTokenCopied] = useState(false);\n\n    const { location } = window;\n\n    const { app: { customUrl: { tenantDomain: customUrlEnabledDomain } } } = Settings;\n    let tenantDomain = '';\n    if (customUrlEnabledDomain !== 'null') {\n        tenantDomain = customUrlEnabledDomain;\n    } else if (location) {\n        const { tenant } = queryString.parse(location.search);\n        if (tenant) {\n            tenantDomain = tenant;\n        }\n    }\n    const tenant = tenantDomain;\n    /**\n     * Downloads the WSDL of the api for the provided environment\n     *\n     * @param {EventListener} e element click event\n     */\n    const downloadWSDL = (e) => {\n        e.preventDefault();\n        const wsdlClient = apiClient.getWsdlClient();\n        const promisedGet = wsdlClient.downloadWSDLForEnvironment(api.id, selectedEndpoint.environmentName);\n        promisedGet\n            .then((done) => {\n                Utils.downloadFile(done);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Environments.download.wsdl.error',\n                        defaultMessage: 'Error downloading the WSDL',\n                    }));\n                }\n            });\n    };\n\n    const downloadGraphQLSchema = (e) => {\n        e.preventDefault();\n        const promisedGraphQL = apiClient.getGraphQLSchemaByAPIId(api.id);\n        promisedGraphQL.then((response) => {\n            const fileName = api.provider + '-' + api.name + '-' + api.version + '.graphql';\n            Utils.downloadFile(response, fileName);\n        })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Environments.download.graphql.error',\n                        defaultMessage: 'Error downloading the GraphQL Schema',\n                    }));\n                }\n            });\n    };\n\n    /**\n     * Downloads the swagger of the api for the provided environment\n     *\n     * @param {string} apiId uuid of the API\n     * @param {string} environment name of the environment\n     */\n    const downloadSwagger = (e) => {\n        e.preventDefault();\n        let promiseSwagger;\n\n        if (selectedEndpoint.environmentName) {\n            promiseSwagger = apiClient.getSwaggerByAPIIdAndEnvironment(api.id, selectedEndpoint.environmentName);\n        } else {\n            promiseSwagger = apiClient.getSwaggerByAPIId(api.id);\n        }\n        promiseSwagger.then((done) => {\n            Utils.downloadFile(done);\n        }).catch((error) => {\n            console.log(error);\n            Alert.error(intl.formatMessage({\n                id: 'Apis.Details.Environments.download.swagger.error',\n                defaultMessage: 'Error downloading the Swagger',\n            }));\n        });\n    };\n\n    /**\n     * Downloads the asyncapi specification of the api for the provided environment\n     *\n     * @param {string} apiId uuid of the API\n     * @param {string} environment name of the environment\n     */\n    const downloadAsync = (e) => {\n        e.preventDefault();\n        const promiseAsync = apiClient.getAsyncApiSpecificationByAPIIdAndEnvironment(api.id, selectedEndpoint.environmentName);\n        promiseAsync\n            .then((done) => {\n                Utils.downloadFile(done);\n            })\n            .catch((error) => {\n                console.error(error);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Environments.download.asyncapi.error',\n                    defaultMessage: 'Error downloading the AsyncAPI Specification',\n                }));\n            });\n    };\n\n    if (\n        api.type === 'SOAP') {\n        return (\n            <Tooltip\n                title={(\n                    <FormattedMessage\n                        id='Apis.Details.Environments.download.wsdl'\n                        defaultMessage='WSDL'\n                    />\n                )}\n                placement='right'\n                className={classes.iconStyle}\n            >\n                <a\n                    onKeyDown={downloadWSDL}\n                    onClick={downloadWSDL}\n                    className={classes.downloadLink}\n                >\n                    <CloudDownloadRounded className={classes.buttonIcon} />\n                    <FormattedMessage\n                        id='Apis.Details.Environments.download.wsdl.text'\n                        defaultMessage='Download WSDL'\n                    />\n                </a>\n            </Tooltip>\n        );\n    }\n    if (api.type === 'HTTP' || api.type === 'SOAPTOREST') {\n        return (\n            <Box display='flex' alignItems='center'>\n                <Tooltip\n                    title={(\n                        <FormattedMessage\n                            id='Apis.Details.Environments.download.swagger'\n                            defaultMessage='Swagger'\n                        />\n                    )}\n                    placement='right'\n                    className={classes.iconStyle}\n                >\n                    <a\n                        onClick={downloadSwagger}\n                        onKeyDown={downloadSwagger}\n                        className={classes.downloadLink}\n                        id='swagger-download-btn'\n                    >\n                        <CloudDownloadRounded className={classes.buttonIcon} />\n                        <FormattedMessage\n                            id='Apis.Details.Environments.download.swagger.text'\n                            defaultMessage='Download Swagger'\n                        />\n                    </a>\n                </Tooltip>\n                <Tooltip\n                    title={isTokenCopied\n                        ? (\n                            <FormattedMessage\n                                id='Apis.Details.Swagger.URL.copied'\n                                defaultMessage='Copied'\n                            />\n                        )\n                        : (\n                            <FormattedMessage\n                                id='Apis.Details.Swagger.URL.copy.to.clipboard'\n                                defaultMessage='Copy to clipboard'\n                            />\n                        )}\n                    placement='top'\n                >\n                    <CopyToClipboard\n                        text={location.origin + '/api/am/devportal/v3/apis/' + api.id\n                        + '/swagger?accessToken=' + accessTokenPart + '&X-WSO2-Tenant-Q='\n                        + tenant + '&environmentName='\n                        + selectedEndpoint.environmentName}\n                        onCopy={() => setIsTokenCopied('urlCopied')}\n                    >\n                        <Button aria-label='Copy to clipboard' size='small'>\n                            <FileCopyIcon className={classes.buttonIcon} />\n                        </Button>\n                    </CopyToClipboard>\n                </Tooltip>\n            </Box>\n        );\n    }\n    if (api.type === 'WS' || api.type === 'WEBSUB' || api.type === 'SSE' || api.type === 'ASYNC') {\n        return (\n            <Tooltip\n                title={(\n                    <FormattedMessage\n                        id='Apis.Details.Environments.download.asyncapi'\n                        defaultMessage='AsyncAPI Specification'\n                    />\n                )}\n                placement='right'\n                className={classes.iconStyle}\n            >\n                <a\n                    onKeyDown={downloadAsync}\n                    onClick={downloadAsync}\n                    className={classes.downloadLink}\n                    id='swagger-download-btn'\n                >\n                    <CloudDownloadRounded className={classes.buttonIcon} />\n                    <FormattedMessage\n                        id='Apis.Details.Environments.download.asyncapi.text'\n                        defaultMessage='Download AsyncAPI Specification'\n                    />\n                </a>\n            </Tooltip>\n        );\n    }\n    if (api.type === 'GRAPHQL') {\n        return (\n            <Tooltip\n                title={(\n                    <FormattedMessage\n                        id='Apis.Details.Environments.download.graphQL'\n                        defaultMessage='GraphQL'\n                    />\n                )}\n                placement='right'\n                className={classes.iconStyle}\n            >\n                <a\n                    onKeyDown={downloadGraphQLSchema}\n                    onClick={downloadGraphQLSchema}\n                    className={classes.downloadLink}\n                >\n                    <CloudDownloadRounded className={classes.buttonIcon} />\n                    <FormattedMessage\n                        id='Apis.Details.Environments.download.graphql.text'\n                        defaultMessage='Download GraphQL'\n                    />\n                </a>\n            </Tooltip>\n        );\n    }\n}\n\nexport default SourceDownload;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useContext, useState, useEffect } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { Link as MUILink } from '@material-ui/core';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\nimport Box from '@material-ui/core/Box';\nimport Chip from '@material-ui/core/Chip';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport CardContent from '@material-ui/core/CardContent';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport ReactMarkdown from 'react-markdown';\nimport gfm from 'remark-gfm';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport ApiThumb from 'AppComponents/Apis/Listing/ApiThumb';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport StarRatingSummary from 'AppComponents/Apis/Details/StarRatingSummary';\nimport Social from 'AppComponents/Apis/Details/Social/Social';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport AuthManager from 'AppData/AuthManager';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Progress from 'AppComponents/Shared/Progress';\nimport API from 'AppData/api';\nimport View from 'AppComponents/Apis/Details/Documents/View';\nimport SolaceEndpoints from './SolaceEndpoints';\nimport Environments from './Environments';\nimport Comments from './Comments/Comments';\nimport OverviewDocuments from './OverviewDocuments';\nimport SourceDownload from './SourceDownload';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        height: '100vh',\n        paddingLeft: theme.spacing(2),\n        paddingTop: theme.spacing(2),\n    },\n    linkTitle: {\n        color: theme.palette.grey[800],\n    },\n    description: {\n        color: theme.palette.grey[700],\n    },\n    textLabel: {\n        fontWeight: 400,\n        color: theme.palette.grey[800],\n    },\n    textValue: {\n        textIndent: theme.spacing(1),\n    },\n    apiThumb: {\n        padding: theme.spacing(),\n        border: 'solid 1px',\n        borderColor: theme.palette.grey[800],\n    },\n    chipRoot: {\n        cursor: 'pointer',\n        marginRight: theme.spacing(),\n    },\n    subtitle: {\n        color: theme.palette.grey[800],\n    },\n    cardRoot: {\n        width: 150,\n        height: 150,\n        marginRight: theme.spacing(),\n        marginTop: theme.spacing(2),\n    },\n    sectionTitle: {\n        color: theme.palette.grey[800],\n        fontSize: '0.95rem',\n        fontWeight: 400,\n    },\n    moreLink: {\n        fontSize: '14px',\n    },\n    table: {\n        '& th': {\n            fontWeight: 400,\n        },\n    },\n    requestCount: {\n        fontSize: 22,\n    },\n    requestUnit: {\n        fontSize: 13,\n    },\n    launchIcon: {\n        paddingLeft: theme.spacing(1),\n    },\n    originalDevportalUrl: {\n        marginTop: theme.spacing(4),\n    },\n}));\n/**\n * @returns {JSX} overview section\n */\nfunction Overview() {\n    const theme = useTheme();\n\n    const {\n        custom: {\n            apiDetailPages: {\n                showCredentials,\n                showComments,\n                showDocuments,\n            },\n            infoBar: { showThumbnail },\n            social: { showRating },\n            showSwaggerDescriptionOnOverview,\n        },\n    } = theme;\n    const intl = useIntl();\n    const {\n        api,\n        api: { advertiseInfo },\n        subscribedApplications,\n    } = useContext(ApiContext);\n    const [descriptionHidden, setDescriptionHidden] = useState(true);\n    const [isLoading, setIsLoading] = useState(false);\n    const [notFound, setNotFound] = useState(false);\n    const [allDocuments, setAllDocuments] = useState(null);\n    const [overviewDocOverride, setOverviewDocOverride] = useState(null);\n    const [swaggerDescription, setSwaggerDescription] = useState(null);\n    const [allPolicies, setAllPolicies] = useState(null);\n    const [rating, setRating] = useState({\n        avgRating: 0,\n        total: 0,\n        count: 0,\n    });\n    const [selectedEndpoint, setSelectedEndpoint] = useState((api.endpointURLs && api.endpointURLs.length > 0)\n        ? api.endpointURLs[0]\n        : null);\n    const classes = useStyles();\n    // Truncating the description\n    let descriptionIsBig = false;\n    let smallDescription = '';\n    if (api.description) {\n        const limit = 40;\n        if (api.description.split(' ').length > limit) {\n            const newContent = api.description.split(' ').slice(0, limit);\n            smallDescription = newContent.join(' ') + '...';\n            descriptionIsBig = true;\n        }\n    }\n\n    const isApiPolicy = (policyName) => {\n        const filteredApiPolicies = api.tiers.filter((t) => t.tierName === policyName);\n        return filteredApiPolicies && filteredApiPolicies.length > 0;\n    };\n\n    const updateSelectedEndpoint = (e) => {\n        const selectedEnvName = e.target.value;\n        const filteredEndpoints = api.endpointURLs.filter((ep) => ep.environmentName === selectedEnvName);\n        if (filteredEndpoints && filteredEndpoints.length > 0) {\n            setSelectedEndpoint(filteredEndpoints[0]);\n        } else {\n            Alert.error(intl.formatMessage({\n                id: 'Apis.Details.Overview.select.env.error',\n                defaultMessage: 'Error Selecting Environment',\n            }));\n        }\n    };\n\n    const getSubscriptionPolicies = () => {\n        const restApi = new API();\n        return restApi.getAllTiers('subscription')\n            .then((response) => {\n                try {\n                    // Filter policies base on async or not.\n                    const filteredList = response.body.list.filter((str) => isApiPolicy(str.name));\n                    setAllPolicies(filteredList);\n                } catch (e) {\n                    console.log(e);\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Overview.error.occurred',\n                        defaultMessage: 'Error occurred',\n                    }));\n                }\n            }).catch((error) => {\n                console.log(error);\n                const { status } = error;\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Overview.error.occurred.subs',\n                    defaultMessage: 'Error occurred when fetching subscription policies',\n                }));\n                if (status === 404) {\n                    setNotFound(true);\n                }\n                setAllDocuments([]);\n                setIsLoading(false);\n            });\n    };\n\n    const getDocuments = () => {\n        const restApi = new API();\n        return restApi.getDocumentsByAPIId(api.id)\n            .then((response) => {\n                const overviewDoc = response.body.list.filter((item) => item.otherTypeName === '_overview');\n                if (overviewDoc.length > 0) {\n                    // We can override the UI with this content\n                    setOverviewDocOverride(overviewDoc[0]); // Only one doc we can render\n                }\n                setAllDocuments(response.body.list);\n            })\n            .catch((error) => {\n                console.log(error);\n                const { status } = error;\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Overview.error.occurred.docs',\n                    defaultMessage: 'Error occurred when fetching documents',\n                }));\n                if (status === 404) {\n                    setNotFound(true);\n                }\n                setAllDocuments([]);\n                setIsLoading(false);\n            });\n    };\n    useEffect(() => {\n        setIsLoading(true);\n        const { endpointURLs } = api;\n        if (endpointURLs && endpointURLs.length > 0) {\n            setSelectedEndpoint(endpointURLs[0]);\n        }\n        Promise.all([getDocuments(), getSubscriptionPolicies()])\n            .then(() => {\n                setIsLoading(false);\n            });\n    }, [api]);\n    useEffect(() => {\n        const restApi = new API();\n        if (showSwaggerDescriptionOnOverview) {\n            restApi.getSwaggerByAPIIdAndEnvironment(api.id, selectedEndpoint.environmentName)\n                .then((swaggerResponse) => {\n                    const swagger = swaggerResponse.obj;\n                    if (swagger && swagger.info) {\n                        setSwaggerDescription(swagger.info.description);\n                    } else {\n                        setSwaggerDescription('');\n                    }\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSwaggerDescription('');\n                });\n        } else {\n            setIsLoading(true);\n            Promise.all([getDocuments(), getSubscriptionPolicies()])\n                .then(() => {\n                    setIsLoading(false);\n                });\n        }\n    }, []);\n\n    /**\n     * @param {event} e click event\n     */\n    const collapseAllDescription = (e) => {\n        e.preventDefault();\n        setDescriptionHidden(!descriptionHidden);\n    };\n\n    /**\n     * @returns {string} provider\n     */\n    const getProvider = () => {\n        let { provider } = api;\n        if (\n            api.businessInformation\n            && api.businessInformation.businessOwner\n            && api.businessInformation.businessOwner.trim() !== ''\n        ) {\n            provider = api.businessInformation.businessOwner;\n        }\n        return provider;\n    };\n\n    /**\n     * @param {number} ratings rating value\n     */\n    const setRatingUpdate = (ratingLocal) => {\n        if (ratingLocal) {\n            const { avgRating, total, count } = ratingLocal;\n            setRating({ avgRating, total, count });\n        }\n    };\n\n    /**\n     * @param {JSON} api api object\n     * @returns {JSON} key managers\n     */\n    const getKeyManagers = () => {\n        if (api.keyManagers) {\n            if (api.keyManagers[0] === 'all') {\n                return null;\n            } else {\n                return (\n                    api.keyManagers.map((km) => (<Typography variant='body2'>{km}</Typography>))\n                );\n            }\n        } else {\n            return null;\n        }\n    };\n\n    const user = AuthManager.getUser();\n    if (isLoading) {\n        return (<Progress />);\n    }\n    if (showSwaggerDescriptionOnOverview) {\n        if (!swaggerDescription) {\n            return (<Progress />);\n        } else {\n            return (\n                <Box p={3}>\n                    <ReactMarkdown plugins={[gfm]} escapeHtml>\n                        {swaggerDescription}\n                    </ReactMarkdown>\n                </Box>\n            );\n        }\n    }\n    if (!allDocuments) {\n        return (<Progress />);\n    }\n    if (notFound) {\n        return (\n            <ResourceNotFound message={intl.formattedMessage({\n                id: 'Apis.Details.Overview.not.found.message',\n                defaultMessage: 'Resource Not Found',\n            })}\n            />\n        );\n    }\n    if (overviewDocOverride) {\n        return (\n            <>\n                <Paper className={classes.paperWithDoc} elevation={0}>\n                    <View doc={overviewDocOverride} apiId={api.id} fullScreen dontShowName />\n                </Paper>\n            </>\n        );\n    }\n    return (\n        <Paper className={classes.root} elevation={0}>\n            <Grid container>\n                <Grid item sm={8} xl={9}>\n                    <Box display='flex' flexDirection='column'>\n                        <Box display='flex' flexDirection='row'>\n                            {showThumbnail && (\n                                <Box id='overview-thumbnail' width={86} display='flex' alignItems='center'>\n                                    <Box className={classes.apiThumb}>\n                                        <ApiThumb\n                                            api={api}\n                                            customWidth={70}\n                                            customHeight={50}\n                                            showInfo={false}\n                                        />\n                                    </Box>\n                                </Box>\n                            )}\n                            <Box ml={3} mr={2}>\n                                <Typography variant='h4' component='h2'>{api.name}</Typography>\n                                {api.description && (\n                                    <Typography variant='body2' gutterBottom align='left' className={classes.description}>\n                                        {(descriptionIsBig && descriptionHidden) ? smallDescription : api.description}\n                                        {descriptionIsBig && (\n                                            <a aria-label='Show more/less description' onClick={collapseAllDescription} href='#'>\n                                                {descriptionHidden\n                                                    ? intl.formatMessage({\n                                                        defaultMessage: ' more',\n                                                        id: 'Apis.Details.Overview.description.more',\n                                                    })\n                                                    : intl.formatMessage({\n                                                        defaultMessage: ' less',\n                                                        id: 'Apis.Details.Overview.description.less',\n                                                    })}\n                                            </a>\n                                        )}\n                                    </Typography>\n                                )}\n                                <Box display='flex' area-lable='API version and owner details' flexDirection='row'>\n                                    <Typography variant='body2' gutterBottom align='left' className={classes.textLabel}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Overview.list.version'\n                                            defaultMessage='Version '\n                                        />\n                                    </Typography>\n                                    {' '}\n                                    <Typography variant='body2' gutterBottom align='left' className={classes.textValue}>\n                                        {api.version}\n                                    </Typography>\n                                    <VerticalDivider height={20} />\n                                    <Typography variant='body2' gutterBottom align='left' className={classes.textLabel}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Overview.list.provider'\n                                            defaultMessage='By '\n                                        />\n                                    </Typography>\n                                    {' '}\n                                    <Typography variant='body2' gutterBottom align='left' className={classes.textValue}>\n                                        {getProvider()}\n                                    </Typography>\n                                </Box>\n                            </Box>\n                        </Box>\n                        <Box display='flex' flexDirection='row' alignItems='center' mt={2} pr={6}>\n                            {\n                                (api.gatewayVendor === 'solace') ? (\n                                    <SolaceEndpoints />\n                                ) : (\n                                    <Environments updateSelectedEndpoint={updateSelectedEndpoint} selectedEndpoint={selectedEndpoint} />\n                                )\n                            }\n                        </Box>\n                        <Box display='flex' flexDirection='row' alignItems='center' className={classes.originalDevportalUrl} mt={2} pr={6}>\n                            {advertiseInfo && advertiseInfo.advertised && advertiseInfo.originalDevPortalUrl && (\n                                <MUILink\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href={advertiseInfo.originalDevPortalUrl}\n                                    variant='body3'\n                                >\n                                    <FormattedMessage\n                                        id={'Apis.Details.Credentials.Credentials.visit.original.'\n                                        + 'developer.portal'}\n                                        defaultMessage='Visit Original Developer Portal'\n                                    />\n                                    <LaunchIcon className={classes.launchIcon} />\n                                </MUILink>\n                            )}\n                        </Box>\n                        {api.gatewayVendor === 'wso2' && allPolicies && allPolicies.length > 0 && (\n                            <>\n                                <Box mt={6}>\n                                    <Typography variant='subtitle2' component='h3' className={classes.sectionTitle}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Overview.business.plans.title'\n                                            defaultMessage='Business Plans'\n                                        />\n                                    </Typography>\n                                </Box>\n                                <Box\n                                    flexWrap='wrap'\n                                    display='flex'\n                                    flexDirection='row'\n                                    alignItems='center'\n                                    mt={2}\n                                    ml={1}\n                                    textAlign='center'\n                                >\n                                    {allPolicies && allPolicies.map((tier) => (\n                                        <Card className={classes.cardRoot} key={tier.name}>\n                                            <CardContent>\n                                                <Typography className={classes.cardMainTitle} color='textSecondary' gutterBottom>\n                                                    {tier.name}\n                                                </Typography>\n                                                <Box mt={2}>\n                                                    <Typography className={classes.requestCount} color='textSecondary'>\n                                                        {tier.requestCount === 2147483647 ? 'Unlimited' : tier.requestCount}\n                                                    </Typography>\n                                                </Box>\n                                                <Box>\n                                                    <Typography className={classes.requestUnit} color='textSecondary'>\n                                                        Requests/\n                                                        {tier.timeUnit}\n                                                    </Typography>\n                                                </Box>\n                                            </CardContent>\n                                        </Card>\n                                    ))}\n                                </Box>\n                            </>\n                        )}\n                        {(showCredentials && subscribedApplications.length > 0) && (\n                            <>\n                                <Box mt={6}>\n                                    <Typography variant='subtitle2' component='h3' className={classes.sectionTitle}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Overview.subscriptions.title'\n                                            defaultMessage='Subscriptions'\n                                        />\n                                    </Typography>\n                                </Box>\n                                <Box mt={2} ml={1} pr={6}>\n                                    <TableContainer component={Paper}>\n                                        <Table className={classes.table} aria-label='simple table'>\n                                            <TableHead>\n                                                <TableRow>\n                                                    <TableCell>\n                                                        <FormattedMessage\n                                                            id={'Apis.Details.Overview.'\n                                                                + 'api.credentials.subscribed.apps.name'}\n                                                            defaultMessage='Application Name'\n                                                        />\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        <FormattedMessage\n                                                            id={'Apis.Details.Overview.api.'\n                                                                + 'credentials.subscribed.apps.tier'}\n                                                            defaultMessage='Throttling Tier'\n                                                        />\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        <FormattedMessage\n                                                            id={'Apis.Details.Overview.'\n                                                                + 'api.credentials.subscribed.apps.status'}\n                                                            defaultMessage='Application Status'\n                                                        />\n                                                    </TableCell>\n                                                </TableRow>\n                                            </TableHead>\n                                            <TableBody>\n                                                {subscribedApplications.map((app) => (\n                                                    <TableRow key={app.label}>\n                                                        <TableCell component='th' scope='row'>\n                                                            <MUILink component={Link} to={`/applications/${app.value}/overview`}>\n                                                                {app.label}\n                                                            </MUILink>\n                                                        </TableCell>\n                                                        <TableCell>{app.policy}</TableCell>\n                                                        <TableCell>{app.status}</TableCell>\n                                                    </TableRow>\n                                                ))}\n                                            </TableBody>\n                                        </Table>\n                                    </TableContainer>\n                                </Box>\n                            </>\n                        )}\n                        <Box mt={6}>\n                            {showComments && (\n                                <>\n                                    <Typography variant='subtitle2' component='h3' className={classes.sectionTitle}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Overview.comments.title'\n                                            defaultMessage='Comments'\n                                        />\n                                    </Typography>\n                                    <Box pr={6}>\n                                        {api && (\n                                            <Comments apiId={api.id} isOverview />\n                                        )}\n                                    </Box>\n                                </>\n                            )}\n                        </Box>\n                    </Box>\n                </Grid>\n                <Grid item xs={4} xl={3}>\n                    {user && showRating && (\n                        <Box display='flex' flexDirection='row' alignItems='center'>\n                            <StarRatingSummary avgRating={rating.avgRating} reviewCount={rating.total} returnCount={rating.count} />\n                            <VerticalDivider height={30} />\n                            <StarRatingBar\n                                apiId={api.id}\n                                isEditable\n                                showSummary={false}\n                                setRatingUpdate={setRatingUpdate}\n                            />\n                        </Box>\n                    )}\n                    <Box mt={6}>\n                        <Social />\n                    </Box>\n                    <Box mt={6} mb={1}>\n                        <Typography variant='subtitle2' component='h3' className={classes.sectionTitle}>\n                            <FormattedMessage\n                                id='Apis.Details.Overview.tags.title'\n                                defaultMessage='Tags'\n                            />\n                        </Typography>\n                    </Box>\n\n                    <Typography variant='body2' className={classes.endpointLabel}>\n                        {api.tags.map((tag) => (\n                            <Chip\n                                label={tag}\n                                key={tag}\n                                component={Link}\n                                clickable\n                                to={`/apis?offset=0&query=tag:${tag}`}\n                                classes={{ root: classes.chipRoot }}\n                                variant='outlined'\n                                size='small'\n                            />\n                        ))}\n                        {api.tags.length === 0 && (\n                            <FormattedMessage\n                                id='Apis.Details.Overview.list.tags.not'\n                                defaultMessage='Not Tagged'\n                            />\n                        )}\n                    </Typography>\n\n                    {/* Documentation */}\n                    {(showDocuments && allDocuments && allDocuments.length > 0) && (\n                        <>\n                            <Box mt={6}>\n                                <Typography variant='subtitle2' component='h3' className={classes.sectionTitle}>\n                                    <FormattedMessage\n                                        id='Apis.Details.Overview.documents.title'\n                                        defaultMessage='Documents'\n                                    />\n                                </Typography>\n                            </Box>\n                            <Box pr={2} pl={1}>\n                                <OverviewDocuments apiId={api.id} />\n                                {allDocuments.length > 2 && (\n                                    <MUILink component={Link} to={'/apis/' + api.id + '/documents'} className={classes.moreLink}>\n                                        {allDocuments.length - 2}\n                                        {' '}\n                                        <FormattedMessage\n                                            id='Apis.Details.Overview.comments.show.more.more'\n                                            defaultMessage='more'\n                                        />\n                                    </MUILink>\n                                )}\n                            </Box>\n                        </>\n\n                    )}\n                    {api.businessInformation.businessOwnerEmail && (\n                        <>\n                            <Box mt={6}>\n                                <Typography variant='subtitle2' component='h3' className={classes.sectionTitle}>\n                                    <FormattedMessage\n                                        id='Apis.Details.Overview.business.info'\n                                        defaultMessage='Business Info'\n                                    />\n                                </Typography>\n                            </Box>\n                            <Box mt={1}>\n                                <Typography variant='body2'>\n                                    {api.businessInformation.businessOwnerEmail}\n                                </Typography>\n                            </Box>\n                        </>\n                    )}\n                    <Box mt={6}>\n                        <Typography variant='subtitle2' component='h3' className={classes.sectionTitle}>\n                            <FormattedMessage\n                                id='Apis.Details.Overview.source'\n                                defaultMessage='Source'\n                            />\n                        </Typography>\n                    </Box>\n                    {(api.type === 'HTTP' || api.type === 'SOAPTOREST'\n                    || api.type === 'SOAP' || api.type === 'GRAPHQL' || api.type === 'WS' || api.type === 'WEBSUB'\n                    || api.type === 'SSE' || api.type === 'ASYNC') && (\n                        <Box mt={2}>\n                            {selectedEndpoint && (<SourceDownload selectedEndpoint={selectedEndpoint} />)}\n                        </Box>\n                    )}\n                    {/* Key Managers */}\n                    {getKeyManagers() && (\n                        <>\n                            <Box mt={6}>\n                                <Typography variant='subtitle2' component='h3' className={classes.sectionTitle}>\n                                    <FormattedMessage\n                                        id='Apis.Details.Overview.key.manager'\n                                        defaultMessage='Key Managers'\n                                    />\n                                </Typography>\n                            </Box>\n                            <Box mt={1}>\n                                {getKeyManagers()}\n                            </Box>\n                        </>\n                    )}\n                    {api.additionalProperties && Object.keys(api.additionalProperties).length > 0 && (\n                        <>\n                            <Box mt={6}>\n                                <Typography variant='subtitle2' className={classes.sectionTitle}>\n                                    <FormattedMessage\n                                        id='Apis.Details.Overview.additional.properties'\n                                        defaultMessage='Additonal properties'\n                                    />\n                                </Typography>\n                            </Box>\n                            <Box mt={1} ml={1}>\n                                {api.additionalProperties\n                                    .filter(({ name, display }) => display && !['slack_url', 'github_repo'].includes(name))\n                                    .map(({ name, value }) => {\n                                        return (\n                                            <Typography variant='body2'>\n                                                {name}\n                                                {' '}\n                                                :\n                                                {' '}\n                                                {value}\n                                            </Typography>\n                                        );\n                                    })}\n                            </Box>\n                        </>\n                    )}\n                </Grid>\n            </Grid>\n        </Paper>\n    );\n}\n\nexport default Overview;\n"],"sourceRoot":""}