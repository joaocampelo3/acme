{"version":3,"sources":["webpack:///./source/src/app/components/Shared/InlineMessage.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/ViewToken.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/Tokens.jsx","webpack:///./source/src/app/components/Shared/withSettingsContext.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/ViewSecret.jsx","webpack:///./source/src/app/components/Apis/Listing/ApiTagThumb.jsx","webpack:///./source/src/app/components/Apis/Listing/TagCloudListingTags.jsx","webpack:///./source/src/app/components/Apis/Listing/NoApi.jsx","webpack:///./source/src/app/components/Shared/LeftMenuItem.jsx","webpack:///./source/src/app/components/Apis/Listing/TagCloudListing.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/SubscribeToApi.jsx","webpack:///./source/src/app/components/Apis/Listing/ApiBreadcrumbs.jsx","webpack:///./source/src/app/components/Apis/Listing/APICards/DocThumb.jsx","webpack:///./source/src/app/components/Apis/Listing/ApiTableView.jsx","webpack:///./source/src/app/components/Apis/Listing/APICategoryThumb.jsx","webpack:///./source/src/app/components/Apis/Listing/CategoryListingCategories.jsx","webpack:///./source/src/app/components/Apis/Listing/ApiTagCloud.jsx","webpack:///./source/src/app/components/Apis/Listing/RecommendedApiThumb.jsx","webpack:///./source/src/app/components/Apis/Listing/Recommendations.jsx","webpack:///./source/src/app/components/Apis/Listing/CommonListing.jsx","webpack:///./source/src/app/components/Base/Errors/SubscriptionNotFound.jsx","webpack:///./source/src/app/components/Apis/Details/SolaceApi/SolaceTopicStyles.jsx","webpack:///./source/src/app/components/Apis/Details/SolaceApi/SolaceTopicsInfo.jsx","webpack:///./source/src/app/components/Apis/Details/Breadcrumb.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/ButtonPanel.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/CreateAppStep.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/SubscribeToAppStep.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/GenerateKeysStep.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/GenerateAccessTokenStep.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/CopyAccessTokenStep.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/Wizard.jsx","webpack:///./source/src/app/components/Apis/Details/index.jsx","webpack:///./source/src/app/components/Apis/Apis.jsx"],"names":["InlineMessage","props","type","title","messageType","severity","children","propTypes","classes","PropTypes","shape","isRequired","string","ViewToken","React","Component","tokenCopied","name","this","setState","that","elementName","setTimeout","getTokeScopesString","tokenScopes","join","render","token","consumerSecret","isTokenExchange","intl","isResidenceTokenAvailable","state","id","defaultMessage","className","root","secretWrapper","secret","variant","component","isOauth","epWrapper","for","prodLabel","defaultValue","accessToken","multiline","fullWidth","rows","InputProps","disableUnderline","bootstrapRoot","input","bootstrapInput","InputLabelProps","shrink","bootstrapFormLabel","formatMessage","placement","text","onCopy","aria-label","color","validityTime","defaultProps","number","array","injectIntl","withStyles","theme","padding","marginTop","spacing","flex","marginRight","borderRadius","backgroundColor","custom","apiDetailPages","tokenTextBoxBackground","palette","getContrastText","border","height","width","transition","transitions","create","fontFamily","borderColor","boxShadow","display","marginBottom","lineHeight","whiteSpace","contentWrapper","maxWidth","contentAreaWidth","leftMenu","background","paper","MenuProps","PaperProps","style","maxHeight","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","tokens","handleChange","field","event","accessTokenRequest","updateAccessTokenRequest","newRequest","target","currentTarget","scopesSelected","value","keyType","subscriptionScopes","margin","FormControlOdd","disabled","length","htmlFor","quotaHelp","multiple","onChange","e","renderValue","selected","chips","map","key","label","chip","scope","contextTypes","FormControl","position","flexWrap","withSettings","WrappedComponent","context","ViewSecret","secretCopied","common","white","ApiTagThumb","tag","path","mainPage","tagLink","tagWise","thumbnail","image","split","thumbWrapper","to","imageWrapper","src","app","alt","classNames","thumbContent","textWrapper","Typography","thumbHeader","gutterBottom","ListItem","button","ListItemIcon","Icon","ListItemText","primary","imageOverlap","func","thumbLeft","alignSelf","thumbRight","thumbInfo","overflow","textOverflow","cursor","justifyContent","contextBox","parseInt","paddingTop","deleteIcon","fill","tagCloud","secondary","alignItems","bottom","contentBackgroundColor","withTheme","useStyles","makeStyles","mainTitle","mainTitleWrapper","flexGrow","listContentWrapper","linkTextWrapper","main","tagWiseThumbWrapper","filterTitle","fontWeight","paddingLeft","titleBackground","infoBar","mainPageList","mainPageAllApis","TagCloudListingTags","useTheme","active","showAllApis","allTags","apisTagCloudGroup","count","filter","item","List","Object","keys","keyInner","Divider","align","messageWrapper","textAlign","NoApi","container","xs","noApiImage","useStylesBootstrap","arrow","black","tooltip","BootstrapTooltip","LeftMenuItem","setSelected","useState","history","route","submenu","open","routeToCheck","strokeColor","iconSize","ditectCurrentMenu","location","window","pathname","test1","RegExp","test2","match","useEffect","listen","activeBackground","leftMenuActive","leftMenuActiveSubmenu","leftLInk","leftLink_IconLeft","cloneElement","leftLink_Icon","noIcon","icon","iconText","leftLInkText","leftLInkText_IconLeft","leftLInkText_NoText","leftLInkText_NoTextWhenSmall","element","oneOfType","bool","withRouter","textTransform","LeftMenu","typography","left","top","paddingBottom","breakpoints","down","paddingRight","fontSize","caption","textDecoration","grey","appBar","borderBottom","A200","mainIconWrapper","content","iconDefault","TagCloudListing","setAllTags","API","getAllTags","then","response","body","list","catch","error","console","log","strokeColorMain","subscribeToApi","appSelected","setAppSelected","policySelected","setPolicySelected","applicationsList","setApplicationsList","throttlingPolicyList","applicationsAvailable","subscriptionRequest","updateSubscriptionRequest","renderSmall","tierName","applicationId","throttlingPolicy","subscribeRoot","subscribeRootSmall","md","smallDisplay","aria-describedby","options","getOptionLabel","option","renderInput","params","smallDisplayFix","displayEmpty","selectEmpty","policy","appDropDown","tierPlan","Fragment","selectMenuRoot","monetizationAttributes","pricePerRequest","currencyType","fixedPrice","billingCycle","index","arrayOf","titleBar","borderBottomWidth","borderBottomStyle","buttonLeft","buttonRight","marginLeft","buttonsWrapper","legend","inputText","buttonRightLink","link","linkNotActive","selectedTagText","textIndent","apiGroup","ApiBreadcrumbs","selectedTag","Paper","elevation","Breadcrumbs","Link","CustomIcon","windowURL","URL","webkitURL","DocThumb","constructor","super","category","MaterialIcons","categories","selectedIcon","backgroundIndex","imageObj","componentWillUnmount","revokeObjectURL","doc","sourceType","apiName","apiVersion","apiUUID","detailsLink","imageWidth","defaultImage","defaultApiImage","ImageView","ImageGenerator","api","fixedIcon","contentPictureOverlap","onClick","handleRedirectToAPIOverview","contextType","ApiContext","minHeight","flexDirection","ApiTableView","gridView","themeAdditions","muiTheme","overrides","MUIDataTable","tableRoot","listView","tableBodyEvenBackgrund","tableBodyOddBackgrund","tableHeadBackground","MUIDataTablePagination","default","MuiMenuItem","MUIDataTableToolbar","MUIDataTableBodyCell","systemTheme","merge","DefaultConfigurations","Configurations","cloneDeep","dataTableTheme","createMuiTheme","loading","xhrRequest","data","pagination","total","setTenantDomain","code","Alert","finally","query","page","rowsPerPage","searchQuery","URLSearchParams","get","composeQuery","queryString","parse","limit","offset","search","getAllAPIs","localStorage","getItem","pageType","componentDidMount","apiType","getData","componentDidUpdate","prevProps","social","showRating","columns","customBodyRender","tableMeta","updateValue","tableViewObj","rowData","artifact","rowIndex","sort","apiId","apiNameLink","businessOwner","avgRating","StarRatingBar","apiRating","isEditable","showSummary","filterType","responsive","serverSide","onTableChange","action","tableState","changePage","selectableRows","onChangeRowsPerPage","numberOfRows","pageInner","countInner","setItem","textLabels","toolbar","downloadCsv","print","viewColumns","customRowRender","_data","dataIndex","ApiThumb","customHeight","customWidth","download","customToolbar","Loading","getMuiTheme","iconColor","listViewIconSize","APICategoryThumb","categoryLink","categoryDesc","description","substring","Tooltip","listItemText","CategoryListingCategories","allCategories","clickablePointer","ApiTagCloud","colorOptions","useHistory","apisTagWithoutGroups","minSize","maxSize","tags","shuffle","tagSearchURL","push","handleOnClick","RecommendedApiThumb","isHover","toggleMouseOver","bind","Api","getAPIThumbnail","headers","iconJson","JSON","size","url","createObjectURL","getPathPrefix","showInfo","imageHeight","media","Card","onMouseOver","onFocus","onMouseOut","onBlur","raised","card","CardMedia","suppressLinkStyles","CardContent","apiDetails","ratingWrapper","chipWrapper","transportType","Chip","undefined","unit","row","thumbBy","objectFit","Recommendations","assign","getApiRecommendations","rowsPerPageOptions","rowImageOverride","CommonListing","listType","prevState","showLeftMenu","enabled","settings","monetizationEnabled","isMonetizationEnabled","recommendationEnabled","isRecommendationEnabled","defaultApiView","showToggle","restApiClient","apiCategories","user","AuthManager","getUser","tagCloudActive","splits","splitTagArray","tagPaneVisible","categoryPaneVisible","apiListingWrapper","sliderButton","toggleLeftMenu","onKeyDown","LeftMenuForSlider","rotatedText","contentWithoutTags","contentWithTagsHidden","contentWithTags","IconButton","setListType","iconSelected","Provider","Settings","rightIcon","ListingWrapper","listGridSelectedColor","sliderWidth","overflowY","sliderBackground","right","transform","recommendationsBar","SubscriptionNotFound","Container","Box","Grid","justify","statusText","py","pb","Button","solaceTopicStyles","table","minWidth","centerItems","leftCol","iconAligner","iconTextWrapper","iconEven","iconOddColor","iconOdd","heading","heading1","emptyBox","summaryRoot","actionPanel","Box2","Box3","urlPaper","avatar","iconStyle","VerbElement","verb","resourceChipColors","toLowerCase","customButton","useMenuStyles","disableFocusRipple","toUpperCase","SolaceTopicsInfo","apiUuid","useParams","application","setApplication","environment","setEnvironment","selectedProtocol","setSelectedProtocol","envsListOfApplication","setEnvsListOfApplication","selectedEndpoint","setSelectedEndpoint","protocolsListOfEnvironments","setProtocolsListOfEnvironments","topics","setTopics","applicationList","setApplicationList","notFound","setNotFound","urlCopied","setUrlCopied","topicCopied","setTopicCopied","apiTopics","setApiTopics","apiPubTopics","setApiPubTopics","apiSubTopics","setApiSubTopics","useIntl","onTopicCopy","setPubAndSubTopics","allTopics","allApiTopics","apiPubTopicList","publishTopics","t","toString","includes","apiSubTopicList","subscribeTopics","client","promisedApi","getAllTopics","apiTopicList","obj","entry","parts","getSubscriptionAdditionalInfo","appInner","applicationName","solaceDeployedEnvironments","solaceURLs","protocol","endpointURL","SolaceTopicsObject","mqttSyntax","defaultSyntax","status","ResourceNotFound","setProtocolTopics","selectedEnv","mt","TextField","select","selectedApp","helperText","SelectProps","native","environmentDisplayName","upperCaseString","pt","mr","InputBase","inputProps","Avatar","sizes","interactive","p","mainBack","Breadcrumb","useContext","breadcrumbDocument","pages","detectCurrentMenu","locationLocal","i","VerticalDivider","separator","document","data-testid","styles","pl","ButtonPanel","currentStep","handleCurrentStep","handleReset","nextActive","updateSubscriptionData","stepsLength","appCreateFormWrapper","warningIcon","APPLICATION_STATES","setThrottlingPolicyList","applicationRequest","setApplicationRequest","tokenType","groups","attributes","isNameValid","setIsNameValid","allAppAttributes","setAllAppAttributes","hasValidKM","setHasValidKM","setCreatedApp","incrementStep","setStepStatus","stepStatuses","apiObject","promiseTiers","getAllTiers","promisedAttributes","getAllApplicationAttributes","promisedKeyManagers","getKeyManagers","Promise","all","tierResponse","allAttributes","keyManagers","throttlingPolicyListLocal","allAppAttr","hidden","responseKeyManagerList","hasValidKMInner","x","px","ApplicationCreateForm","updateApplicationRequest","validateName","trim","resolve","reject","Error","handleAttributesChange","newApplicationRequest","isRequiredAttribute","attribute","required","getAttributeValue","handleDeleteChip","appGroups","values","v","handleAddChip","slice","createApplication","appCreated","PROCEED","BLOCKED","message","mb","ml","SUBSCRIPTION_STATES","newApp","setNewApp","tiers","createdApp","newSubscriptionRequest","tierData","SubscribeToApi","subscribe","subscriptionId","info","keyConfigWrapper","radioWrapper","subTitle","tabPanel","hr","muiFormGroupRoot","TabPanel","other","role","aria-labelledby","node","generateKeysStep","keyStates","setNextActive","keyManager","setKeyManager","keyRequest","setKeyRequest","supportedGrantTypes","callbackUrl","additionalProperties","setCreatedKeyType","setCreatedSelectedTab","selectedKeyManager","responseKeyManagerListDefault","filteredGrantTypes","availableGrantTypes","k","newKeyRequest","process","lg","FormHelperText","Table","TableBody","TableRow","TableCell","displayName","tokenEndpoint","revokeEndpoint","userInfoEndpoint","gt","grantTypes","m","Application","generateKeys","keyState","tokenWrapper","generateAccessTokenStep","setKeyType","selectedTab","setSelectedTab","setSubscriptionScopes","setAccessTokenRequest","timeout","setCreatedToken","createdKeyType","createdSelectedTab","getKeys","subscriptionScopesList","messages","defineMessages","dataInfo","Tokens","generateToken","stepComponents","CreateAppStep","SubscribeToAppStep","GenerateKeysStep","GenerateAccessTokenStep","createdToken","my","mx","Wizard","stepStatus","steps","redirect","CurrentStepComponent","titleSub","Stepper","activeStep","Step","StepLabel","boxWrapper","handleNext","subscribeTitle","plainContent","instructions","wizardContent","ApiConsole","lazy","GraphQLConsole","AsyncApiConsole","Overview","Documents","Credentials","Comments","Sdk","AsyncApiDefinition","LoadableSwitch","setbreadcrumbDocument","redirectURL","tryoutRoute","CONSTANTS","API_TYPES","WS","WEBSUB","SSE","ASYNC","fallback","Progress","exact","from","Details","callback","existingSubscriptions","promisedApplications","restApi","getAPIById","api_uuid","user1","User","isSideBarOpen","getSubscriptions","subscriptionLimit","subscribeApplicationLimit","getAllApplications","subscriptions","applications","subscribedApplications","applicationInfo","subscribedAppIds","sub","filteredApp","overviewHiden","xo","setDetailsAPI","handleDrawerClose","handleDrawerOpen","prevApiUuid","newApiUuid","setUser","isAsyncAPI","rootIconSize","rootIconTextVisible","rootIconVisible","showCredentials","showComments","showTryout","showDocuments","showSdks","showAsyncSpecification","showSolaceTopics","prefix","sufix","globalStyle","pathPrefix","isWidget","searchParams","isAsyncApi","Helmet","leftMenuHorizontal","leftMenuVerticalLeft","leftMenuVerticalLeftMinView","leftMenuVerticalRight","leftLInkMain","leftLInkMainText","gatewayVendor","contentExpandView","contentLoader","contentLoaderRightMenu","shiftToLeft","shiftToRight","shiftToLeftMinView","shiftToRightMinView","leftMenuPaddingLeft","backgroundImage","overflowX","borderRight","rootBackground","detailsContent","shiftLeft"],"mappings":"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","file":"Apis.800351a0eb878c789ea9.bundle.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Icon from '@material-ui/core/Icon';\nimport VerticalDivider from './VerticalDivider';\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\n/**\n * Main style object\n *\n * @param {*} theme\n */\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        '& > * + *': {\n            marginTop: theme.spacing(2),\n        },\n    },\n});\n/**\n *  Renders a inline massage\n *\n * @class InlineMessage\n * @extends {React.Component}\n */\nfunction InlineMessage(props) {\n    const { type, title } = props;\n    const messageType = type || 'info';\n    return (\n        <Alert severity={messageType}>\n            {title && (<AlertTitle>{title}</AlertTitle>)}\n            {props.children}\n        </Alert>\n\n    );\n}\n\nInlineMessage.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    type: PropTypes.string.isRequired,\n};\n\nexport default InlineMessage;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FileCopy from '@material-ui/icons/FileCopy';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport IconButton from '@material-ui/core/IconButton';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport InlineMessage from '../InlineMessage';\nimport ViewSecret from './ViewSecret';\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = (theme) => ({\n    bootstrapRoot: {\n        padding: 0,\n        'label + &': {\n            marginTop: theme.spacing(3),\n        },\n        flex: 1,\n        marginRight: theme.spacing(1),\n    },\n    bootstrapInput: {\n        borderRadius: 4,\n        backgroundColor: theme.custom.apiDetailPages.tokenTextBoxBackground,\n        color: theme.palette.getContrastText(theme.custom.apiDetailPages.tokenTextBoxBackground),\n        border: '1px solid #ced4da',\n        padding: '5px 12px',\n        height: 100,\n        width: '100%',\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"',\n            'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n        '&:focus': {\n            borderColor: '#80bdff',\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n    },\n    epWrapper: {\n        display: 'flex',\n        marginTop: 20,\n    },\n    secretWrapper: {\n        display: 'flex',\n        marginBottom: 20,\n    },\n    prodLabel: {\n        lineHeight: '30px',\n        marginRight: 10,\n        width: 100,\n        'text-align-last': 'center',\n        whiteSpace: 'nowrap',\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth - theme.custom.leftMenu.width,\n    },\n    root: {\n        marginTop: 20,\n        '& span, & h5, & label, & td, & li, & div, & input': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        },\n\n    },\n});\n/**\n *\n *\n * @class ViewToken\n * @extends {React.Component}\n */\nclass ViewToken extends React.Component {\n    state = {\n        tokenCopied: false,\n    };\n\n    /**\n     *\n     *\n     * @memberof ViewToken\n     */\n    onCopy = (name) => () => {\n        this.setState({\n            [name]: true,\n        });\n        const that = this;\n        const elementName = name;\n        const caller = function () {\n            that.setState({\n                [elementName]: false,\n            });\n        };\n        setTimeout(caller, 4000);\n    };\n\n    /**\n     * Generate a comma separate string of token scopes\n     * @param {string} tokenScopes token scopes\n     * @returns {String} scopeString comma separated string of token scopes\n     * @memberof ViewToken\n     */\n    getTokeScopesString(tokenScopes) {\n        if (tokenScopes) {\n            return tokenScopes.join(', ');\n        }\n        return '';\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof ViewToken\n     */\n    render() {\n        const {\n            classes, token, consumerSecret, isTokenExchange, intl, isResidenceTokenAvailable,\n        } = this.props;\n        const { tokenCopied } = this.state;\n\n        if (isTokenExchange && !isResidenceTokenAvailable) {\n            return (\n                <Typography>\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.ViewCurl.error'\n                        defaultMessage='Please generate the Consumer Key and Secret for Residence Key Manager with selecting the urn:ietf:params:oauth:grant-type:token-exchange grant type in\n                                             order to use the token Exchange Approach. '\n                    />\n                </Typography>\n            )\n        } else {\n            return (\n            <div className={classes.root}>\n                {consumerSecret && (\n                    <div className={classes.secretWrapper}>\n                        <ViewSecret secret={{consumerSecret}}/>\n                    </div>\n                )}\n                <InlineMessage type='warn'>\n                    <Typography variant='h5' component='h3'>\n                        {(token.isOauth) && (\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.ViewToken.please.copy'\n                                defaultMessage='Please Copy the Access Token'\n                            />\n                        )}\n                        {(!token.isOauth) && (\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.ViewToken.please.copy.apikey'\n                                defaultMessage='Please Copy the API Key'\n                            />\n                        )}\n                    </Typography>\n                    <Typography component='p'>\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewToken.please.copy.help'\n                            defaultMessage={'If the token type is JWT or API Key, please copy this generated token value as it will be displayed only for'\n                            + ' the current browser session. '\n                            + '( The token will not be visible in the UI after the page is refreshed. )'}\n                        />\n                    </Typography>\n                </InlineMessage>\n                <div className={classes.epWrapper}>\n                    <label for='access-token' className={classes.prodLabel}>\n                        {(token.isOauth) && (\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.ViewToken.access.token'\n                                defaultMessage='Access Token'\n                            />\n                        )}\n                        {(!token.isOauth) && (\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.ViewToken.apikey'\n                                defaultMessage='API Key'\n                            />\n                        )}\n                    </label>\n                    <TextField\n                        defaultValue={token.accessToken}\n                        id='access-token'\n                        multiline\n                        fullWidth\n                        rows={4}\n                        InputProps={{\n                            disableUnderline: true,\n                            classes: {\n                                root: classes.bootstrapRoot,\n                                input: classes.bootstrapInput,\n                            },\n                        }}\n                        InputLabelProps={{\n                            shrink: true,\n                            className: classes.bootstrapFormLabel,\n                        }}\n                    />\n                    <Tooltip\n                        title={\n                            tokenCopied\n                                ? intl.formatMessage({\n                                    defaultMessage: 'Copied',\n                                    id: 'Shared.AppsAndKeys.ViewToken.copied',\n                                })\n                                : intl.formatMessage({\n                                    defaultMessage: 'Copy to clipboard',\n                                    id: 'Shared.AppsAndKeys.ViewToken.copy.to.clipboard',\n                                })\n                        }\n                        placement='right'\n                    >\n                        <CopyToClipboard text={token.accessToken} onCopy={this.onCopy('tokenCopied')}>\n                            <IconButton id = 'copy-to-clipbord-icon' aria-label='Copy to clipboard'>\n                                <FileCopy color='secondary'>file_copy</FileCopy>\n                            </IconButton>\n                        </CopyToClipboard>\n                    </Tooltip>\n                </div>\n                <FormHelperText>\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.ViewToken.info.first'\n                        defaultMessage='Above token has a validity period of '\n                    />\n                    {token.validityTime}\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.ViewToken.info.second'\n                        defaultMessage=' seconds'\n                    />\n                    {token.isOauth && (\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewToken.info.third'\n                            defaultMessage=' and the token has ('\n                        />\n                    )}\n                    {this.getTokeScopesString(token.tokenScopes)}\n                    {token.isOauth && (\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewToken.info.fourth'\n                            defaultMessage=') scopes'\n                        />\n                    )}\n                    .\n                </FormHelperText>\n            </div>\n        )};\n    }\n}\n\nViewToken.defaultProps = {\n    consumerSecret: null,\n};\n\nViewToken.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    token: PropTypes.shape({\n        accessToken: PropTypes.string.isRequired,\n        validityTime: PropTypes.number.isRequired,\n        tokenScopes: PropTypes.array.isRequired,\n    }).isRequired,\n    consumerSecret: PropTypes.string,\n};\n\nexport default injectIntl(withStyles(styles)(ViewToken));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Typography from '@material-ui/core/Typography';\nimport Chip from '@material-ui/core/Chip';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\n// Styles for Grid and Paper elements\nconst styles = theme => ({\n    FormControl: {\n        padding: theme.spacing(2),\n        width: '100%',\n    },\n    FormControlOdd: {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n    },\n    quotaHelp: {\n        position: 'relative',\n    },\n    chips: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    chip: {\n        margin: theme.spacing(0.25),\n    },\n});\n\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: 224,\n            width: 250,\n        },\n    },\n    anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"left\"\n    },\n    transformOrigin: {\n        vertical: \"top\",\n        horizontal: \"left\"\n    },\n    getContentAnchorEl: null,\n};\n\n/**\n * Used to display generate acctoken UI\n */\nconst tokens = (props) => {\n    /**\n    * This method is used to handle the updating of create application\n    * request object.\n    * @param {*} field field that should be updated in appliction request\n    * @param {*} event event fired\n    */\n    const handleChange = (field, event) => {\n        const { accessTokenRequest, updateAccessTokenRequest } = props;\n        const newRequest = { ...accessTokenRequest };\n\n        const { target: currentTarget } = event;\n\n        switch (field) {\n            case 'scopesSelected':\n                newRequest.scopesSelected = currentTarget.value;\n                break;\n            case 'keyType':\n                newRequest.keyType = currentTarget.value;\n                break;\n            default:\n                break;\n        }\n        updateAccessTokenRequest(newRequest);\n    };\n    const {\n        classes, accessTokenRequest, subscriptionScopes,\n    } = props;\n\n    return (\n        <>\n            <FormControl\n                margin='normal'\n                className={classes.FormControlOdd}\n                disabled={subscriptionScopes.length === 0}\n            >\n                <InputLabel htmlFor='quota-helper' className={classes.quotaHelp}>\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.Tokens.when.you.generate.scopes'\n                        defaultMessage='Scopes'\n                    />\n\n                </InputLabel>\n                <Select\n                    name='scopesSelected'\n                    multiple\n                    value={accessTokenRequest.scopesSelected}\n                    onChange={e => handleChange('scopesSelected', e)}\n                    input={<Input id='select-multiple-chip' />}\n                    renderValue={selected => (\n                        <div className={classes.chips}>\n                            {selected.map(value => (\n                                <Chip key={value} label={value} className={classes.chip} />\n                            ))}\n                        </div>\n                    )}\n                    MenuProps={MenuProps}\n                >\n                    {subscriptionScopes.map(scope => (\n                        <MenuItem\n                            key={scope}\n                            value={scope}\n                        >\n                            {scope}\n                        </MenuItem>\n                    ))}\n                </Select>\n                <Typography variant='caption'>\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.Tokens.when.you.generate'\n                        defaultMessage={'When you generate access tokens to APIs protected by scope/s,'\n                            + ' you can select the scope/s and then generate the token for it. Scopes enable '\n                            + 'fine-grained access control to API resources based on user roles. You define scopes to '\n                            + 'an API resource. When a user invokes the API, his/her OAuth 2 bearer token cannot grant '\n                            + 'access to any API resource beyond its associated scopes.'}\n                    />\n                </Typography>\n            </FormControl>\n        </>\n    );\n};\ntokens.contextTypes = {\n    intl: PropTypes.shape({}).isRequired,\n};\nexport default withStyles(styles)(tokens);\n","import React from 'react';\nimport { SettingsConsumer } from './SettingsContext';\n\nconst withSettings = (WrappedComponent) => {\n    /**\n     * Higher order component with settings\n     * @param {*} props properties\n     * @returns {Context.Consumer}\n     */\n    function HOCWithSettings(props) {\n        return (\n            <SettingsConsumer>\n                {\n                    context => <WrappedComponent {...context} {...props} />\n                }\n            </SettingsConsumer>\n        );\n    }\n    return HOCWithSettings;\n};\n\nexport default withSettings;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FileCopy from '@material-ui/icons/FileCopy';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport InlineMessage from '../InlineMessage';\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = theme => ({\n    bootstrapRoot: {\n        padding: 0,\n        'label + &': {\n            marginTop: theme.spacing(3),\n        },\n    },\n    bootstrapInput: {\n        borderRadius: 4,\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        padding: '5px 12px',\n        width: 350,\n        height: 100,\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"',\n            'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n        '&:focus': {\n            borderColor: '#80bdff',\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n    },\n    epWrapper: {\n        display: 'flex',\n        marginTop: 20,\n    },\n    prodLabel: {\n        lineHeight: '30px',\n        marginRight: 10,\n        width: 100,\n        'text-align-last': 'center',\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth - theme.custom.leftMenu.width,\n    },\n    root: {\n        marginBottom: 20,\n    },\n});\n/**\n *\n *\n * @class ViewSecret\n * @extends {React.Component}\n */\nclass ViewSecret extends React.Component {\n    state = {\n        secretCopied: false,\n    };\n\n    /**\n     *\n     *\n     * @memberof ViewSecret\n     */\n    onCopy = name => () => {\n        this.setState({\n            [name]: true,\n        });\n        const that = this;\n        const elementName = name;\n        const caller = function () {\n            that.setState({\n                [elementName]: false,\n            });\n        };\n        setTimeout(caller, 4000);\n    };\n\n    /**\n     * Generate a comma separate string of token scopes\n     *\n     * @param {string} tokenScopes token scopes\n     * @returns {String} scopeString comma separated string of token scopes\n     * @memberof ViewSecret\n     */\n    getTokeScopesString(tokenScopes) {\n        if (tokenScopes) {\n            return tokenScopes.join(', ');\n        }\n        return '';\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof ViewSecret\n     */\n    render() {\n        const { classes, secret, intl } = this.props;\n        const { secretCopied } = this.state;\n        return (\n            <div className={classes.root}>\n                <InlineMessage type='warn'>\n                    <Typography variant='h5' component='h3'>\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewSecret.please.copy.secret'\n                            defaultMessage='Please Copy the Consumer Secret'\n                        />\n                    </Typography>\n                    <Typography component='p'>\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewSecret.please.copy.secret.help'\n                            defaultMessage={`Please make a note of the regenerated consumer \n                            secret value as it will be displayed only once.`}\n                        />\n                    </Typography>\n                </InlineMessage>\n                <div className={classes.epWrapper}>\n                    <Typography className={classes.prodLabel}>\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewSecret.consumer.secret'\n                            defaultMessage='Consumer Secret'\n                        />\n                    </Typography>\n                    <TextField\n                        defaultValue={secret.consumerSecret}\n                        id='bootstrap-input'\n                        multiline\n                        rows={4}\n                        InputProps={{\n                            disableUnderline: true,\n                            classes: {\n                                root: classes.bootstrapRoot,\n                                input: classes.bootstrapInput,\n                            },\n                        }}\n                        InputLabelProps={{\n                            shrink: true,\n                            className: classes.bootstrapFormLabel,\n                        }}\n                    />\n                    <Tooltip\n                        title={\n                            secretCopied\n                                ? intl.formatMessage({\n                                    defaultMessage: 'Copied',\n                                    id: 'Shared.AppsAndKeys.ViewSecret.copied',\n                                })\n                                : intl.formatMessage({\n                                    defaultMessage: 'Copy to clipboard',\n                                    id: 'Shared.AppsAndKeys.ViewSecret.copy.to.clipboard',\n                                })\n                        }\n                        placement='right'\n                    >\n                        <CopyToClipboard text={secret.consumerSecret} onCopy={this.onCopy('secretCopied')}>\n                            <FileCopy color='secondary'>file_copy</FileCopy>\n                        </CopyToClipboard>\n                    </Tooltip>\n                </div>\n            </div>\n        );\n    }\n}\n\nViewSecret.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    secret: PropTypes.shape({\n        consumerSecret: PropTypes.string.isRequired,\n    }).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(ViewSecret));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Icon from '@material-ui/core/Icon';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { app } from 'Settings';\n\n/**\n * @inheritdoc\n * @param {*} theme theme object\n */\nconst styles = (theme) => ({\n    thumbContent: {\n        width: theme.custom.tagWise.thumbnail.width - theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(1),\n    },\n    thumbLeft: {\n        alignSelf: 'flex-start',\n        flex: 1,\n    },\n    thumbRight: {\n        alignSelf: 'flex-end',\n    },\n    thumbInfo: {\n        display: 'flex',\n    },\n    thumbHeader: {\n        width: theme.custom.tagWise.thumbnail.width - theme.spacing(1),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        justifyContent: 'center',\n        margin: 0,\n    },\n    contextBox: {\n        // eslint-disable-next-line radix\n        width: parseInt(150 - theme.spacing(0.5)),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        display: 'inline-block',\n        lineHeight: '1em',\n    },\n    thumbWrapper: {\n        position: 'relative',\n        paddingTop: 20,\n        marginRight: theme.spacing(2),\n    },\n    deleteIcon: {\n        fill: 'red',\n    },\n    textWrapper: {\n        color: theme.custom.tagCloud.leftMenu.color,\n        '& .material-icons': {\n            color: theme.custom.tagCloud.leftMenu.color,\n        },\n    },\n    image: {\n        width: theme.custom.tagWise.thumbnail.width,\n    },\n    imageWrapper: {\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.background.paper,\n        width: theme.custom.tagWise.thumbnail.width + theme.spacing(1),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    imageOverlap: {\n        position: 'absolute',\n        bottom: 1,\n        backgroundColor: theme.custom.thumbnail.contentBackgroundColor,\n    },\n});\n\n/**\n * Get ApiTagThumb\n * @param {*} props properties\n * @returns {*}\n */\nfunction ApiTagThumb(props) {\n    const {\n        tag, path, classes, theme, style, mainPage,\n    } = props;\n    const tagLink = path + ':' + tag.value;\n    const {\n        tagWise: {\n            thumbnail: { image },\n        },\n    } = theme.custom;\n    const name = tag.value.split(theme.custom.tagWise.key)[0];\n    if (style === 'fixed-left' || !mainPage) {\n        return (\n            <Link to={tagLink} className={classes.textWrapper}>\n                <ListItem button>\n                    <ListItemIcon>\n                        <Icon>label</Icon>\n                    </ListItemIcon>\n                    <ListItemText primary={name} />\n                </ListItem>\n            </Link>\n        );\n    }\n\n    return (\n        <div className={classes.thumbWrapper}>\n            <Link to={tagLink} className={classes.imageWrapper}>\n                <img src={app.context + image} className={classes.image} alt='' />\n            </Link>\n            <div className={classNames(classes.thumbContent)}>\n                <Link to={tagLink} className={classes.textWrapper}>\n                    <Typography className={classes.thumbHeader} variant='h4' gutterBottom title={name}>\n                        {name}\n                    </Typography>\n                </Link>\n            </div>\n        </div>\n    );\n}\n\nApiTagThumb.propTypes = {\n    classes: PropTypes.shape({\n        thumbWrapper: PropTypes.shape({}).isRequired,\n        imageWrapper: PropTypes.shape({}).isRequired,\n        thumbContent: PropTypes.shape({}).isRequired,\n        imageOverlap: PropTypes.shape({}).isRequired,\n        textWrapper: PropTypes.shape({}).isRequired,\n        thumbHeader: PropTypes.shape({}).isRequired,\n        image: PropTypes.shape({}).isRequired,\n    }).isRequired,\n    theme: PropTypes.shape({\n        custom: PropTypes.shape({\n            tagWise: PropTypes.shape({}).isRequired,\n        }).isRequired,\n    }).isRequired,\n    tag: PropTypes.shape({\n        value: PropTypes.shape({\n            split: PropTypes.func,\n        }).isRequired,\n    }).isRequired,\n    path: PropTypes.shape({}).isRequired,\n    style: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(ApiTagThumb);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Icon from '@material-ui/core/Icon';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport ApiTagThumb from './ApiTagThumb';\n\nconst useStyles = makeStyles((theme) => ({\n    mainTitle: {\n        paddingTop: 10,\n    },\n    mainTitleWrapper: {\n        flexGrow: 1,\n    },\n    listContentWrapper: {\n        padding: `0 ${theme.spacing(3)}px`,\n    },\n    textWrapper: {\n        color: theme.custom.tagCloud.leftMenu.color,\n        '& .material-icons': {\n            color: theme.custom.tagCloud.leftMenu.color,\n        },\n    },\n    linkTextWrapper: {\n        color: theme.palette.primary.main,\n    },\n    tagWiseThumbWrapper: {\n        display: 'flex',\n    },\n    filterTitle: {\n        fontWeight: 200,\n        paddingLeft: theme.spacing(2),\n        background: theme.custom.tagCloud.leftMenu.titleBackground,\n        color: theme.palette.getContrastText(theme.custom.tagCloud.leftMenu.titleBackground),\n        height: theme.custom.infoBar.height,\n        alignItems: 'center',\n        display: 'flex',\n    },\n    mainPageList: {\n        display: 'flex',\n    },\n    mainPageAllApis: {\n        width: '100%',\n    },\n}));\n\n/**\n * Tag cloud listing tags\n * @param {JSON} props properties passed from parent.\n * @returns {void}\n */\nfunction TagCloudListingTags(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const {\n        custom: {\n            tagWise: {\n                key, active, style, showAllApis,\n            },\n        },\n    } = theme;\n\n    const tagWiseURL = '/apis?offset=0&query=tag';\n    const { allTags, mainPage } = props;\n    let apisTagCloudGroup = null;\n\n    if (allTags.count !== 0) {\n        if (allTags !== null) {\n            apisTagCloudGroup = allTags.filter((item) => active === true && item.value.split(key).length > 1);\n        }\n        if (apisTagCloudGroup && apisTagCloudGroup.length > 0) {\n            // const tagLink = tagWiseURL + ':' + apisTagCloudGroup[0].value;\n            // if (style === 'fixed-left') history.push(tagLink);\n        }\n    }\n\n    /**\n     *\n     * @inheritdoctheme\n     * @returns {React.Component} @inheritdoc\n     * @memberof TagCloudListing\n     */\n    return apisTagCloudGroup && apisTagCloudGroup.length > 0 ? (\n        <>\n            {!mainPage && (\n                <Typography variant='h6' gutterBottom className={classNames(classes.filterTitle, 'api-listing-tags-title')}>\n                    <FormattedMessage defaultMessage='API Groups' id='Apis.Listing.TagCloudListingTags.title' />\n                </Typography>\n            )}\n            <List component='nav' aria-label='main mailbox folders' className={classNames({ [classes.mainPageList]: mainPage })}>\n                {Object.keys(apisTagCloudGroup).map((keyInner) => {\n                    return (\n                        <ApiTagThumb\n                            key={keyInner}\n                            tag={apisTagCloudGroup[keyInner]}\n                            path={tagWiseURL}\n                            style={style}\n                            mainPage={mainPage}\n                        />\n                    );\n                })}\n            </List>\n            {showAllApis && (\n                <div className={classNames({ [classes.mainPageAllApis]: mainPage }, 'tag-cloud-listing-wrapper')}>\n                    <Divider />\n\n                    <Link to='apis/' className={classes.textWrapper}>\n                        <ListItem button>\n                            <ListItemIcon>\n                                <Icon>label</Icon>\n                            </ListItemIcon>\n                            <ListItemText\n                                primary={(\n                                    <FormattedMessage\n                                        defaultMessage='All Apis'\n                                        id='Apis.Listing.TagCloudListingTags.allApis'\n                                    />\n                                )}\n                            />\n                        </ListItem>\n                    </Link>\n                </div>\n            )}\n        </>\n\n    ) : (\n        <>\n            {!mainPage && (\n                <Typography variant='h6' gutterBottom className={classNames(classes.filterTitle, 'apis-listing-tags-group')}>\n                    <FormattedMessage defaultMessage='API Groups' id='Apis.Listing.TagCloudListingTags.title' />\n                </Typography>\n            )}\n            <div className={classNames(classes.mainTitle, 'apis-listing-tags-empty')}>\n                <Typography variant='subtitle1' gutterBottom align='center'>\n                    <FormattedMessage\n                        defaultMessage='API groups cannot be found'\n                        id='Apis.Listing.TagCloudListingTags.tagsNotFound'\n                    />\n                </Typography>\n                <Link to='apis/' className={classNames(classes.linkTextWrapper, 'apis-listing-tags-group-all-apis-link')}>\n                    <Typography variant='subtitle1' gutterBottom align='center'>\n                        <FormattedMessage\n                            defaultMessage='All Apis'\n                            id='Apis.Listing.TagCloudListingTags.allApis'\n                        />\n                    </Typography>\n                </Link>\n            </div>\n        </>\n    );\n}\n\nTagCloudListingTags.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    allTags: PropTypes.shape({}).isRequired,\n};\n\nexport default TagCloudListingTags;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport { app } from 'Settings';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    messageWrapper: {\n        marginTop: theme.spacing(4),\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n}));\n\n/**\n * Render no api section\n * @returns {void}\n */\nexport default function NoApi() {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3}>\n                <Grid item xs={12} className={classes.messageWrapper}>\n                    <img alt='API icon' src={app.context + theme.custom.noApiImage} className={classes.messageWrapper} />\n                    <Typography id='itest-no-apis' variant='h5' gutterBottom>\n                        <FormattedMessage id='Apis.Listing.NoApi.nodata.title' defaultMessage='No APIs Available' />\n                    </Typography>\n                    <Typography variant='subtitle1' gutterBottom>\n                        <FormattedMessage\n                            id='Apis.Listing.NoApi.nodata.content'\n                            defaultMessage='There are no APIs to display right now.'\n                        />\n                    </Typography>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n","/* eslint-disable react/prop-types */\n/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport CustomIcon from './CustomIcon';\n\nconst useStylesBootstrap = makeStyles((theme) => ({\n    arrow: {\n        color: theme.palette.common.black,\n    },\n    tooltip: {\n        backgroundColor: theme.palette.common.black,\n    },\n}));\n\nfunction BootstrapTooltip(props) {\n    const classes = useStylesBootstrap();\n\n    return <Tooltip arrow classes={classes} {...props} />;\n}\nconst styles = (theme) => ({\n    leftLInkText: {\n        color: theme.palette.getContrastText(theme.custom.leftMenu.background),\n        textTransform: 'capitalize',\n        width: '100%',\n        textAlign: 'left',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    leftLInkText_IconLeft: {\n        paddingLeft: 10,\n    },\n    LeftMenu: {\n        backgroundColor: theme.custom.leftMenu.background,\n        width: theme.custom.leftMenu.width,\n        textAlign: 'center',\n        fontFamily: theme.typography.fontFamily,\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        top: 0,\n    },\n    leftLInk: {\n        paddingTop: theme.spacing(0.6),\n        paddingBottom: theme.spacing(0.6),\n        paddingLeft: theme.spacing(1),\n        [theme.breakpoints.down('sm')]: {\n            paddingLeft: 0,\n        },\n        paddingRight: 0,\n        fontSize: theme.typography.caption.fontSize,\n        cursor: 'pointer',\n        textDecoration: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    leftLink_Icon: {\n        color: theme.palette.getContrastText(theme.custom.leftMenu.background),\n        fontSize: theme.custom.leftMenu.iconSize + 'px',\n    },\n    leftLink_IconLeft: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    noIcon: {\n        display: 'none',\n    },\n    leftLInkText_NoText: {\n        display: 'none',\n    },\n    leftLInkText_NoTextWhenSmall: {\n        [theme.breakpoints.down('sm')]: {\n            display: 'none !important',\n        }\n    },\n    submenu: {\n        paddingLeft: 12,\n        [theme.breakpoints.down('sm')]: {\n            paddingLeft: 0,\n            color: theme.palette.grey[500],\n        }\n    },\n});\n/**\n * Renders the left menu section.\n * @param {JSON} props props passed from parent\n * @returns {JSX} Leftmenu element.\n */\nfunction LeftMenuItem(props) {\n    const [selected, setSelected] = useState(false);\n\n    const {\n        classes, theme, Icon, to, history, text, route, submenu, open, id,\n    } = props;\n    const routeToCheck = route || text;\n    const { leftMenu } = theme.custom;\n    const strokeColor = theme.palette.getContrastText(leftMenu.background);\n    const { iconSize } = leftMenu;\n    const ditectCurrentMenu = (location = null) => {\n        if (!location) {\n            location = window.location;\n        }\n        const { pathname } = location;\n\n        const test1 = new RegExp('/' + routeToCheck + '$', 'g');\n        const test2 = new RegExp('/' + routeToCheck + '/', 'g');\n        if (pathname.match(test1) || pathname.match(test2)) {\n            setSelected(true);\n        } else {\n            setSelected(false);\n        }\n\n\n    };\n    useEffect(() => {\n        ditectCurrentMenu();\n    }, []);\n    history.listen((location) => {\n        ditectCurrentMenu(location);\n    });\n    let activeBackground = '';\n    if (selected && !submenu) {\n        activeBackground = leftMenu.leftMenuActive;\n    } else if (selected && submenu) {\n        activeBackground = leftMenu.leftMenuActiveSubmenu;\n    }\n    return (\n        <BootstrapTooltip title={props.text} placement='right'>\n            <div>\n                <Link\n                    className={classNames(\n                        classes.leftLInk,\n                        {\n                            [classes.leftLink_IconLeft]: leftMenu === 'icon left',\n                            [classes.submenu]: submenu,\n                            'selected': selected,\n                        },\n                        'leftLInk',\n                    )}\n                    to={to}\n                    style={{ backgroundColor: activeBackground }}\n                    title={text}\n                    id={id}\n                >\n                    {\n                        // If the icon pro ( which is coming from the React Material library )\n                        // is coming we add css class and render.\n                        // If leftMenu='no icon' at the theme object we hide the icon. Also we add static classes to\n                        // allow customers theme\n                        // the product without compiling.\n                        Icon ? (\n                            React.cloneElement(Icon, {\n                                className: classNames(\n                                    classes.leftLink_Icon,\n                                    {\n                                        [classes.noIcon]: leftMenu.style === 'no icon',\n                                        [classes.submenu]: submenu,\n                                    },\n                                    'leftLink_Icon',\n                                ),\n                            })\n                        ) : (\n                            // We can also add custom icons\n                            <CustomIcon\n                                strokeColor={submenu ? '#cccccc' : strokeColor}\n                                width={submenu ? iconSize - 10 : iconSize}\n                                height={submenu ? iconSize - 10 : iconSize}\n                                icon={props.iconText}\n                                aria-label={text + ' icon'}\n                                className={classNames(\n                                    classes.leftLInk,\n                                    {\n                                        [classes.noIcon]: leftMenu.style === 'no icon',\n                                    },\n                                    'leftLink_Icon',\n                                )}\n                            />\n                        )\n                    }\n                    {open && (\n                        <Typography\n                            className={classNames(\n                                classes.leftLInkText,\n                                {\n                                    [classes.leftLInkText_IconLeft]: leftMenu.style === 'icon left',\n                                    [classes.leftLInkText_NoText]: leftMenu.style === 'no text',\n                                },\n                                classes.leftLInkText_NoTextWhenSmall,\n                                'leftLInkText',\n                            )}\n                        >\n                            {props.text}\n                        </Typography>\n                    )}\n                    {!open && (\n                        <Typography\n                            className={classNames(\n                                {\n                                    [classes.leftLInkText_IconLeft]: leftMenu.style === 'icon left',\n                                },\n                                classes.leftLInkText_NoTextWhenSmall,\n                                'leftLInkText',\n                            )}\n                        />\n                    )}\n\n\n                </Link>\n            </div>\n        </BootstrapTooltip>\n    );\n}\nLeftMenuItem.defaultProps = {\n    route: null,\n    iconText: null,\n    Icon: null,\n    submenu: false,\n};\nLeftMenuItem.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    Icon: PropTypes.element,\n    text: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.shape({}),\n    ]).isRequired,\n    to: PropTypes.string.isRequired,\n    route: PropTypes.string,\n    iconText: PropTypes.string,\n    history: PropTypes.shape({\n        location: PropTypes.shape({}).isRequired,\n    }).isRequired,\n    submenu: PropTypes.bool,\n    id: PropTypes.string.isRequired,\n};\nexport default withRouter(withStyles(styles, { withTheme: true })(LeftMenuItem));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport API from 'AppData/api';\nimport TagCloudListingTags from './TagCloudListingTags';\nimport CustomIcon from '../../Shared/CustomIcon';\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        height: 70,\n        background: theme.custom.infoBar.background,\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    mainIconWrapper: {\n        paddingTop: 13,\n        paddingLeft: 20,\n        paddingRight: 20,\n    },\n    mainTitle: {\n        paddingTop: 10,\n    },\n    mainTitleWrapper: {\n        flexGrow: 1,\n    },\n    content: {\n        flexGrow: 1,\n    },\n    listContentWrapper: {\n        padding: `0 ${theme.spacing(3)}px`,\n    },\n    iconDefault: {\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n    },\n}));\n/**\n * Renders tag cloud.\n * @returns {JSX} Tag cloud listing.\n */\nexport default function TagCloudListing() {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [allTags, setAllTags] = useState(null);\n    useEffect(() => {\n        const restApiClient = new API();\n        const promisedTags = restApiClient.getAllTags();\n        promisedTags\n            .then((response) => {\n                setAllTags(response.body.list);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }, []);\n    const strokeColorMain = theme.palette.getContrastText(theme.palette.background.paper);\n\n    return (\n        <main className={classes.content}>\n            <div className={classes.appBar}>\n                <div className={classes.mainIconWrapper}>\n                    <CustomIcon strokeColor={strokeColorMain} width={42} height={42} icon='api' />\n                </div>\n                <div className={classes.mainTitleWrapper}>\n                    <Typography variant='h4' className={classes.mainTitle}>\n                        <FormattedMessage\n                            defaultMessage='API Groups'\n                            id='Apis.Listing.TagCloudListing.apigroups.main'\n                        />\n                    </Typography>\n                </div>\n            </div>\n            <div className={classes.listContentWrapper}>\n                {allTags && <TagCloudListingTags allTags={allTags} mainPage />}\n            </div>\n        </main>\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Typography from '@material-ui/core/Typography';\nimport Select from '@material-ui/core/Select';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport PropTypes from 'prop-types';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\n\n/**\n * @inheritdoc\n * @param {*} theme theme object\n */\nconst styles = theme => ({\n    titleBar: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        borderBottomWidth: '1px',\n        borderBottomStyle: 'solid',\n        borderColor: theme.palette.text.secondary,\n        marginBottom: 20,\n    },\n    buttonLeft: {\n        alignSelf: 'flex-start',\n        display: 'flex',\n    },\n    buttonRight: {\n        alignSelf: 'flex-end',\n        display: 'flex',\n        marginLeft: 20,\n    },\n    title: {\n        display: 'inline-block',\n        marginLeft: 20,\n    },\n    buttonsWrapper: {\n        marginTop: 40,\n    },\n    legend: {\n        marginBottom: 0,\n        borderBottomStyle: 'none',\n        marginTop: 20,\n        fontSize: 12,\n    },\n    inputText: {\n        marginTop: 20,\n    },\n    buttonRightLink: {\n        textDecoration: 'none',\n    },\n    FormControl: {\n        padding: theme.spacing(2),\n        width: '100%',\n    },\n    fullWidth: {\n        '& .MuiFormControl-root':{\n            width: '100%',\n        }\n    },\n    FormControlOdd: {\n        backgroundColor: theme.palette.background.paper,\n    },\n    quotaHelp: {\n        position: 'relative',\n    },\n    subscribeRoot: {\n        paddingLeft: theme.spacing(2),\n    },\n    subscribeRootSmall: {\n        marginLeft: `-${theme.spacing(4)}px`,\n    },\n    smallDisplay: {\n        width: 240,\n        '& .MuiInput-formControl': {\n            marginTop: 0,\n        },\n    },\n    smallDisplayFix: {\n        '& .MuiSelect-selectMenu': {\n            padding: 0,\n        },\n    },\n    selectMenuRoot: {\n        margin: 0,\n        padding: 0,\n    },\n    appDropDown: {\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n    },\n});\n\nconst subscribeToApi = (props) => {\n    const [appSelected, setAppSelected] = useState('');\n    const [policySelected, setPolicySelected] = useState('');\n    const [applicationsList, setApplicationsList] = useState([]);\n    const {\n        classes,\n        throttlingPolicyList,\n        applicationsAvailable,\n        subscriptionRequest,\n        updateSubscriptionRequest,\n        renderSmall,\n    } = props;\n\n    useEffect(() => {\n        if (throttlingPolicyList && throttlingPolicyList[0]) {\n            setPolicySelected(throttlingPolicyList[0].tierName);\n        }\n    }, [throttlingPolicyList]);\n\n    useEffect(() => {\n        if (applicationsAvailable && applicationsAvailable[0]) {\n            setApplicationsList(applicationsAvailable);\n            setAppSelected(applicationsAvailable[0]);\n            const newRequest = { ...subscriptionRequest };\n            newRequest.applicationId = applicationsAvailable[0].value;\n        }\n    }, [applicationsAvailable]);\n\n    /**\n     * This method is used to handle the updating of subscription\n     * request object and selected fields.\n     * @param {*} field field that should be updated in subscription request\n     * @param {*} event event fired\n     */\n    const handleChange = (field, event,value = null) => {\n        const newRequest = { ...subscriptionRequest };\n        const { target } = event;\n        switch (field) {\n            case 'application':\n                newRequest.applicationId = value.value;\n                setAppSelected(value);\n                break;\n            case 'throttlingPolicy':\n                newRequest.throttlingPolicy = target.value;\n                setPolicySelected(target.value);\n                break;\n            default:\n                break;\n        }\n        updateSubscriptionRequest(newRequest);\n    };\n\n    return (\n        <Grid container className={classNames(classes.subscribeRoot, { [classes.subscribeRootSmall]: renderSmall })}>\n            <Grid item xs={12} md={renderSmall ? 12 : 6}>\n                {appSelected && (\n                    <FormControl className={classNames(classes.FormControl, { [classes.smallDisplay]: renderSmall })}>\n                        <InputLabel shrink for='application-subscribe' className={classes.quotaHelp}>\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.SubscribeToApi.application'\n                                defaultMessage='Application'\n                            />\n                        </InputLabel>\n                        <Autocomplete\n                           id=\"application-subscribe\"\n                           aria-describedby='application-helper-text'\n                           options={applicationsList}\n                           value={(applicationsList.length !== 0 && appSelected === '') ?\n                                applicationsList[0] : appSelected}\n                           onChange={(e, value) => handleChange('application', e, value)}\n                           getOptionLabel={(option) => option.label}\n                           classes={{root:classes.fullWidth}}\n                           renderInput={(params) => <TextField {...params} />}\n                         />\n                        <FormHelperText id='application-helper-text'>\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.SubscribeToApi.select.an.application.to.subscribe'\n                                defaultMessage='Select an Application to subscribe'\n                            />\n                        </FormHelperText>\n                    </FormControl>\n                )}\n                {throttlingPolicyList && (\n                    <FormControl\n                        className={classNames(classes.FormControl, classes.smallDisplayFix, {\n                            [classes.smallDisplay]: renderSmall,\n                            [classes.FormControlOdd]: !renderSmall,\n                        })}\n                    >\n                        <InputLabel shrink htmlFor='policy-label-placeholder' className={classes.quotaHelp}>\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.SubscribeToApi.business.plan'\n                                defaultMessage='Business Plan'\n                            />\n                        </InputLabel>\n                        <Select\n                            value={policySelected}\n                            aria-describedby='policies-helper-text'\n                            onChange={e => handleChange('throttlingPolicy', e)}\n                            input={<Input name='policySelected' id='policy-label-placeholder' />}\n                            displayEmpty\n                            name='policySelected'\n                            className={classes.selectEmpty}\n                        >\n                            {throttlingPolicyList.map(policy => (\n                                <MenuItem value={policy.tierName} key={policy.tierName}  className={classes.appDropDown}>\n                                    {policy.tierPlan === 'COMMERCIAL' ? (\n                                        <React.Fragment>\n                                            <ListItemText\n                                                classes={{ root: classes.selectMenuRoot }}\n                                                primary={policy.tierName}\n                                                secondary={\n                                                    policy.monetizationAttributes.pricePerRequest ? (\n                                                        <Typography>\n                                                            {policy.monetizationAttributes.pricePerRequest}{' '}\n                                                            {policy.monetizationAttributes.currencyType}\n                                                            {' per Request'}\n                                                        </Typography>\n                                                    ) : (\n                                                        <Typography>\n                                                            {policy.monetizationAttributes.fixedPrice}{' '}\n                                                            {policy.monetizationAttributes.currencyType}\n                                                            {' per '}\n                                                            {policy.monetizationAttributes.billingCycle}\n                                                        </Typography>\n                                                    )\n                                                }\n                                            />\n                                        </React.Fragment>\n                                    ) : (\n                                        <ListItemText primary={policy.tierName} />\n                                    )}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                        <FormHelperText id='policies-helper-text'>\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.SubscribeToApi.available.policies'\n                                defaultMessage='Available Policies -'\n                            />{' '}\n                            {throttlingPolicyList.map((policy, index) => (\n                                <span key={policy.tierName}>\n                                    {policy.tierName}\n                                    {index !== throttlingPolicyList.length - 1 && <span>,</span>}\n                                </span>\n                            ))}\n                        </FormHelperText>\n                    </FormControl>\n                )}\n            </Grid>\n        </Grid>\n    );\n};\nsubscribeToApi.propTypes = {\n    classes: PropTypes.shape({\n        FormControl: PropTypes.string,\n        quotaHelp: PropTypes.string,\n        selectEmpty: PropTypes.string,\n        FormControlOdd: PropTypes.string,\n        subscribeRoot: PropTypes.string,\n        subscribeRootSmall: PropTypes.string,\n        smallDisplayFix: PropTypes.string,\n        selectMenuRoot: PropTypes.string,\n        smallDisplay: PropTypes.string,\n    }).isRequired,\n    applicationsAvailable: PropTypes.arrayOf(PropTypes.shape({\n        value: PropTypes.string,\n        label: PropTypes.string,\n    })).isRequired,\n    throttlingPolicyList: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n    subscriptionRequest: PropTypes.shape({}).isRequired,\n    updateSubscriptionRequest: PropTypes.func.isRequired,\n    renderSmall: PropTypes.bool,\n};\nsubscribeToApi.defaultProps = {\n    renderSmall: false,\n};\n\nexport default withStyles(styles)(subscribeToApi);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport { Link as RouterLink } from 'react-router-dom';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport Icon from '@material-ui/core/Icon';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(1, 3),\n    },\n    link: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    linkNotActive: {\n        display: 'flex',\n        alignItems: 'center',\n        cursor: 'default',\n    },\n    icon: {\n        marginRight: theme.spacing(0.5),\n        width: 20,\n        height: 20,\n    },\n    selectedTagText: {\n        textIndent: 4,\n    },\n    apiGroup: {\n        color: theme.palette.grey[800],\n    },\n}));\n\n/**\n * Render no api breadcrumb section.\n * @param {JSON} props properties passed down from the parent.\n * @returns {JSX} Api breadcrumb section.\n */\nexport default function ApiBreadcrumbs(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const { selectedTag } = props;\n    return (\n        <Paper elevation={0} className={classes.root}>\n            <Breadcrumbs aria-label='breadcrumb'>\n                <RouterLink\n                    to={theme.custom.tagWise.active && theme.custom.tagWise.style === 'page' ? '/api-groups' : '/apis'}\n                    className={classes.apiGroup}\n                >\n                    <Link color='inherit' className={classes.link}>\n                        <Icon className={classes.icon}>dynamic_feed</Icon>\n                        <FormattedMessage defaultMessage='API Groups' id='Apis.Listing.ApiBreadcrumbs.apigroups.main' />\n                    </Link>\n                </RouterLink>\n\n                {selectedTag && (\n                    <Link color='inherit' className={classes.linkNotActive}>\n                        <CustomIcon width={16} height={16} icon='api' />\n                        <span className={classes.selectedTagText}>{selectedTag}</span>\n                    </Link>\n                )}\n            </Breadcrumbs>\n        </Paper>\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\nimport MaterialIcons from 'MaterialIcons';\nimport ImageGenerator from './ImageGenerator';\nimport { ApiContext } from '../../Details/ApiContext';\n\nconst styles = (theme) => ({\n    thumbContent: {\n        width: theme.custom.thumbnail.width - theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(1),\n        minHeight: 130,\n    },\n    thumbLeft: {\n        alignSelf: 'flex-start',\n        flex: 1,\n    },\n    thumbRight: {\n        alignSelf: 'flex-end',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    thumbInfo: {\n        display: 'flex',\n    },\n    thumbHeader: {\n        width: theme.custom.thumbnail.width - theme.spacing(1),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n    },\n    contextBox: {\n        width: parseInt((theme.custom.thumbnail.width - theme.spacing(1)) / 2, 10),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        display: 'inline-block',\n        lineHeight: '1em',\n    },\n    thumbWrapper: {\n        position: 'relative',\n        paddingTop: 15,\n        marginLeft: theme.spacing(2),\n    },\n    deleteIcon: {\n        fill: 'red',\n    },\n    textWrapper: {\n        color: theme.palette.text.secondary,\n        textDecoration: 'none',\n    },\n    imageWrapper: {\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.background.paper,\n        width: theme.custom.thumbnail.width + theme.spacing(1),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    imageOverlap: {\n        position: 'absolute',\n        bottom: 1,\n        backgroundColor: theme.custom.thumbnail.contentBackgroundColor,\n    },\n});\n\nconst windowURL = window.URL || window.webkitURL;\n/**\n *\n *\n * @class DocThumb\n * @extends {React.Component}\n */\nclass DocThumb extends React.Component {\n    /**\n     * Creates an instance of DocThumb.\n     * @param {JSON} props properties\n     * @memberof DocThumb\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            category: MaterialIcons.categories[0].name,\n            selectedIcon: null,\n            color: null,\n            backgroundIndex: null,\n            imageObj: null,\n        };\n    }\n\n    /**\n     * Clean up resource\n     */\n    componentWillUnmount() {\n        const { thumbnail, imageObj } = this.state;\n        if (thumbnail) {\n            windowURL.revokeObjectURL(imageObj);\n        }\n    }\n\n    /**\n     * @returns {JSX} doc thumbnail\n     * @memberof DocThumb\n     */\n    render() {\n        const {\n            selectedIcon, color, backgroundIndex, category,\n        } = this.state;\n        const { doc, classes, theme } = this.props;\n        const {\n            doc: {\n                name, sourceType, apiName, apiVersion, id, apiUUID,\n            },\n        } = this.props;\n        const detailsLink = '/apis/' + apiUUID + '/documents/' + id + '/details';\n        const { thumbnail } = theme.custom;\n        const imageWidth = thumbnail.width;\n        const defaultImage = thumbnail.defaultApiImage;\n\n        const ImageView = (\n            <ImageGenerator\n                width={imageWidth}\n                height={140}\n                api={doc}\n                fixedIcon={{\n                    key: selectedIcon,\n                    color,\n                    backgroundIndex,\n                    category,\n                    doc,\n                }}\n            />\n        );\n\n        return (\n            <div className={classes.thumbWrapper}>\n                <Link to={detailsLink} className={classes.imageWrapper}>\n                    {!defaultImage && ImageView}\n                    {defaultImage && <img src={defaultImage} alt='document' />}\n                </Link>\n\n                <div\n                    className={classNames(classes.thumbContent, {\n                        [classes.imageOverlap]: thumbnail.contentPictureOverlap,\n                    })}\n                >\n                    <Link to={detailsLink} className={classes.textWrapper}>\n                        <Typography\n                            className={classes.thumbHeader}\n                            variant='h4'\n                            gutterBottom\n                            onClick={this.handleRedirectToAPIOverview}\n                            title={name}\n                        >\n                            {name}\n                        </Typography>\n                    </Link>\n                    <Typography variant='caption' gutterBottom align='left'>\n                        <FormattedMessage defaultMessage='Source Type:' id='Apis.Listing.DocThumb.sourceType' />\n                        {sourceType}\n                    </Typography>\n                    <div className={classes.thumbInfo}>\n                        <div className={classes.thumbLeft}>\n                            <Typography variant='subtitle1'>{apiName}</Typography>\n                            <Typography variant='caption' gutterBottom align='left'>\n                                <FormattedMessage defaultMessage='Api Name' id='Apis.Listing.DocThumb.apiName' />\n                            </Typography>\n                        </div>\n                        <div className={classes.thumbRight}>\n                            <Typography variant='subtitle1' align='right' className={classes.contextBox}>\n                                {apiVersion}\n                            </Typography>\n                            <Typography variant='caption' gutterBottom align='right' component='div'>\n                                <FormattedMessage defaultMessage='API Version' id='Apis.Listing.DocThumb.apiVersion' />\n                            </Typography>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDocThumb.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n};\n\nDocThumb.contextType = ApiContext;\n\nexport default withStyles(styles, { withTheme: true })(DocThumb);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { createMuiTheme, MuiThemeProvider, withStyles } from '@material-ui/core/styles';\nimport MUIDataTable from 'mui-datatables';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport merge from 'lodash.merge';\nimport cloneDeep from 'lodash.clonedeep';\nimport queryString from 'query-string';\nimport API from 'AppData/api';\nimport { withTheme } from '@material-ui/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Configurations from 'Config';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport withSettings from 'AppComponents/Shared/withSettingsContext';\nimport Loading from 'AppComponents/Base/Loading/Loading';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Icon from '@material-ui/core/Icon';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport DefaultConfigurations from 'AppData/defaultTheme';\nimport ImageGenerator from './APICards/ImageGenerator';\nimport ApiThumb from './ApiThumb';\nimport DocThumb from './APICards/DocThumb';\nimport { ApiContext } from '../Details/ApiContext';\nimport NoApi from './NoApi';\n\nconst styles = (theme) => ({\n    apiNameLink: {\n        display: 'flex',\n        alignItems: 'center',\n        '& span': {\n            marginLeft: theme.spacing(1),\n        },\n        color: theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n        '& .material-icons': {\n            marginTop: 5,\n            color: `${theme.custom.thumbnail.iconColor} !important`,\n            fontSize: `${theme.custom.thumbnail.listViewIconSize}px !important`,\n        },\n    },\n});\n/**\n * Table view for api listing\n *\n * @class ApiTableView\n * @extends {React.Component}\n */\nclass ApiTableView extends React.Component {\n    /**\n     * @inheritdoc\n     * @param {*} props properties\n     * @memberof ApiTableView\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: null,\n            loading: true,\n        };\n        this.page = 0;\n        this.count = 100;\n        this.rowsPerPage = localStorage.getItem('portal.numberOfRows') || 10;\n        this.pageType = null;\n    }\n\n    /**\n     * Component mount call back\n     * @returns {void}\n     */\n    componentDidMount() {\n        this.apiType = this.context.apiType;\n        this.getData();\n    }\n\n    /**\n     * Component update call back\n     * @param {JSON} prevProps properties from previous state of the component\n     * @returns {void}\n     */\n    componentDidUpdate(prevProps) {\n        const { query, selectedTag } = this.props;\n        if (\n            this.apiType !== this.context.apiType\n            || query !== prevProps.query\n            || prevProps.selectedTag !== selectedTag\n        ) {\n            this.page = 0;\n            this.apiType = this.context.apiType;\n            this.getData();\n        }\n    }\n\n    getMuiTheme = () => {\n        const { gridView, theme } = this.props;\n        let themeAdditions = {};\n        const muiTheme = {\n            overrides: {\n                MUIDataTable: {\n                    root: {\n                        backgroundColor: 'transparent',\n                        marginLeft: 40,\n                        marginBottom: 20,\n                        width: '100%',\n                    },\n                    paper: {\n                        boxShadow: 'none',\n                        backgroundColor: 'transparent',\n                        width: '100%',\n                    },\n                    tableRoot: {\n                        border: 'solid 1px #fff',\n                        '& a': {\n                            display: 'flex',\n                            alignItems: 'center',\n                        },\n                        '& a > div': {\n                            paddingRight: 10,\n                        },\n                        '& td': {\n                            whiteSpace: 'nowrap',\n                            lineHeight: 1,\n                        },\n                        '& tr:nth-child(even)': {\n                            backgroundColor: theme.custom.listView.tableBodyEvenBackgrund,\n                            '& td': {\n                                color: theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n                            },\n                        },\n                        '& tr:nth-child(odd)': {\n                            backgroundColor: theme.custom.listView.tableBodyOddBackgrund,\n                            '& td': {\n                                color: theme.palette.getContrastText(theme.custom.listView.tableBodyOddBackgrund),\n                            },\n                        },\n                        '& th': {\n                            backgroundColor: theme.custom.listView.tableHeadBackground,\n                            color: theme.palette.getContrastText(theme.custom.listView.tableHeadBackground),\n                        },\n                    },\n                },\n                MUIDataTablePagination: {\n                    root: {\n                        color: theme.palette.getContrastText(theme.palette.background.default),\n\n                    },\n                },\n                MuiMenuItem: {\n                    root: {\n                        color: theme.palette.getContrastText(theme.palette.background.default),\n                    },\n                },\n                MUIDataTableToolbar: {\n                    root: {\n                        '& svg': {\n                            color: theme.palette.getContrastText(theme.palette.background.default),\n                        },\n                    },\n                },\n            },\n        };\n        if (gridView) {\n            themeAdditions = {\n                overrides: {\n                    MUIDataTable: {\n                        tableRoot: {\n                            display: 'block',\n                            border: 'none',\n                            '& tbody': {\n                                display: 'flex',\n                                flexWrap: 'wrap',\n                                marginLeft: 0,\n                            },\n                            '& thead': {\n                                display: 'none',\n                            },\n                            '& tr:nth-child(odd),& tr:nth-child(even)': {\n                                display: 'block',\n                                marginRight: 5,\n                                marginBottom: 5,\n                                backgroundColor: 'transparent',\n                            },\n                            '& td': {\n                                display: 'block',\n                                backgroundColor: 'transparent',\n                            },\n                        },\n                        paper: {\n                            boxShadow: 'none',\n                            backgroundColor: 'transparent',\n                        },\n                    },\n                    MUIDataTableBodyCell: {\n                        root: {\n                            backgroundColor: 'transparent',\n                            width: '100%',\n                        },\n                    },\n                },\n            };\n        }\n        const systemTheme = merge({}, DefaultConfigurations, Configurations, { custom: cloneDeep(theme.custom) });\n        const dataTableTheme = merge({}, muiTheme, systemTheme, themeAdditions);\n        return createMuiTheme(dataTableTheme);\n    };\n\n    // get data\n    getData = () => {\n        const { intl } = this.props;\n        this.setState({ loading: true });\n        this.xhrRequest()\n            .then((data) => {\n                const { body } = data;\n                const { list, pagination } = body;\n                const { total } = pagination;\n                this.count = total;\n                this.setState({ data: list });\n            })\n            .catch((error) => {\n                const { response } = error;\n                const { setTenantDomain } = this.props;\n                if (response && response.body.code === 901300) {\n                    setTenantDomain('INVALID');\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Invalid tenant domain',\n                        id: 'Apis.Listing.ApiTableView.invalid.tenant.domain',\n                    }));\n                } else {\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Error While Loading APIs',\n                        id: 'Apis.Listing.ApiTableView.error.loading',\n                    }));\n                }\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    xhrRequest = () => {\n        const { query, selectedTag } = this.props;\n        const { page, rowsPerPage } = this;\n        const api = new API();\n        const searchParam = new URLSearchParams(query);\n        const searchQuery = searchParam.get('query');\n        if (query && searchQuery !== null) {\n            const composeQuery = queryString.parse(query);\n            composeQuery.limit = this.rowsPerPage;\n            composeQuery.offset = page * rowsPerPage;\n            return api.search(composeQuery);\n        }\n\n        if (selectedTag) {\n            return api.getAllAPIs({ query: 'tag:' + selectedTag, limit: this.rowsPerPage, offset: page * rowsPerPage });\n        } else {\n            return api.getAllAPIs({ limit: this.rowsPerPage, offset: page * rowsPerPage });\n        }\n    };\n\n    changePage = (page) => {\n        const { intl } = this.props;\n        this.page = page;\n        this.setState({ loading: true });\n        this.xhrRequest()\n            .then((data) => {\n                const { body } = data;\n                const { list } = body;\n                this.setState({\n                    data: list,\n                });\n            })\n            .catch(() => {\n                Alert.error(intl.formatMessage({\n                    defaultMessage: 'Error While Loading APIs',\n                    id: 'Apis.Listing.ApiTableView.error.loading',\n                }));\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    /**\n     * @inheritdoc\n     * @returns {Component}x\n     * @memberof ApiTableView\n     */\n    render() {\n        const { intl, gridView, theme } = this.props;\n        const { custom: { social: { showRating } } } = theme;\n        const { loading } = this.state;\n        const columns = [\n            {\n                name: 'id',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'name',\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            return <ImageGenerator api={artifact} width={30} height={30} />;\n                        }\n                        return <span />;\n                    },\n                    sort: false,\n                    filter: false,\n                    display: 'excluded',\n                },\n            },\n            {\n                name: 'name',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.name',\n                    defaultMessage: 'Name',\n                }),\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            const apiName = tableMeta.rowData[2];\n                            const apiId = tableMeta.rowData[0];\n                            const { classes } = this.props;\n\n                            if (artifact) {\n                                if (artifact.type === 'DOC') {\n                                    return (\n                                        <Link\n                                            to={'/apis/' + artifact.apiUUID + '/documents'}\n                                            className={classes.apiNameLink}\n                                        >\n                                            <Icon>library_books</Icon>\n\n                                            <span>\n                                                {' '}\n                                                <FormattedMessage\n                                                    id='Apis.Listing.TableView.TableView.doc.flag'\n                                                    defaultMessage='[Doc] '\n                                                />\n                                                {' '}\n                                                {apiName}\n                                            </span>\n                                        </Link>\n                                    );\n                                }\n                                const strokeColor = theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund);\n                                return (\n                                    <Link\n                                        to={'/apis/' + apiId + '/overview'}\n                                        className={classes.apiNameLink}\n                                    >\n                                        <CustomIcon width={16} height={16} icon='api' strokeColor={strokeColor} />\n\n                                        <span>{apiName}</span>\n                                    </Link>\n                                );\n                            }\n                        }\n                        return <span />;\n                    },\n                    sort: false,\n                    filter: false,\n                },\n            },\n            {\n                name: 'version',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.version',\n                    defaultMessage: 'Version',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'context',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.context',\n                    defaultMessage: 'Context',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'provider',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.provider',\n                    defaultMessage: 'Provider/Business Owner',\n                }),\n                options: {\n                    sort: false,\n                    customBodyRender: (value, tableMeta) => {\n                        if (tableMeta.rowData) {\n                            if (\n                                tableMeta.rowData[9] && tableMeta.rowData[9].businessOwner\n                            ) {\n                                return (\n                                    <>\n                                        <div>{tableMeta.rowData[9].businessOwner}</div>\n                                        <Typography variant='caption'>\n                                            <FormattedMessage\n                                                defaultMessage='(Business Owner)'\n                                                id='Apis.Listing.ApiTableView.business.owner.caption'\n                                            />\n                                        </Typography>\n                                    </>\n                                );\n                            } else {\n                                return (\n                                    <>\n                                        {value\n                                        && (\n                                            <>\n                                                <div>{value}</div>\n                                                <Typography variant='caption'>\n                                                    <FormattedMessage\n                                                        defaultMessage='(Provider)'\n                                                        id='Apis.Listing.ApiTableView.provider.caption'\n                                                    />\n                                                </Typography>\n                                            </>\n                                        )}\n                                    </>\n                                );\n                            }\n                        }\n                        return <span />;\n                    },\n                },\n            },\n            {\n                name: 'type',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.type',\n                    defaultMessage: 'Type',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'rating',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.rating',\n                    defaultMessage: 'Rating',\n                }),\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            if (artifact) {\n                                if (artifact.type !== 'DOC') {\n                                    const apiId = tableMeta.rowData[0];\n                                    const avgRating = tableMeta.rowData[8];\n                                    return (\n                                        <StarRatingBar\n                                            apiRating={avgRating}\n                                            apiId={apiId}\n                                            isEditable={false}\n                                            showSummary={false}\n                                        />\n                                    );\n                                }\n                            }\n                        }\n                        return <span />;\n                    },\n                    sort: false,\n                    display: showRating ? 'true' : 'excluded',\n                },\n            },\n            {\n                name: 'avgRating',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'businessInformation',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n        ];\n        const { page, count, rowsPerPage } = this;\n        const { data } = this.state;\n        const options = {\n            filterType: 'dropdown',\n            responsive: 'stacked',\n            serverSide: true,\n            search: false,\n            count,\n            page,\n            onTableChange: (action, tableState) => {\n                switch (action) {\n                    case 'changePage':\n                        this.changePage(tableState.page);\n                        break;\n                    default:\n                        break;\n                }\n            },\n            selectableRows: 'none',\n            rowsPerPage,\n            onChangeRowsPerPage: (numberOfRows) => {\n                const { page: pageInner, count: countInner } = this;\n                if (pageInner * numberOfRows > countInner) {\n                    this.page = 0;\n                }\n                this.rowsPerPage = numberOfRows;\n                localStorage.setItem('portal.numberOfRows', numberOfRows);\n                this.getData();\n            },\n            textLabels: {\n                pagination: {\n                    rowsPerPage: intl.formatMessage({\n                        id: 'Apis.Listing.ApiTableView.items.per.page',\n                        defaultMessage: 'Items per page',\n                    }),\n                },\n                toolbar: {\n                    downloadCsv: intl.formatMessage({\n                        id: 'Apis.Listing.ApiTableView.download.csv',\n                        defaultMessage: 'Download CSV',\n                    }),\n                    print: intl.formatMessage({\n                        id: 'Apis.Listing.ApiTableView.print',\n                        defaultMessage: 'Print',\n                    }),\n                    viewColumns: intl.formatMessage({\n                        id: 'Apis.Listing.ApiTableView.view.columns',\n                        defaultMessage: 'View Columns',\n                    }),\n                },\n            },\n        };\n        if (gridView) {\n            options.customRowRender = (_data, dataIndex, rowIndex, tableViewObj = this) => {\n                const artifact = tableViewObj.state.data[dataIndex];\n                if (artifact) {\n                    if (artifact.type === 'DOC') {\n                        return <tr key={rowIndex}><td><DocThumb doc={artifact} /></td></tr>;\n                    } else {\n                        return (\n                            <tr key={rowIndex}>\n                                <td>\n                                    <ApiThumb\n                                        api={artifact}\n                                        customHeight={theme.custom.thumbnail.height}\n                                        customWidth={theme.custom.thumbnail.width}\n                                    />\n                                </td>\n                            </tr>\n                        );\n                    }\n                }\n                return <span />;\n            };\n            options.title = false;\n            options.filter = false;\n            options.print = false;\n            options.download = false;\n            options.viewColumns = false;\n            options.customToolbar = false;\n        } else {\n            options.filter = false;\n        }\n        if (page === 0 && this.count <= rowsPerPage && rowsPerPage === 10) {\n            options.pagination = false;\n        } else {\n            options.pagination = true;\n        }\n        if (loading) {\n            return <Loading />;\n        }\n        if ((data && data.length === 0) || !data) {\n            return <NoApi />;\n        }\n        return (\n            <MuiThemeProvider theme={this.getMuiTheme()}>\n                <MUIDataTable title='' data={data} columns={columns} options={options} />\n            </MuiThemeProvider>\n        );\n    }\n}\n\nApiTableView.contextType = ApiContext;\n\nexport default withSettings(injectIntl(withTheme(withStyles(styles)(ApiTableView))));\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Icon from '@material-ui/core/Icon';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n/**\n * @inheritdoc\n * @param {*} theme theme object\n */\nconst styles = (theme) => ({\n    textWrapper: {\n        color: theme.custom.tagCloud.leftMenu.color,\n        '& .material-icons': {\n            color: theme.custom.tagCloud.leftMenu.color,\n        },\n    },\n    listItemText: {\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n});\n\n/**\n * Get APICategoryThumb\n * @param {JSON} props properties\n * @returns {JSX} category link\n */\nfunction APICategoryThumb(props) {\n    const {\n        category, path, classes,\n    } = props;\n    const categoryLink = path + ':' + category.name;\n    let categoryDesc = category.description;\n    if (categoryDesc.length > 50) {\n        categoryDesc = categoryDesc.substring(0, 50) + '...';\n    }\n    return (\n        <Link to={categoryLink} className={classes.textWrapper}>\n            <Tooltip placement='right' title={category.description.length <= 50 ? '' : category.description}>\n                <ListItem button alignItems='flex-start'>\n                    <ListItemIcon className='category-listing-icon'>\n                        <Icon>label</Icon>\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={category.name}\n                        secondary={categoryDesc}\n                        classes={{\n                            primary: classNames(classes.listItemText, 'category-listing-primary'),\n                            secondary: 'category-listing-secondary',\n                        }}\n                    />\n                </ListItem>\n            </Tooltip>\n        </Link>\n    );\n}\n\nAPICategoryThumb.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    category: PropTypes.shape({}).isRequired,\n    path: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(APICategoryThumb);\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport { FormattedMessage } from 'react-intl';\nimport APICategoryThumb from './APICategoryThumb';\n\nconst useStyles = makeStyles((theme) => ({\n    mainTitle: {\n        paddingTop: 10,\n    },\n    mainTitleWrapper: {\n        flexGrow: 1,\n    },\n    listContentWrapper: {\n        padding: `0 ${theme.spacing(3)}px`,\n    },\n    textWrapper: {\n        color: theme.custom.tagCloud.leftMenu.color,\n        '& .material-icons': {\n            color: theme.custom.tagCloud.leftMenu.color,\n        },\n    },\n    tagWiseThumbWrapper: {\n        display: 'flex',\n    },\n    filterTitle: {\n        fontWeight: 200,\n        paddingLeft: theme.spacing(2),\n        background: theme.custom.tagCloud.leftMenu.titleBackground,\n        color: theme.palette.getContrastText(theme.custom.tagCloud.leftMenu.titleBackground),\n        height: theme.custom.infoBar.height,\n        alignItems: 'center',\n        display: 'flex',\n    },\n}));\n\n/**\n * Shared listing page\n *\n * @class CategoryListingCategories\n * @extends {Component}\n */\nfunction CategoryListingCategories(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const {\n        custom: {\n            tagWise: {\n                style,\n            },\n        },\n    } = theme;\n\n    const tagWiseURL = '/apis?offset=0&query=api-category';\n    const { allCategories } = props;\n\n    /**\n     *\n     * @inheritdoctheme\n     * @returns {React.Component} @inheritdoc\n     * @memberof TagCloudListing\n     */\n\n    return allCategories && allCategories.length > 0 ? (\n        (\n            <>\n                <Typography variant='h6' gutterBottom className={classNames(classes.filterTitle, 'api-cat-title')}>\n                    <FormattedMessage defaultMessage='API Categories' id='Apis.Listing.CategoryListingCategories.title' />\n                </Typography>\n                <List component='nav' aria-label='main mailbox folders' className='category-listing-categories'>\n                    {Object.keys(allCategories).map((key) => {\n                        return <APICategoryThumb key={key} category={allCategories[key]} path={tagWiseURL} style={style} />;\n                    })}\n                </List>\n            </>\n        )\n    ) : (\n        <div className={classNames(classes.mainTitle, 'category-listing-categories-empty')}>\n            <Typography variant='subtitle1' gutterBottom align='center'>\n                <FormattedMessage\n                    defaultMessage='Categories cannot be found'\n                    id='Apis.Listing.CategoryListingCategories.categoriesNotFound'\n                />\n            </Typography>\n        </div>\n    );\n}\n\nCategoryListingCategories.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    allTags: PropTypes.shape({}).isRequired,\n    allCategories: PropTypes.shape({}).isRequired,\n};\n\nexport default CategoryListingCategories;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport { TagCloud } from 'react-tagcloud';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n    clickablePointer: {\n        cursor: 'pointer',\n        padding: theme.spacing(1),\n    },\n    filterTitle: {\n        fontWeight: 200,\n        paddingLeft: theme.spacing(2),\n        background: theme.custom.tagCloud.leftMenu.titleBackground,\n        color: theme.palette.getContrastText(theme.custom.tagCloud.leftMenu.titleBackground),\n        height: theme.custom.infoBar.height,\n        alignItems: 'center',\n        display: 'flex',\n    },\n}));\n\n/**\n * Component used to handle API Tag Cloud\n * @class ApiTagCloud\n * @extends {React.Component}\n * @param {JSON} props @inheritDoc\n */\nfunction ApiTagCloud(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const {\n        custom: {\n            tagWise: { key, active },\n            tagCloud: { colorOptions },\n        },\n    } = theme;\n    const history = useHistory();\n\n    const { allTags } = props;\n    let apisTagWithoutGroups = null;\n    if (allTags.count !== 0) {\n        // Remove the tags with a sufix '-group' to ignore the\n        if (active) {\n            apisTagWithoutGroups = allTags.filter((item) => item.value.search(key) === -1);\n        } else {\n            apisTagWithoutGroups = allTags;\n        }\n    }\n\n    /**\n     *\n     * @param {String} tag selected tag\n     * @memberof ApiTagCloud\n     */\n    const handleOnClick = (tag) => {\n        const tagSearchURL = `/apis?offset=0&query=tag:${tag.value}`;\n        history.push(tagSearchURL);\n    };\n\n    return (\n        apisTagWithoutGroups && (\n            <>\n                <Typography variant='h6' gutterBottom className={classNames(classes.filterTitle, 'apis-listing-tags-title')}>\n                    <FormattedMessage defaultMessage='Tags' id='Apis.Listing.ApiTagCloud.title' />\n                </Typography>\n                <TagCloud\n                    minSize={14}\n                    maxSize={25}\n                    colorOptions={colorOptions}\n                    tags={apisTagWithoutGroups}\n                    shuffle={false}\n                    className={classes.clickablePointer}\n                    onClick={(tag) => handleOnClick(tag)}\n                />\n            </>\n        )\n    );\n}\n\nApiTagCloud.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    tag: PropTypes.shape({}).isRequired,\n    allTags: PropTypes.shape({}).isRequired,\n};\n\nexport default ApiTagCloud;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport { withStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport MaterialIcons from 'MaterialIcons';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport classNames from 'classnames';\nimport ImageGenerator from './APICards/ImageGenerator';\nimport Api from '../../../data/api';\nimport { ApiContext } from '../Details/ApiContext';\n\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = (theme) => ({\n    card: {\n        margin: theme.spacing.unit * (3 / 2),\n        maxWidth: theme.custom.thumbnail.width,\n        transition: 'box-shadow 0.3s ease-in-out',\n    },\n    apiDetails: {\n        background: theme.custom.thumbnail.contentBackgroundColor,\n        padding: theme.spacing(),\n        color: theme.palette.getContrastText(theme.custom.thumbnail.contentBackgroundColor),\n        '& a': {\n            color: theme.palette.getContrastText(theme.custom.thumbnail.contentBackgroundColor),\n        },\n    },\n    suppressLinkStyles: {\n        textDecoration: 'none',\n        color: theme.palette.text.disabled,\n    },\n    row: {\n        display: 'inline-block',\n    },\n    thumbBy: {\n        'padding-left': '5px',\n    },\n    media: {\n        // ⚠️ object-fit is not supported by IE11.\n        objectFit: 'cover',\n    },\n    thumbContent: {\n        width: theme.custom.thumbnail.width - theme.spacing(2),\n    },\n    thumbLeft: {\n        alignSelf: 'flex-start',\n        flex: 1,\n        width: '25%',\n        'padding-left': '5px',\n        'padding-right': '65px',\n    },\n    thumbRight: {\n        alignSelf: 'flex-end',\n    },\n    thumbInfo: {\n        display: 'flex',\n    },\n    thumbHeader: {\n        width: theme.custom.thumbnail.width - theme.spacing.unit,\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        'padding-left': '5px',\n    },\n    contextBox: {\n        width: parseInt((theme.custom.thumbnail.width - theme.spacing.unit) / 2, 10),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        display: 'inline-block',\n        lineHeight: '1em',\n        'padding-top': 5,\n        'padding-right': 5,\n        'padding-bottom': 1.5,\n        textAlign: 'left',\n    },\n    thumbWrapper: {\n        position: 'relative',\n        paddingTop: 20,\n        marginRight: theme.spacing.unit * 2,\n    },\n    deleteIcon: {\n        fill: 'red',\n    },\n    textWrapper: {\n        color: theme.palette.text.secondary,\n        textDecoration: 'none',\n    },\n    imageWrapper: {\n        color: theme.custom.thumbnail.iconColor,\n        width: theme.custom.thumbnail.width,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    imageOverlap: {\n        position: 'absolute',\n        bottom: 1,\n    },\n    chipWrapper: {\n        marginTop: '15px',\n    },\n    ratingWrapper: {\n        marginTop: '20px',\n    },\n});\n\nconst windowURL = window.URL || window.webkitURL;\n\n/**\n *\n * Render API Card component in API listing card view,containing essential API information like name , version ect\n * @class RecommendedApiThumb\n * @extends {Component}\n */\nclass RecommendedApiThumb extends React.Component {\n    /**\n     *Creates an instance of RecommendedApiThumb.\n     * @param {*} props\n     * @memberof RecommendedApiThumb\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            category: MaterialIcons.categories[0].name,\n            selectedIcon: null,\n            color: null,\n            backgroundIndex: null,\n            imageObj: null,\n            isHover: false,\n        };\n        this.toggleMouseOver = this.toggleMouseOver.bind(this);\n    }\n\n    /**\n     *\n     *\n     * @memberof RecommendedApiThumb\n     */\n    componentDidMount() {\n        const { api } = this.props;\n        const restApi = new Api();\n\n        const promisedThumbnail = restApi.getAPIThumbnail(api.id);\n\n        promisedThumbnail.then((response) => {\n            if (response && response.data) {\n                if (response.headers['content-type'] === 'application/json') {\n                    const iconJson = JSON.parse(response.data);\n                    this.setState({\n                        selectedIcon: iconJson.key,\n                        category: iconJson.category,\n                        color: iconJson.color,\n                        backgroundIndex: iconJson.backgroundIndex,\n                    });\n                } else if (response && response.data.size > 0) {\n                    const url = windowURL.createObjectURL(response.data);\n                    this.setState({ imageObj: url });\n                }\n            }\n        });\n    }\n\n    /**\n     * Clean up resource\n     */\n    componentWillUnmount() {\n        if (this.state.thumbnail) {\n            windowURL.revokeObjectURL(this.state.imageObj);\n        }\n    }\n\n    /**\n     * Get Path Prefix depedning on the respective API Type being rendered\n     *\n     * @returns {String} path\n     * @memberof RecommendedApiThumb\n     */\n    getPathPrefix() {\n        const path = '/apis/';\n        return path;\n    }\n\n    /**\n     * Toggle mouse Hover state to set the card `raised` property\n     *\n     * @param {React.SyntheticEvent} event mouseover and mouseout\n     * @memberof RecommendedApiThumb\n     */\n    toggleMouseOver(event) {\n        this.setState({ isHover: event.type === 'mouseover' });\n    }\n\n    /**\n     * @inheritdoc\n     * @returns {React.Component} @inheritdoc\n     * @memberof RecommendedApiThumb\n     */\n    render() {\n        const {\n            imageObj, selectedIcon, color, backgroundIndex, category, isHover,\n        } = this.state;\n        const path = this.getPathPrefix();\n\n        // const detailsLink = path + this.props.api.id;\n        const detailsLink = path + this.props.api.id;\n        const {\n            api, classes, theme, customWidth, customHeight, showInfo,\n        } = this.props;\n        const { thumbnail } = theme.custom;\n        const { name } = api;\n\n        // if (\n        //     api.businessInformation &&\n        //     api.businessInformation.businessOwner &&\n        //     api.businessInformation.businessOwner.trim() !== ''\n        // ) {\n        //     provider = api.businessInformation.businessOwner;\n        // }\n        // if (!api.lifeCycleStatus) {\n        //     api.lifeCycleStatus = api.status;\n        // }\n        const imageWidth = customWidth || thumbnail.width;\n        const imageHeight = customHeight || 140;\n        const defaultImage = thumbnail.defaultApiImage;\n\n        let ImageView;\n        if (imageObj) {\n            ImageView = (\n                <img\n                    height={imageHeight}\n                    width={imageWidth}\n                    src={imageObj}\n                    alt='API Thumbnail'\n                    className={classes.media}\n                />\n            );\n        } else {\n            ImageView = (\n                <ImageGenerator\n                    width={imageWidth}\n                    height={imageHeight}\n                    api={api}\n                    fixedIcon={{\n                        key: selectedIcon,\n                        color,\n                        backgroundIndex,\n                        category,\n                        api,\n                    }}\n                />\n            );\n        }\n        return (\n            <Card\n                onMouseOver={this.toggleMouseOver}\n                onFocus={this.toggleMouseOver}\n                onMouseOut={this.toggleMouseOver}\n                onBlur={this.toggleMouseOver}\n                raised={isHover}\n                className={classNames('image-thumbnail', classes.card)}\n            >\n                <CardMedia>\n                    <Link to={detailsLink} className={classes.suppressLinkStyles}>\n                        {!defaultImage && ImageView}\n                        {defaultImage && <img src={defaultImage} alt='img' />}\n                    </Link>\n                </CardMedia>\n                {showInfo && (\n                    <CardContent classes={{ root: classes.apiDetails }}>\n                        <Link to={detailsLink} className={classes.textWrapper}>\n                            <Typography\n                                className={classes.thumbHeader}\n                                variant='h5'\n                                gutterBottom\n                                onClick={this.handleRedirectToAPIOverview}\n                                title={name}\n                            >\n                                {name}\n                            </Typography>\n                        </Link>\n                        <div className={classes.thumbInfo}>\n                            <div className={classes.thumbLeft}>\n                                <Typography\n                                    variant='subtitle1'\n                                    gutterBottom\n                                    align='left'\n                                    className={classNames('api-thumb-rating', classes.ratingWrapper)}\n                                >\n                                    <StarRatingBar\n                                        apiRating={api.avgRating}\n                                        apiId={api.id}\n                                        isEditable={false}\n                                        showSummary={false}\n                                    />\n                                </Typography>\n                            </div>\n                            <div className={classes.thumbRight}>\n                                <Typography\n                                    variant='subtitle1'\n                                    gutterBottom\n                                    align='right'\n                                    className={classes.chipWrapper}\n                                >\n                                    {(api.type === 'GRAPHQL' || api.transportType === 'GRAPHQL') && (\n                                        <Chip\n                                            label={api.transportType === undefined ? api.type : api.transportType}\n                                            color='primary'\n                                        />\n                                    )}\n                                </Typography>\n                            </div>\n                        </div>\n                    </CardContent>\n                )}\n            </Card>\n        );\n    }\n}\nRecommendedApiThumb.defaultProps = {\n    customWidth: null,\n    customHeight: null,\n    showInfo: true,\n};\nRecommendedApiThumb.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    customWidth: PropTypes.number,\n    customHeight: PropTypes.number,\n    showInfo: PropTypes.bool,\n};\n\nRecommendedApiThumb.contextType = ApiContext;\n\nexport default withStyles(styles, { withTheme: true })(RecommendedApiThumb);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { createMuiTheme, MuiThemeProvider, withStyles } from '@material-ui/core/styles';\nimport MUIDataTable from 'mui-datatables';\nimport { injectIntl } from 'react-intl';\nimport API from 'AppData/api';\nimport { withTheme } from '@material-ui/styles';\nimport Configurations from 'Config';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport withSettings from 'AppComponents/Shared/withSettingsContext';\nimport Loading from 'AppComponents/Base/Loading/Loading';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport ImageGenerator from './APICards/ImageGenerator';\nimport RecommendedApiThumb from './RecommendedApiThumb';\nimport { ApiContext } from '../Details/ApiContext';\n\nconst styles = (theme) => ({\n    rowImageOverride: {\n        '& .material-icons': {\n            marginTop: 5,\n            color: `${theme.custom.thumbnail.iconColor} !important`,\n            fontSize: `${theme.custom.thumbnail.listViewIconSize}px !important`,\n        },\n    },\n    apiNameLink: {\n        display: 'flex',\n        alignItems: 'center',\n        '& span': {\n            marginLeft: theme.spacing(1),\n        },\n        color: theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n    },\n});\n/**\n * Table view for api listing\n *\n * @class Recommendations\n * @extends {React.Component}\n */\nclass Recommendations extends React.Component {\n    /**\n     * @inheritdoc\n     * @param {*} props properties\n     * @memberof Recommendations\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: null,\n            loading: true,\n        };\n    }\n\n    /**\n     * @memberof Recommendations\n    */\n    componentDidMount() {\n        this.getData();\n    }\n\n    /**\n     * @memberof Recommendations\n     * @param {JSON} prevProps previous props\n    */\n    componentDidUpdate(prevProps) {\n        const { query, selectedTag } = this.props;\n        if (\n            query !== prevProps.query\n            || prevProps.selectedTag !== selectedTag\n        ) {\n            this.getData();\n        }\n    }\n\n    getMuiTheme = () => {\n        const { gridView, theme } = this.props;\n        let themeAdditions = {};\n        let muiTheme = {\n            overrides: {\n                MUIDataTable: {\n                    root: {\n                        backgroundColor: 'transparent',\n                        marginLeft: 40,\n                        marginBottom: 20,\n                        width: '100%',\n                    },\n                    paper: {\n                        boxShadow: 'none',\n                        backgroundColor: 'transparent',\n                        width: '100%',\n                    },\n                    tableRoot: {\n                        border: 'solid 1px #fff',\n                        '& a': {\n                            display: 'flex',\n                            alignItems: 'center',\n                        },\n                        '& a > div': {\n                            paddingRight: 10,\n                        },\n                        '& td': {\n                            whiteSpace: 'nowrap',\n                        },\n                        '& tr:nth-child(even)': {\n                            backgroundColor: theme.custom.listView.tableBodyEvenBackgrund,\n                            '& td': {\n                                color: theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n                            },\n                        },\n                        '& tr:nth-child(odd)': {\n                            backgroundColor: theme.custom.listView.tableBodyOddBackgrund,\n                            '& td': {\n                                color: theme.palette.getContrastText(theme.custom.listView.tableBodyOddBackgrund),\n                            },\n                        },\n                        '& th': {\n                            backgroundColor: theme.custom.listView.tableHeadBackground,\n                            color: theme.palette.getContrastText(theme.custom.listView.tableHeadBackground),\n                        },\n                    },\n                },\n                MUIDataTableBodyCell: {\n                    root: {\n                        backgroundColor: 'transparent',\n                        width: '100%',\n                    },\n                },\n            },\n        };\n        if (gridView) {\n            themeAdditions = {\n                overrides: {\n                    MUIDataTable: {\n                        tableRoot: {\n                            display: 'block',\n                            '& tbody': {\n                                display: 'flex',\n                                flexWrap: 'wrap',\n                                marginLeft: 0,\n                            },\n                            '& thead': {\n                                display: 'none',\n                            },\n                        },\n                        paper: {\n                            boxShadow: 'none',\n                            backgroundColor: 'transparent',\n                        },\n                    },\n                },\n            };\n        }\n        muiTheme = Object.assign(muiTheme, themeAdditions, Configurations);\n        return createMuiTheme(muiTheme);\n    };\n\n    // get data\n    getData = () => {\n        const { intl } = this.props;\n        this.xhrRequest()\n            .then((data) => {\n                const { body } = data;\n                const { list } = body;\n                this.setState({ data: list });\n            })\n            .catch((error) => {\n                const { response } = error;\n                const { setTenantDomain } = this.props;\n                if (response && response.body.code === 901300) {\n                    setTenantDomain('INVALID');\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Invalid tenant domain',\n                        id: 'Apis.Listing.Recommendations.invalid.tenant.domain',\n                    }));\n                } else {\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Error While Loading APIs',\n                        id: 'Apis.Listing.Recommendations.error.loading',\n                    }));\n                }\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    xhrRequest = () => {\n        const api = new API();\n        return api.getApiRecommendations();\n    };\n\n    /**\n     * @inheritdoc\n     * @returns {Component}x\n     * @memberof Recommendations\n     */\n    render() {\n        const { intl, gridView } = this.props;\n        const { loading } = this.state;\n        const columns = [\n            {\n                name: 'id',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'name',\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            return <ImageGenerator api={artifact} width={30} height={30} />;\n                        }\n                        return <span />;\n                    },\n                    sort: false,\n                    filter: false,\n                    display: 'excluded',\n                },\n            },\n            {\n                name: 'name',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.Recommendations.name',\n                    defaultMessage: 'Name',\n                }),\n                options: {\n                    customBodyRender: (tableMeta, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            const apiName = tableMeta.rowData[2];\n                            const apiId = tableMeta.rowData[0];\n                            const { classes } = this.props;\n\n                            if (artifact) {\n                                return (\n                                    <Link\n                                        to={'/apis/' + apiId + '/overview'}\n                                        className={classes.apiNameLink}\n                                    >\n                                        <CustomIcon width={16} height={16} icon='api' strokeColor='#444444' />\n\n                                        <span>{apiName}</span>\n                                    </Link>\n                                );\n                            }\n                        }\n                        return <span />;\n                    },\n                    sort: false,\n                    filter: false,\n                },\n            },\n            {\n                name: 'rating',\n                label: intl.formatMessage({\n                    defaultMessage: 'Rating',\n                    id: 'Apis.Listing.Recommendations.rating',\n                }),\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            if (artifact) {\n                                if (artifact.type !== 'DOC') {\n                                    const apiId = tableMeta.rowData[0];\n                                    const avgRating = tableMeta.rowData[8];\n                                    return (\n                                        <StarRatingBar\n                                            apiRating={avgRating}\n                                            apiId={apiId}\n                                            isEditable={false}\n                                            showSummary={false}\n                                        />\n                                    );\n                                } else {\n                                    return (<span />);\n                                }\n                            } else {\n                                return (<span />);\n                            }\n                        } else {\n                            return (<span />);\n                        }\n                    },\n                    sort: false,\n                },\n            },\n            {\n                name: 'avgRating',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n        ];\n        const { data } = this.state;\n        const options = {\n            filterType: 'dropdown',\n            responsive: 'stacked',\n            serverSide: true,\n            search: false,\n        };\n        if (gridView) {\n            // eslint-disable-next-line no-shadow\n            options.customRowRender = (data, dataIndex, rowIndex, tableViewObj = this) => {\n                const artifact = tableViewObj.state.data[dataIndex];\n                if (artifact) {\n                    return <tr key={rowIndex}><td><RecommendedApiThumb api={artifact} /></td></tr>;\n                }\n                return <span />;\n            };\n            options.title = true;\n            options.filter = false;\n            options.print = false;\n            options.download = false;\n            options.viewColumns = false;\n            options.customToolbar = false;\n            options.rowsPerPageOptions = false;\n            options.pagination = false;\n        } else {\n            options.filter = false;\n        }\n        if (loading) {\n            return <Loading />;\n        }\n        if ((data && data.length === 0) || !data) {\n            return null;\n        }\n        return (\n            <MuiThemeProvider theme={this.getMuiTheme()}>\n                <MUIDataTable title='Recommended APIs for you' data={data} columns={columns} options={options} />\n            </MuiThemeProvider>\n        );\n    }\n}\n\nRecommendations.contextType = ApiContext;\n\nexport default withSettings(injectIntl(withTheme(withStyles(styles)(Recommendations))));\n","/* eslint-disable prefer-destructuring */\n/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\nimport { withStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport Settings from 'AppComponents/Shared/SettingsContext';\nimport API from 'AppData/api';\nimport ApiBreadcrumbs from './ApiBreadcrumbs';\nimport ApiTableView from './ApiTableView';\nimport { ApiContext } from '../Details/ApiContext';\nimport TagCloudListingTags from './TagCloudListingTags';\nimport CategoryListingCategories from './CategoryListingCategories';\nimport ApiTagCloud from './ApiTagCloud';\nimport Recommendations from './Recommendations';\nimport AuthManager from '../../../data/AuthManager';\n\nconst styles = (theme) => ({\n    rightIcon: {\n        marginLeft: theme.spacing(1),\n    },\n    button: {\n        margin: theme.spacing(1),\n        marginBottom: 0,\n    },\n    buttonRight: {\n        alignSelf: 'flex-end',\n        display: 'flex',\n    },\n    ListingWrapper: {\n        paddingTop: 10,\n        paddingLeft: 35,\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    appBar: {\n        height: 70,\n        background: theme.custom.infoBar.background,\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    mainIconWrapper: {\n        paddingTop: 13,\n        paddingLeft: 20,\n        paddingRight: 20,\n    },\n    mainTitle: {\n        paddingTop: 10,\n    },\n    mainTitleWrapper: {\n        flexGrow: 1,\n    },\n    listContentWrapper: {\n        padding: `0 ${theme.spacing(3)}px`,\n        display: 'flex',\n    },\n    iconDefault: {\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n    },\n    iconSelected: {\n        color: theme.custom.infoBar.listGridSelectedColor,\n    },\n    content: {\n        flexGrow: 1,\n        display: 'flex',\n        flex: 1,\n        flexDirection: 'column',\n        paddingBottom: theme.spacing(3),\n    },\n    contentWithTags: {\n        marginLeft: theme.custom.tagCloud.leftMenu.width,\n    },\n    contentWithoutTags: {\n        marginLeft: -4,\n    },\n    contentWithTagsHidden: {\n        marginLeft: theme.custom.tagCloud.leftMenu.sliderWidth,\n    },\n    LeftMenu: {\n        backgroundColor: theme.custom.tagCloud.leftMenu.background,\n        color: theme.custom.tagCloud.leftMenu.color,\n        textAlign: 'left',\n        fontFamily: theme.typography.fontFamily,\n        position: 'absolute',\n        bottom: 0,\n        paddingLeft: 0,\n        width: theme.custom.tagCloud.leftMenu.width,\n        top: 0,\n        left: 0,\n        overflowY: 'auto',\n    },\n    LeftMenuForSlider: {\n        backgroundColor: theme.custom.tagCloud.leftMenu.background,\n        color: theme.custom.tagCloud.leftMenu.color,\n        textAlign: 'left',\n        fontFamily: theme.typography.fontFamily,\n        position: 'absolute',\n        bottom: 0,\n        paddingLeft: 0,\n        width: theme.custom.tagCloud.leftMenu.sliderWidth,\n        top: 0,\n        left: 0,\n        overflowY: 'auto',\n        display: 'flex',\n    },\n    sliderButton: {\n        fontWeight: 200,\n        background: theme.custom.tagCloud.leftMenu.sliderBackground,\n        color: theme.palette.getContrastText(theme.custom.tagCloud.leftMenu.sliderBackground),\n        height: theme.custom.infoBar.height,\n        alignItems: 'center',\n        display: 'flex',\n        position: 'absolute',\n        right: 0,\n        cursor: 'pointer',\n    },\n    rotatedText: {\n        transform: 'rotate(270deg)',\n        transformOrigin: 'left bottom 0',\n        position: 'absolute',\n        whiteSpace: 'nowrap',\n        top: theme.custom.infoBar.height * 4,\n        marginLeft: 23,\n        cursor: 'pointer',\n    },\n    recommendationsBar: {\n        height: 60,\n        background: theme.custom.infoBar.background,\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    apiListingWrapper: {\n        width: '100%',\n    },\n});\n\n/**\n * Shared listing page\n *\n * @class CommonListing\n * @extends {Component}\n */\nclass CommonListing extends React.Component {\n    /**\n     * Constructor\n     *\n     * @param {*} props Properties\n     */\n    constructor(props) {\n        super(props);\n        let { defaultApiView } = props.theme.custom;\n        this.showToggle = true;\n        if (typeof defaultApiView === 'object' && defaultApiView.length > 0) {\n            if (defaultApiView.length === 1) { // We will disable the other\n                this.showToggle = false;\n            }\n            defaultApiView = defaultApiView[0];\n        } else {\n            defaultApiView = localStorage.getItem('portal.listType') || defaultApiView;\n        }\n        this.state = {\n            listType: defaultApiView,\n            allTags: null,\n            showLeftMenu: false,\n            isMonetizationEnabled: false,\n            isRecommendationEnabled: false,\n        };\n    }\n\n    /**\n     *\n     * Get all tags\n     * @memberof CommonListing\n     */\n    componentDidMount() {\n        const restApiClient = new API();\n        const promisedTags = restApiClient.getAllTags();\n        promisedTags\n            .then((response) => {\n                this.setState({ allTags: response.body.list });\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n        const promisedCategories = restApiClient.apiCategories();\n        promisedCategories\n            .then((response) => {\n                this.setState({ allCategories: response.body.list });\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n        this.isMonetizationEnabled();\n        this.isRecommendationEnabled();\n    }\n\n    /**\n     *\n     * Switch the view between grid and list view\n     * @param {String} value view type\n     * @memberof CommonListing\n     */\n     setListType = (value) => {\n         localStorage.setItem('portal.listType', value);\n         this.setState({ listType: value });\n     };\n\n    toggleLeftMenu = () => {\n        this.setState((prevState) => ({ showLeftMenu: !prevState.showLeftMenu }));\n    };\n\n    /**\n     * retrieve Settings from the context and check the monetization enabled\n     */\n    isMonetizationEnabled = () => {\n        const settingsContext = this.context;\n        const enabled = settingsContext.settings.monetizationEnabled;\n        this.setState({ isMonetizationEnabled: enabled });\n    }\n\n    /**\n     * retrieve Settings from the context and check whether recommendation is enabled\n     */\n    isRecommendationEnabled = () => {\n        const settingsContext = this.context;\n        const enabled = settingsContext.settings.recommendationEnabled;\n        this.setState({ isRecommendationEnabled: enabled });\n    }\n\n    /**\n     *\n     * @inheritdoctheme\n     * @returns {React.Component} @inheritdoc\n     * @memberof CommonListing\n     */\n    render() {\n        const {\n            theme,\n            classes,\n            location: { search },\n        } = this.props;\n        const user = AuthManager.getUser();\n        const {\n            custom: {\n                tagWise: { key, active },\n                tagCloud: { active: tagCloudActive },\n            },\n        } = theme;\n        const {\n            listType, allTags, showLeftMenu, isMonetizationEnabled, allCategories, isRecommendationEnabled,\n        } = this.state;\n        const strokeColorMain = theme.palette.getContrastText(theme.custom.infoBar.background);\n        const searchParam = new URLSearchParams(search);\n        const searchQuery = searchParam.get('query');\n        let selectedTag = null;\n        if (search && searchQuery !== null) {\n            // For the tagWise search\n            if (active && key) {\n                const splits = searchQuery.split(':');\n                if (splits.length > 1 && splits[1].search(key) !== -1) {\n                    const splitTagArray = splits[1].split(key);\n                    if (splitTagArray.length > 0) {\n                        selectedTag = splitTagArray[0];\n                    }\n                } else if (splits.length > 1 && splits[0] === 'tag') {\n                    selectedTag = splits[1];\n                }\n            }\n        }\n        const tagPaneVisible = allTags && allTags.length > 0 && (tagCloudActive || active);\n        const categoryPaneVisible = allCategories && allCategories.length > 0;\n        return (\n            <div className={classNames(classes.apiListingWrapper, 'api-listing-wrapper')}>\n                {(categoryPaneVisible || tagPaneVisible) && showLeftMenu && (\n                    <div className={classNames(classes.LeftMenu, 'api-listing-left-menu')}>\n                        <div\n                            className={classNames(classes.sliderButton, 'api-listing-slider-btn')}\n                            onClick={this.toggleLeftMenu}\n                            onKeyDown={this.toggleLeftMenu}\n                        >\n                            <Icon>keyboard_arrow_left</Icon>\n                        </div>\n                        {categoryPaneVisible && <CategoryListingCategories allCategories={allCategories} />}\n                        {tagPaneVisible && active && <TagCloudListingTags allTags={allTags} />}\n                        {tagPaneVisible && tagCloudActive && <ApiTagCloud allTags={allTags} />}\n                    </div>\n                )}\n                {(categoryPaneVisible || tagPaneVisible) && !showLeftMenu && (\n                    <div className={classNames(classes.LeftMenuForSlider, 'api-listing-left-menu-hidden')}>\n                        <div\n                            className={classNames(classes.sliderButton, 'api-listing-slider-btn')}\n                            onClick={this.toggleLeftMenu}\n                            onKeyDown={this.toggleLeftMenu}\n                        >\n                            <Icon>keyboard_arrow_right</Icon>\n                        </div>\n                        <div\n                            className={classNames(classes.rotatedText, 'api-listing-title-section-hidden')}\n                            onClick={this.toggleLeftMenu}\n                            onKeyDown={this.toggleLeftMenu}\n                        >\n                            <FormattedMessage\n                                defaultMessage='Tags / API Categories'\n                                id='Apis.Listing.Listing.ApiTagCloud.title'\n                            />\n                        </div>\n                    </div>\n                )}\n\n                <div\n                    className={classNames(\n                        classes.content,\n                        { [classes.contentWithoutTags]: !(tagPaneVisible || categoryPaneVisible) || !showLeftMenu },\n                        { [classes.contentWithTagsHidden]: (tagPaneVisible || categoryPaneVisible) && !showLeftMenu },\n                        { [classes.contentWithTags]: (tagPaneVisible || categoryPaneVisible) && showLeftMenu },\n                        'content-section',\n                    )}\n                    id='commonListing'\n                >\n                    <div className={classes.appBar} id='commonListingAppBar'>\n                        <div className={classNames(classes.mainIconWrapper, 'main-icon-wrapper')}>\n                            <CustomIcon strokeColor={strokeColorMain} width={42} height={42} icon='api' />\n                        </div>\n                        <div className={classes.mainTitleWrapper} id='mainTitleWrapper'>\n                            <Typography variant='h4' component='h1' className={classes.mainTitle}>\n                                <FormattedMessage defaultMessage='APIs' id='Apis.Listing.Listing.apis.main' />\n                            </Typography>\n                        </div>\n                        {this.showToggle && (\n                            <div className={classes.buttonRight} id='listGridWrapper'>\n                                <IconButton\n                                    aria-label='Change to list view'\n                                    className={classes.button}\n                                    onClick={() => this.setListType('list')}\n                                    disabled={listType === 'list'}\n                                >\n                                    <Icon\n                                        className={classNames(\n                                            { [classes.iconSelected]: listType === 'list' },\n                                            { [classes.iconDefault]: listType === 'grid' },\n                                        )}\n                                    >\n                                        list\n                                    </Icon>\n                                </IconButton>\n                                <IconButton\n                                    aria-label='Change to grid view'\n                                    className={classes.button}\n                                    onClick={() => this.setListType('grid')}\n                                    disabled={listType === 'grid'}\n                                >\n                                    <Icon\n                                        className={classNames(\n                                            { [classes.iconSelected]: listType === 'grid' },\n                                            { [classes.iconDefault]: listType === 'list' },\n                                        )}\n                                    >\n                                        grid_on\n                                    </Icon>\n                                </IconButton>\n                            </div>\n                        )}\n                    </div>\n                    {active && allTags && allTags.length > 0 && <ApiBreadcrumbs selectedTag={selectedTag} />}\n                    <div className={classes.listContentWrapper}>\n                        {listType === 'grid' && (\n                            <ApiContext.Provider value={{ isMonetizationEnabled }}>\n                                <ApiTableView gridView query={search} />\n                            </ApiContext.Provider>\n                        )}\n                        {listType === 'list' && (\n                            <ApiContext.Provider value={{ isMonetizationEnabled }}>\n                                <ApiTableView gridView={false} query={search} />\n                            </ApiContext.Provider>\n                        )}\n                    </div>\n                    {isRecommendationEnabled && user\n                        && (\n                            <div>\n                                {active && allTags && allTags.length > 0 && <ApiBreadcrumbs selectedTag={selectedTag} />}\n                                <div className={classes.listContentWrapper}>\n                                    {listType === 'grid' && (\n                                        <ApiContext.Provider value={{ isRecommendationEnabled }}>\n                                            <Recommendations gridView query={search} />\n                                        </ApiContext.Provider>\n                                    )}\n                                    {listType === 'list' && (\n                                        <ApiContext.Provider value={{ isRecommendationEnabled }}>\n                                            <Recommendations gridView query={search} />\n                                        </ApiContext.Provider>\n                                    )}\n                                </div>\n                            </div>\n                        )}\n                </div>\n            </div>\n        );\n    }\n}\nCommonListing.contextType = Settings;\n\nCommonListing.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    location: PropTypes.shape({\n        search: PropTypes.string,\n    }),\n};\n\nCommonListing.defaultProps = {\n    location: PropTypes.shape({\n        search: '',\n    }),\n};\n\nexport default withStyles(styles, { withTheme: true })(CommonListing);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport Grid from '@material-ui/core/Grid';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Image404 from './Custom404Image';\n\nconst SubscriptionNotFound = (props) => {\n    return (\n        <Container maxWidth='md'>\n            <Box padding={4}>\n                <Paper elevation={0}>\n                    <Box padding={4}>\n                        <Grid container alignItems='center' justify='center' style={{ height: '100%' }}>\n                            <Grid item xs={12} md={6}>\n                                <Typography variant='h5' gutterBottom>\n                                    <FormattedMessage\n                                        id='Base.Errors.SubscriptionNotFound.default_title'\n                                        defaultMessage='Solace Info Page is not displayed without subscriptions to the API.\n                                        Please Subscribed to the API'\n                                    />\n                                </Typography>\n                                <Typography variant='subtitle1' gutterBottom>\n                                    <FormattedMessage\n                                        id='Base.Errors.ResourceNotfound.default_body'\n                                        defaultMessage='The page you are looking for is not available'\n                                    />\n                                    <span style={{ color: 'green' }}>\n                                        {' '}\n                                        {props.response ? props.response.statusText : ''}\n                                        {' '}\n                                    </span>\n                                </Typography>\n                                <Box py={5}>\n                                    <Box pb={2}>\n                                        <Typography variant='subtitle1'>\n                                            <FormattedMessage\n                                                id='Base.Errors.ResourceNotFound.more.links'\n                                                defaultMessage='You may check the links below'\n                                            />\n                                        </Typography>\n                                    </Box>\n                                    <Link to='/apis/' style={{ marginRight: 8 }}>\n                                        <Button variant='contained' color='primary'>\n                                            <FormattedMessage\n                                                id='Base.Errors.ResourceNotFound.api.list'\n                                                defaultMessage='API List'\n                                            />\n                                        </Button>\n                                    </Link>\n                                    <Link to='/applications/'>\n                                        <Button variant='contained' color='primary'>\n                                            <FormattedMessage\n                                                id='Base.Errors.ResourceNotFound.applications'\n                                                defaultMessage='Applications'\n                                            />\n                                        </Button>\n                                    </Link>\n                                </Box>\n                            </Grid>\n                            <Grid item xs={12} md={6}>\n                                {/* Image */}\n                                <Image404 style={{ fontSize: 400, fill: '#ccc' }} />\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </Paper>\n            </Box>\n        </Container>\n    );\n};\n\nexport default SubscriptionNotFound;\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.com). All Rights Reserved.\n *\n * This software is the property of WSO2 Inc. and its suppliers, if any.\n * Dissemination of any information or reproduction of any material contained\n * herein is strictly forbidden, unless permitted by WSO2 in accordance with\n * the WSO2 Commercial License available at http://wso2.com/licenses.\n * For specific language governing the permissions and limitations under\n * this license, please see the license as well as any agreement you’ve\n * entered into with WSO2 governing the purchase of this software and any\n * associated services.\n */\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst solaceTopicStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(3, 2),\n        '& td, & th': {\n            color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        },\n        '& option': {\n            padding: '5px 0px 5px 0px',\n        },\n        background: theme.custom.infoBar.background,\n    },\n    table: {\n        minWidth: '100%',\n    },\n    centerItems: {\n        margin: 'auto',\n    },\n    leftCol: {\n        width: 200,\n    },\n    iconAligner: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n    },\n    iconTextWrapper: {\n        display: 'inline-block',\n        paddingLeft: 20,\n    },\n    iconEven: {\n        color: theme.custom.infoBar.iconOddColor,\n        width: theme.spacing(3),\n    },\n    iconOdd: {\n        color: theme.custom.infoBar.iconOddColor,\n        width: theme.spacing(3),\n    },\n    heading: {\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        paddingLeft: theme.spacing(1),\n    },\n    heading1: {\n        marginRight: 20,\n    },\n    emptyBox: {\n        background: '#ffffff55',\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        border: 'solid 1px #fff',\n        padding: theme.spacing(2),\n        width: '100%',\n    },\n    summaryRoot: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    actionPanel: {\n        justifyContent: 'flex-start',\n    },\n    Paper: {\n        marginTop: theme.spacing(2),\n        padding: theme.spacing(2),\n    },\n    Box2: {\n        marginTop: theme.spacing(2),\n        padding: theme.spacing(2),\n        height: '100%',\n    },\n    Box3: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: '100%',\n        border: `solid 1px ${theme.palette.grey[300]}`,\n        '& .MuiInputBase-root:before,  .MuiInputBase-root:hover': {\n            borderBottom: 'none !important',\n            color: theme.palette.primary.main,\n        },\n        '& .MuiSelect-select': {\n            color: theme.palette.primary.main,\n            paddingLeft: theme.spacing(),\n        },\n        '& .MuiInputBase-input': {\n            color: theme.palette.primary.main,\n        },\n        '& .material-icons': {\n            fontSize: 16,\n            color: `${theme.palette.grey[700]} !important`,\n        },\n        borderRadius: 10,\n        marginRight: theme.spacing(),\n    },\n    list: {\n        width: '100%',\n        maxWidth: 800,\n        backgroundColor: theme.palette.background.paper,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 175,\n    },\n    urlPaper: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: '100%',\n        border: `solid 1px ${theme.palette.grey[300]}`,\n        '& .MuiInputBase-root:before,  .MuiInputBase-root:hover': {\n            borderBottom: 'none !important',\n            color: theme.palette.primary.main,\n        },\n        '& .MuiSelect-select': {\n            color: theme.palette.primary.main,\n            paddingLeft: theme.spacing(),\n        },\n        '& .MuiInputBase-input': {\n            color: theme.palette.primary.main,\n        },\n        '& .material-icons': {\n            fontSize: 16,\n            color: `${theme.palette.grey[700]} !important`,\n        },\n        borderRadius: 10,\n        marginRight: theme.spacing(),\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    avatar: {\n        width: 30,\n        height: 30,\n        background: 'transparent',\n        border: `solid 1px ${theme.palette.grey[300]}`,\n    },\n    iconStyle: {\n        cursor: 'pointer',\n        margin: '-10px 0',\n        padding: '0 0 0 5px',\n        '& .material-icons': {\n            fontSize: 18,\n            color: '#9c9c9c',\n        },\n    },\n}));\n\nexport default solaceTopicStyles;\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.com). All Rights Reserved.\n *\n * This software is the property of WSO2 Inc. and its suppliers, if any.\n * Dissemination of any information or reproduction of any material contained\n * herein is strictly forbidden, unless permitted by WSO2 in accordance with\n * the WSO2 Commercial License available at http://wso2.com/licenses.\n * For specific language governing the permissions and limitations under\n * this license, please see the license as well as any agreement you’ve\n * entered into with WSO2 governing the purchase of this software and any\n * associated services.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport {\n    Divider, Grid, TextField,\n} from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport InputBase from '@material-ui/core/InputBase';\nimport Avatar from '@material-ui/core/Avatar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport Chip from '@material-ui/core/Chip';\nimport { upperCaseString } from 'AppData/stringFormatter';\nimport API from 'AppData/api';\nimport Loading from 'AppComponents/Base/Loading/Loading';\nimport SubscriptionNotFound from '../../../Base/Errors/SubscriptionNotFound';\nimport ResourceNotFound from '../../../Base/Errors/ResourceNotFound';\nimport solaceTopicStyles from './SolaceTopicStyles';\n\nfunction VerbElement(props) {\n    const {\n        verb,\n    } = props;\n\n    const useMenuStyles = makeStyles((theme) => {\n        const backgroundColor = theme.custom.resourceChipColors[verb.toLowerCase()];\n        return {\n            customButton: {\n                backgroundColor: '#ffffff',\n                borderColor: backgroundColor,\n                color: backgroundColor,\n                width: theme.spacing(2),\n            },\n        };\n    });\n    const classes = useMenuStyles();\n    return (\n        <Button disableFocusRipple variant='outlined' className={classes.customButton} size='small'>\n            {verb.toUpperCase()}\n        </Button>\n    );\n}\n\nfunction SolaceTopicsInfo() {\n    const classes = solaceTopicStyles();\n    const { apiUuid } = useParams();\n    const [application, setApplication] = useState(null);\n    const [environment, setEnvironment] = useState(null);\n    const [selectedProtocol, setSelectedProtocol] = useState(null);\n    const [envsListOfApplication, setEnvsListOfApplication] = useState(null);\n    const [selectedEndpoint, setSelectedEndpoint] = useState(null);\n    const [protocolsListOfEnvironments, setProtocolsListOfEnvironments] = useState(null);\n    const [topics, setTopics] = useState(null);\n    const [applicationList, setApplicationList] = useState(null);\n    const [notFound, setNotFound] = useState(false);\n    const [urlCopied, setUrlCopied] = useState(false);\n    const [topicCopied, setTopicCopied] = useState(false);\n    const [apiTopics, setApiTopics] = useState(null);\n    const [apiPubTopics, setApiPubTopics] = useState(null);\n    const [apiSubTopics, setApiSubTopics] = useState(null);\n\n    const intl = useIntl();\n\n    const onCopy = () => {\n        setUrlCopied(true);\n        const caller = function () {\n            setUrlCopied(false);\n        };\n        setTimeout(caller, 2000);\n    };\n\n    const onTopicCopy = () => {\n        setTopicCopied(true);\n        const caller = function () {\n            setTopicCopied(false);\n        };\n        setTimeout(caller, 2000);\n    };\n\n    function setPubAndSubTopics(allTopics, allApiTopics) {\n        const apiPubTopicList = [];\n        allTopics.publishTopics.map((t) => {\n            allApiTopics.map((e) => {\n                if (t.toString().includes(e)) {\n                    apiPubTopicList.push(t);\n                }\n                return null;\n            });\n            return null;\n        });\n        setApiPubTopics(apiPubTopicList);\n\n        const apiSubTopicList = [];\n        allTopics.subscribeTopics.map((t) => {\n            allApiTopics.map((e) => {\n                if (t.toString().includes(e)) {\n                    apiSubTopicList.push(t);\n                }\n                return null;\n            });\n            return null;\n        });\n        setApiSubTopics(apiSubTopicList);\n    }\n\n    useEffect(() => {\n        const client = new API();\n\n        const promisedApi = client.getAllTopics(apiUuid);\n        const apiTopicList = [];\n        promisedApi\n            .then((response) => {\n                response.obj.list.map((entry) => {\n                    const parts = entry.name.split('{')[0];\n                    apiTopicList.push(parts);\n                    return null;\n                });\n                setApiTopics(apiTopicList);\n                return null;\n            });\n\n        const infoPromise = client.getSubscriptionAdditionalInfo(apiUuid);\n        infoPromise\n            .then((response) => {\n                setApplicationList(response.body.list);\n                // Get application\n                const appInner = response.body.list[0];\n                if (appInner != null) {\n                    setApplication(appInner.applicationName);\n                    if (appInner.solaceDeployedEnvironments !== null) {\n                        // Set default deployed environments of application\n                        setEnvsListOfApplication(appInner.solaceDeployedEnvironments);\n                        setEnvironment(appInner.solaceDeployedEnvironments[0]);\n                        // Set default protocols of deployed environment\n                        setProtocolsListOfEnvironments(appInner.solaceDeployedEnvironments[0].solaceURLs);\n                        setSelectedProtocol(appInner.solaceDeployedEnvironments[0].solaceURLs[0].protocol);\n                        setSelectedEndpoint(appInner.solaceDeployedEnvironments[0].solaceURLs[0].endpointURL);\n                        // Set default topics of deployed solace environment\n                        if (appInner.solaceDeployedEnvironments[0].solaceURLs[0].protocol === 'mqtt') {\n                            setTopics(appInner.solaceDeployedEnvironments[0].SolaceTopicsObject.mqttSyntax);\n                            setPubAndSubTopics(appInner.solaceDeployedEnvironments[0].SolaceTopicsObject.mqttSyntax, apiTopicList);\n                        } else {\n                            setTopics(appInner.solaceDeployedEnvironments[0].SolaceTopicsObject.defaultSyntax);\n                            setPubAndSubTopics(appInner.solaceDeployedEnvironments[0].SolaceTopicsObject.defaultSyntax, apiTopicList);\n                        }\n                    }\n                }\n            }).catch((error) => {\n                console.log(error);\n                const { status } = error;\n                if (status === 404) {\n                    setNotFound(true);\n                } else {\n                    setNotFound(false);\n                }\n            });\n    }, [apiUuid]);\n\n    // Handle resource not found error\n    if (notFound) {\n        return <ResourceNotFound />;\n    }\n    // Handle topic changes with protocol change\n    function setProtocolTopics(protocol, selectedEnv) {\n        if (protocol === 'mqtt') {\n            setTopics(selectedEnv.SolaceTopicsObject.mqttSyntax);\n            setPubAndSubTopics(selectedEnv.SolaceTopicsObject.mqttSyntax, apiTopics);\n        } else {\n            setTopics(selectedEnv.SolaceTopicsObject.defaultSyntax);\n            setPubAndSubTopics(selectedEnv.SolaceTopicsObject.defaultSyntax, apiTopics);\n        }\n    }\n    // Handle application selection change\n    const handleChangeApplication = (event) => {\n        setApplication(event.target.value);\n        let selectedApp;\n        applicationList.map((app) => {\n            if (app.applicationName === event.target.value) {\n                selectedApp = app;\n            }\n            return null;\n        });\n        const selectedEnv = selectedApp.solaceDeployedEnvironments[0];\n        setEnvsListOfApplication(selectedApp.solaceDeployedEnvironments);\n        setSelectedProtocol(selectedEnv.solaceURLs[0].protocol);\n        let protocol;\n        selectedEnv.solaceURLs.map((e) => {\n            if (e.protocol === selectedEnv.solaceURLs[0].protocol) {\n                setSelectedEndpoint(e.endpointURL);\n                protocol = e.protocol;\n            }\n            return null;\n        });\n        setProtocolTopics(protocol, selectedEnv);\n    };\n    // Handle environment selection change\n    const handleChangeEnvironment = (event) => {\n        setEnvironment(event.target.value);\n        let selectedEnv;\n        envsListOfApplication.map((e) => {\n            if (e.environmentDisplayName === event.target.value) {\n                selectedEnv = e;\n            }\n            return null;\n        });\n        setSelectedProtocol(selectedEnv.solaceURLs[0].protocol);\n        setProtocolsListOfEnvironments(selectedEnv.solaceURLs);\n        let protocol;\n        selectedEnv.solaceURLs.map((e) => {\n            if (e.protocol === selectedEnv.solaceURLs[0].protocol) {\n                setSelectedEndpoint(e.endpointURL);\n                protocol = e.protocol;\n            }\n            return null;\n        });\n        setProtocolTopics(protocol, selectedEnv);\n    };\n    // Handle protocol selection change\n    const handleChangeProtocol = (event) => {\n        setSelectedProtocol(event.target.value);\n        let selectedEnv;\n        envsListOfApplication.map((e) => {\n            if (e.environmentDisplayName === environment.environmentDisplayName) {\n                selectedEnv = e;\n            }\n            return null;\n        });\n        let protocol;\n        protocolsListOfEnvironments.map((e) => {\n            if (e.protocol === event.target.value) {\n                setSelectedEndpoint(e.endpointURL);\n                protocol = e.protocol;\n            }\n            return null;\n        });\n        setProtocolTopics(protocol, selectedEnv);\n    };\n\n    if (!applicationList) {\n        return <Loading />;\n    }\n\n    return (\n        <>\n            { !application && <SubscriptionNotFound /> }\n            { environment && topics && apiTopics && applicationList && (\n                <div className={classes.root}>\n                    <Typography id='itest-api-details-bushiness-plans-head' variant='h5'>\n                        <FormattedMessage\n                            id='solace.application.available.topics.heading'\n                            defaultMessage='Available Topics'\n                        />\n                    </Typography>\n                    <Typography variant='caption' gutterBottom>\n                        <FormattedMessage\n                            id='solace.application.available.topics.subheading'\n                            defaultMessage='Topics permitted to access from solace applications'\n                        />\n                    </Typography>\n                    <Box mt={2} />\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} md={4}>\n                            <TextField\n                                select\n                                fullWidth\n                                onChange={handleChangeApplication}\n                                value={application}\n                                variant='outlined'\n                                label='Application'\n                                helperText={(\n                                    <FormattedMessage\n                                        defaultMessage='Subscribed applications'\n                                        id='Apis.Details.SolaceTopicsInfo.SelectAppPanel.select.subscribed.\n                                                    application'\n                                    />\n                                )}\n                                SelectProps={{\n                                    native: true,\n                                }}\n                            >\n                                {applicationList.map((e) => (\n                                    <option key={e} value={e.applicationName}>\n                                        {e.applicationName}\n                                    </option>\n                                ))}\n                            </TextField>\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <TextField\n                                select\n                                fullWidth\n                                onChange={handleChangeEnvironment}\n                                value={environment.environmentDisplayName}\n                                variant='outlined'\n                                label='Environment Name'\n                                helperText={(\n                                    <FormattedMessage\n                                        defaultMessage='Deployed Environments'\n                                        id='Apis.Details.SolaceTopicsInfo.SelectAppPanel.select.\n                                                        deployed.environment'\n                                    />\n                                )}\n                                SelectProps={{\n                                    native: true,\n                                }}\n                            >\n                                {envsListOfApplication.map((e) => (\n                                    <option key={e} value={e.environmentDisplayName}>\n                                        {e.environmentDisplayName}\n                                    </option>\n                                ))}\n                            </TextField>\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <TextField\n                                select\n                                fullWidth\n                                onChange={handleChangeProtocol}\n                                value={selectedProtocol}\n                                variant='outlined'\n                                label='Protocol'\n                                helperText={(\n                                    <FormattedMessage\n                                        defaultMessage='Available Protocols'\n                                        id='Apis.Details.SolaceTopicsInfo.SelectAppPanel.select.\n                                                        environment.protocol'\n                                    />\n                                )}\n                                SelectProps={{\n                                    native: true,\n                                }}\n                            >\n                                {protocolsListOfEnvironments.map((e) => (\n                                    <option key={e.protocol} value={e.protocol}>\n                                        {upperCaseString(e.protocol)}\n                                    </option>\n                                ))}\n                            </TextField>\n                        </Grid>\n                    </Grid>\n                    <Box pt={2}>\n                        <Divider />\n                    </Box>\n                    <Box pt={5} pb={5}>\n                        <Grid container>\n                            <Grid\n                                xs={12}\n                                md={7}\n                                item\n                                style={{\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    justifyContent: 'center',\n                                }}\n                            >\n\n                                <Box\n                                    id='gateway-envirounment'\n                                    component='form'\n                                    className={classes.Box3}\n                                >\n                                    <Box mr={3}>\n                                        <Chip\n                                            label={upperCaseString(selectedProtocol)}\n                                            color='primary'\n                                            style={{\n                                                width: '70px',\n                                            }}\n                                        />\n                                    </Box>\n                                    <InputBase\n                                        className={classes.input}\n                                        inputProps={{ 'aria-label': 'api url' }}\n                                        value={selectedEndpoint}\n                                    />\n                                    <Avatar className={classes.avatar} sizes={30}>\n                                        <Tooltip\n                                            title={\n                                                urlCopied\n                                                    ? intl.formatMessage({\n                                                        defaultMessage: 'Copied',\n                                                        id: 'Apis.Details.Environments.copied',\n                                                    })\n                                                    : intl.formatMessage({\n                                                        defaultMessage: 'Copy to clipboard',\n                                                        id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                    })\n                                            }\n                                            interactive\n                                            placement='right'\n                                            className={classes.iconStyle}\n                                        >\n                                            <CopyToClipboard\n                                                text={selectedEndpoint}\n                                                onCopy={() => onCopy('urlCopied')}\n                                            >\n                                                <IconButton\n                                                    aria-label='Copy the API URL to clipboard'\n                                                >\n                                                    <Icon color='secondary'>file_copy</Icon>\n                                                </IconButton>\n                                            </CopyToClipboard>\n                                        </Tooltip>\n                                    </Avatar>\n                                </Box>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                    <Grid container>\n                        <Grid item xs={6}>\n                            <Box className={classes.Box2}>\n                                <Typography id='itest-api-details-bushiness-plans-head' variant='h6'>\n                                    <FormattedMessage\n                                        id='solace.application.topics.publish'\n                                        defaultMessage='Publish Topics'\n                                    />\n                                </Typography>\n                                <Box p={1}>\n                                    {\n                                        (apiPubTopics && apiPubTopics.length > 0) ? apiPubTopics.map((t) => (\n                                            <Box pt={2}>\n                                                <Box\n                                                    id='gateway-envirounment'\n                                                    component='form'\n                                                    className={classes.Box3}\n                                                >\n                                                    <Grid item>\n                                                        <VerbElement verb='PUB' />\n                                                    </Grid>\n                                                    <InputBase\n                                                        className={classes.input}\n                                                        inputProps={{ 'aria-label': 'api url' }}\n                                                        value={t}\n                                                    />\n                                                    <Avatar className={classes.avatar} sizes={30}>\n                                                        <Tooltip\n                                                            title={\n                                                                topicCopied\n                                                                    ? intl.formatMessage({\n                                                                        defaultMessage: 'Copied',\n                                                                        id: 'Apis.Details.PubTopic.copied',\n                                                                    })\n                                                                    : intl.formatMessage({\n                                                                        defaultMessage: 'Copy to clipboard',\n                                                                        id: 'Apis.Details.PubTopic.copy.to.clipboard',\n                                                                    })\n                                                            }\n                                                            interactive\n                                                            placement='right'\n                                                            className={classes.iconStyle}\n                                                        >\n                                                            <CopyToClipboard\n                                                                text={t}\n                                                                onCopy={() => onTopicCopy('topicCopied')}\n                                                            >\n                                                                <IconButton\n                                                                    aria-label='Copy the API URL to clipboard'\n                                                                >\n                                                                    <Icon color='secondary'>file_copy</Icon>\n                                                                </IconButton>\n                                                            </CopyToClipboard>\n                                                        </Tooltip>\n                                                    </Avatar>\n                                                </Box>\n\n                                            </Box>\n                                        )) : (\n                                            <Box pt={2}>\n                                                <Typography id='itest-api-details-bushiness-plans-head' variant='h7'>\n                                                    <FormattedMessage\n                                                        id='solace.application.topics.publish.empty'\n                                                        defaultMessage='No Publish Topics to Display.'\n                                                    />\n                                                </Typography>\n                                            </Box>\n                                        )\n                                    }\n                                </Box>\n                            </Box>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Box className={classes.Box2}>\n                                <Typography id='itest-api-details-bushiness-plans-head' variant='h6'>\n                                    <FormattedMessage\n                                        id='solace.application.topics.subscribe'\n                                        defaultMessage='Subscribe Topics'\n                                    />\n                                </Typography>\n                                <Box p={1}>\n                                    {\n                                        (apiSubTopics && apiSubTopics.length > 0) ? apiSubTopics.map((t) => (\n                                            <Box pt={2}>\n                                                <Box\n                                                    id='gateway-envirounment'\n                                                    component='form'\n                                                    className={classes.Box3}\n                                                >\n                                                    <Grid item>\n                                                        <VerbElement verb='SUB' />\n                                                    </Grid>\n                                                    <InputBase\n                                                        className={classes.input}\n                                                        inputProps={{ 'aria-label': 'api url' }}\n                                                        value={t}\n                                                    />\n                                                    <Avatar className={classes.avatar} sizes={30}>\n                                                        <Tooltip\n                                                            title={\n                                                                topicCopied\n                                                                    ? intl.formatMessage({\n                                                                        defaultMessage: 'Copied',\n                                                                        id: 'Apis.Details.SubTopic.copied',\n                                                                    })\n                                                                    : intl.formatMessage({\n                                                                        defaultMessage: 'Copy to clipboard',\n                                                                        id: 'Apis.Details.SubTopic.copy.to.clipboard',\n                                                                    })\n                                                            }\n                                                            interactive\n                                                            placement='right'\n                                                            className={classes.iconStyle}\n                                                        >\n                                                            <CopyToClipboard\n                                                                text={t}\n                                                                onCopy={() => onTopicCopy('topicCopied')}\n                                                            >\n                                                                <IconButton\n                                                                    aria-label='Copy the API URL to clipboard'\n                                                                >\n                                                                    <Icon color='secondary'>file_copy</Icon>\n                                                                </IconButton>\n                                                            </CopyToClipboard>\n                                                        </Tooltip>\n                                                    </Avatar>\n                                                </Box>\n\n                                            </Box>\n                                        )) : (\n                                            <Box pt={2}>\n                                                <Typography id='itest-api-details-bushiness-plans-head' variant='h7'>\n                                                    <FormattedMessage\n                                                        id='solace.application.topics.subscribe.empty'\n                                                        defaultMessage='No Subscribe Topics to Display.'\n                                                    />\n                                                </Typography>\n                                            </Box>\n                                        )\n                                    }\n                                </Box>\n                            </Box>\n                        </Grid>\n                    </Grid>\n                </div>\n            )}\n        </>\n    );\n}\n\nSolaceTopicsInfo.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default SolaceTopicsInfo;\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState, useContext } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Typography from '@material-ui/core/Typography';\nimport { Link as MUILink } from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport Box from '@material-ui/core/Box';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport { useIntl } from 'react-intl';\n\nconst useStyles = makeStyles((theme) => {\n    const mainBack = theme.custom.infoBar.background || '#ffffff';\n    return {\n        root: {\n            paddingTop: theme.spacing(),\n            paddingBottom: theme.spacing(),\n            paddingLeft: theme.spacing(3),\n            background: mainBack,\n            color: theme.palette.getContrastText(mainBack),\n            borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n            '& > * + *': {\n                marginTop: theme.spacing(2),\n            },\n        },\n    };\n});\n\n/**\n * @returns {JSX} breadcrumb\n */\nexport default function Breadcrumb(props) {\n    const { api } = useContext(ApiContext);\n    const { breadcrumbDocument } = props;\n    const classes = useStyles();\n    const history = useHistory();\n    const intl = useIntl();\n    const pages = [\n        {\n            route: 'overview',\n            text: intl.formatMessage({\n                defaultMessage: 'Overview',\n                id: 'Apis.Details.Breadcrumb.overview',\n            }),\n        },\n        {\n            route: 'credentials',\n            text: intl.formatMessage({\n                defaultMessage: 'Subscriptions',\n                id: 'Apis.Details.Breadcrumb.subscriptions',\n            }),\n        },\n        {\n            route: 'test',\n            text: intl.formatMessage({\n                defaultMessage: 'Try Out',\n                id: 'Apis.Details.Breadcrumb.try.out',\n            }),\n        },\n        {\n            route: 'comments',\n            text: intl.formatMessage({\n                defaultMessage: 'Comments',\n                id: 'Apis.Details.Breadcrumb.comments',\n            }),\n        },\n        {\n            route: 'documents',\n            text: intl.formatMessage({\n                defaultMessage: 'Documents',\n                id: 'Apis.Details.Breadcrumb.documents',\n            }),\n        },\n        {\n            route: 'sdk',\n            text: intl.formatMessage({\n                defaultMessage: 'SDKs',\n                id: 'Apis.Details.Breadcrumb.sdks',\n            }),\n        },\n    ];\n\n    const [selected, setSelected] = useState(pages[0]);\n\n    const detectCurrentMenu = (location = null) => {\n        let locationLocal = location;\n        if (!locationLocal) {\n            locationLocal = window.location;\n        }\n        const { pathname } = locationLocal;\n        for (let i = 0; i < pages.length; i++) {\n            const test1 = new RegExp('/' + pages[i].route + '$', 'g');\n            const test2 = new RegExp('/' + pages[i].route + '/', 'g');\n            if (pathname.match(test1) || pathname.match(test2)) {\n                setSelected(pages[i]);\n            }\n        }\n    };\n    useEffect(() => {\n        detectCurrentMenu();\n    }, []);\n    history.listen((location) => {\n        detectCurrentMenu(location);\n    });\n    useEffect(() => {\n        detectCurrentMenu();\n    }, [breadcrumbDocument]);\n    return (\n        <div className={classes.root}>\n            <Box display='flex' flexDirection='row' alignItems='center'>\n                <Typography color='textPrimary' component='h1' variant='h6'>{selected.text}</Typography>\n                <VerticalDivider height={15} />\n                <Breadcrumbs separator={<NavigateNextIcon fontSize='small' />} aria-label='breadcrumb'>\n                    <MUILink color='textPrimary' to={'/apis/' + api.id + '/overview'} component={Link}>\n                        {api.name}\n                    </MUILink>\n                    { (selected.route === 'documents' && document) && (\n                        <MUILink color='textPrimary' to={'/apis/' + api.id + '/documents/default'} component={Link}>\n                            {selected.text}\n                        </MUILink>\n                    ) }\n                    { (selected.route === 'documents' && !document) && <Typography color='textPrimary'>{selected.text}</Typography> }\n                    { (selected.route === 'documents' && document) && (\n                        <Typography color='textPrimary' data-testid='breadcrumbDocument'>{breadcrumbDocument}</Typography>\n                    )}\n                    { (selected.route !== 'documents') && <Typography color='textPrimary'>{selected.text}</Typography> }\n                </Breadcrumbs>\n            </Box>\n\n        </div>\n    );\n}\n","import React, { useContext } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { FormattedMessage } from 'react-intl';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport { Box } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst styles = {\n    button: {\n        mt: 2,\n        mr: 1,\n    },\n    wizardButtons: {\n        pl: 2,\n    },\n};\n\nconst ButtonPanel = (props) => {\n    const {\n        currentStep, handleCurrentStep, handleReset, nextActive,\n    } = props;\n    const stepsLength = 5;\n    const { api, updateSubscriptionData } = useContext(ApiContext);\n    const history = useHistory();\n\n    /**\n     * Redirect  to the API console page\n     */\n    const handleTest = () => {\n        history.push(`/apis/${api.id}/test`);\n    };\n\n    /**\n     * Redirect back to credentials page\n     */\n    const handleCancel = () => {\n        updateSubscriptionData(history.push('credentials'));\n    };\n\n    return (\n        <Box display='flex' {...styles.wizardButtons}>\n            {currentStep < stepsLength - 1 && (\n                <Box {...styles.button}>\n                    <Button\n                        onClick={handleCancel}\n                        variant='text'\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Credentials.Wizard.Wizard.Cancel'\n                            defaultMessage='CANCEL'\n                        />\n                    </Button>\n                </Box>\n            )}\n            {currentStep >= stepsLength - 1 && (\n                <Box {...styles.button}>\n                    <Button\n                        onClick={handleTest}\n                        {...styles.button}\n                        variant='outlined'\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Credentials.Wizard.Wizard.test'\n                            defaultMessage='Test'\n                        />\n                    </Button>\n                </Box>\n            )}\n            {currentStep >= stepsLength - 1 && (\n                <Box {...styles.button}>\n                    <Button\n                        variant='outlined'\n                        onClick={handleReset}\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Credentials.Wizard.Wizard.rest'\n                            defaultMessage='Reset'\n                        />\n                    </Button>\n                </Box>\n            )}\n            <Box {...styles.button}>\n                <Button\n                    variant='contained'\n                    color='primary'\n                    onClick={handleCurrentStep}\n                    disabled={!nextActive}\n                    id={'wizard-next-' + currentStep + '-btn'}\n                >\n                    {currentStep === stepsLength - 1\n                        ? (\n                            <FormattedMessage\n                                id='Apis.Details.Credentials.Wizard.Wizard.finish'\n                                defaultMessage='Finish'\n                            />\n                        )\n                        : (\n                            <FormattedMessage\n                                id='Apis.Details.Credentials.Wizard.Wizard.next'\n                                defaultMessage='Next'\n                            />\n                        )}\n                </Button>\n            </Box>\n        </Box>\n    );\n};\n\nButtonPanel.defaultProps = {\n    nextActive: true,\n};\n\nButtonPanel.propTypes = {\n    currentStep: PropTypes.func.isRequired,\n    handleCurrentStep: PropTypes.func.isRequired,\n    handleReset: PropTypes.func.isRequired,\n    nextActive: PropTypes.bool,\n};\n\nexport default ButtonPanel;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport ApplicationCreateForm from 'AppComponents/Shared/AppsAndKeys/ApplicationCreateForm';\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport cloneDeep from 'lodash.clonedeep';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport ButtonPanel from './ButtonPanel';\n\nconst useStyles = makeStyles((theme) => ({\n    appCreateFormWrapper: {\n        paddingLeft: theme.spacing(2),\n    },\n    warningIcon: {\n        color: '#ff9a00',\n        fontSize: 43,\n        marginRight: 10,\n    },\n}));\n\nconst createAppStep = (props) => {\n    const APPLICATION_STATES = {\n        CREATED: 'CREATED',\n        APPROVED: 'APPROVED',\n        REJECTED: 'REJECTED',\n    };\n    const [throttlingPolicyList, setThrottlingPolicyList] = useState([]);\n    const [applicationRequest, setApplicationRequest] = useState({\n        name: '',\n        throttlingPolicy: '',\n        description: '',\n        tokenType: 'JWT',\n        groups: null,\n        attributes: {},\n    });\n    const [isNameValid, setIsNameValid] = useState(true);\n    const [allAppAttributes, setAllAppAttributes] = useState(null);\n    const [hasValidKM, setHasValidKM] = useState(null);\n    const {\n        currentStep, setCreatedApp, incrementStep, intl, setStepStatus, stepStatuses,\n    } = props;\n    const { api: apiObject } = useContext(ApiContext);\n\n    const validateName = (value) => {\n        if (!value || value.trim() === '') {\n            setIsNameValid({ isNameValid: false });\n            return Promise.reject(new Error(intl.formatMessage({\n                defaultMessage: 'Application name is required',\n                id: 'Apis.Details.Credentials.Wizard.CreateAppStep.application.name.is.required',\n            })));\n        }\n        setIsNameValid({ isNameValid: true });\n        return Promise.resolve(true);\n    };\n\n    /**\n     * @param {object} name application attribute name\n     * @returns {void}\n     * @memberof ApplicationFormHandler\n     */\n    const isRequiredAttribute = (name) => {\n        if (allAppAttributes) {\n            for (let i = 0; i < allAppAttributes.length; i++) {\n                if (allAppAttributes[i].attribute === name) {\n                    return allAppAttributes[i].required === 'true';\n                }\n            }\n        }\n        return false;\n    };\n\n    /**\n     * @param {object} name application attribute name\n     * @returns {Object} attribute value\n     * @memberof ApplicationFormHandler\n     */\n    const getAttributeValue = (name) => {\n        return applicationRequest.attributes[name];\n    };\n\n    const createApplication = () => {\n        const api = new API();\n        if (!applicationRequest.name || applicationRequest.name.trim() === '') {\n            Alert.error(intl.formatMessage({\n                defaultMessage: 'Application name is required',\n                id: 'Apis.Details.Credentials.Wizard.CreateAppStep.application.name.is.required',\n            }));\n            return;\n        }\n        api.createApplication(applicationRequest)\n            .then((response) => {\n                const data = response.body;\n                if (data.status === APPLICATION_STATES.APPROVED) {\n                    const appCreated = { value: data.applicationId, label: data.name };\n                    console.log('Application created successfully.');\n                    setCreatedApp(appCreated);\n                    incrementStep();\n                    setStepStatus(stepStatuses.PROCEED);\n                } else {\n                    setStepStatus(stepStatuses.BLOCKED);\n                }\n            })\n            .catch((error) => {\n                const { response } = error;\n                if (response && response.body) {\n                    const message = response.body.description || intl.formatMessage({\n                        defaultMessage: 'Error while creating the application',\n                        id: 'Apis.Details.Credentials.Wizard.CreateAppStep.error.while.creating.the.application',\n                    });\n                    Alert.error(message);\n                } else {\n                    Alert.error(error.message);\n                }\n                console.error('Error while creating the application');\n            });\n    };\n\n    /**\n     * @param {object} name application attribute name\n     * @returns {void}\n     * @memberof ApplicationFormHandler\n     */\n    const handleAttributesChange = (name) => (event) => {\n        const newApplicationRequest = cloneDeep(applicationRequest);\n        newApplicationRequest.attributes[name] = event.target.value;\n        setApplicationRequest(newApplicationRequest);\n    };\n\n    /**\n     * add a new group function\n     * @param {*} chip newly added group\n     * @param {*} appGroups already existing groups\n     */\n    const handleAddChip = (chip, appGroups) => {\n        const newRequest = { ...applicationRequest };\n        let values = appGroups || [];\n        values = values.slice();\n        values.push(chip);\n        newRequest.groups = values;\n        setApplicationRequest(newRequest);\n    };\n\n    /**\n     * remove a group from already existing groups function\n     * @param {*} chip selected group to be removed\n     * @param {*} index selected group index to be removed\n     * @param {*} appGroups already existing groups\n     */\n    const handleDeleteChip = (chip, index, appGroups) => {\n        const newRequest = { ...applicationRequest };\n        let values = appGroups || [];\n        values = values.filter((v) => v !== chip);\n        newRequest.groups = values;\n        setApplicationRequest(newRequest);\n    };\n\n    useEffect(() => {\n        // Get all the tiers to populate the drop down.\n        const api = new API();\n        const promiseTiers = api.getAllTiers('application');\n        const promisedAttributes = api.getAllApplicationAttributes();\n        const promisedKeyManagers = api.getKeyManagers();\n\n        Promise.all([promiseTiers, promisedAttributes, promisedKeyManagers])\n            .then((response) => {\n                const [tierResponse, allAttributes, keyManagers] = response;\n                const throttlingPolicyListLocal = tierResponse.body.list.map((item) => item.name);\n                const newRequest = { ...applicationRequest };\n                if (throttlingPolicyListLocal.length > 0) {\n                    [newRequest.throttlingPolicy] = throttlingPolicyListLocal;\n                }\n                const allAppAttr = [];\n                allAttributes.body.list.map((item) => allAppAttr.push(item));\n                if (allAttributes.length > 0) {\n                    newRequest.attributes = allAppAttr.filter((item) => !item.hidden);\n                }\n                // Selecting the resident key manager\n                const responseKeyManagerList = [];\n                keyManagers.body.list.map((item) => responseKeyManagerList.push(item));\n\n                let hasValidKMInner;\n                if (responseKeyManagerList.length > 0) {\n                    const responseKeyManagerListDefault = responseKeyManagerList.filter(\n                        (x) => x.name === 'Resident Key Manager' && x.enabled,\n                    );\n                    hasValidKMInner = responseKeyManagerListDefault.length !== 0;\n                }\n                setHasValidKM(hasValidKMInner);\n                setApplicationRequest(newRequest);\n                setThrottlingPolicyList(throttlingPolicyListLocal);\n                setAllAppAttributes(allAppAttr);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Credentials.Wizard.CreateAppStep.error.404',\n                        defaultMessage: 'Resource not found',\n                    }));\n                }\n            });\n    }, []);\n\n    const classes = useStyles();\n    if (!hasValidKM) {\n        return (\n            <Box mb={1} ml={4}>\n                <InlineMessage type='warn'>\n                    <FormattedMessage\n                        id='Apis.Details.Credentials.Wizard.CreateAppStep.default.km.msg'\n                        defaultMessage={'Wizard is only accessible via the Resident Key Manager.'\n                                + 'But the Resident Key Manager is disabled at the moment.'}\n                    />\n                </InlineMessage>\n                <Box mt={2}>\n                    <Link to={`/apis/${apiObject.id}/credentials`}>\n                        <Button variant='contained'>\n                            <FormattedMessage\n                                id='Apis.Details.Credentials.Wizard.CreateAppStep.cancel'\n                                defaultMessage='Cancel'\n                            />\n                        </Button>\n                    </Link>\n                </Box>\n            </Box>\n        );\n    }\n\n    return (\n        <div className={classes.appCreateFormWrapper}>\n            <Box px={2} display='flex' justifyContent='flex-start'>\n                <Grid item xs={10} md={6}>\n                    <ApplicationCreateForm\n                        throttlingPolicyList={throttlingPolicyList}\n                        applicationRequest={applicationRequest}\n                        updateApplicationRequest={setApplicationRequest}\n                        validateName={validateName}\n                        isNameValid={isNameValid}\n                        allAppAttributes={allAppAttributes}\n                        handleAttributesChange={handleAttributesChange}\n                        isRequiredAttribute={isRequiredAttribute}\n                        getAttributeValue={getAttributeValue}\n                        handleDeleteChip={handleDeleteChip}\n                        handleAddChip={handleAddChip}\n                    />\n                </Grid>\n            </Box>\n            <ButtonPanel\n                classes={classes}\n                currentStep={currentStep}\n                handleCurrentStep={createApplication}\n            />\n        </div>\n    );\n};\n\nexport default injectIntl(createAppStep);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport SubscribeToApi from 'AppComponents/Shared/AppsAndKeys/SubscribeToApi';\nimport Alert from 'AppComponents/Shared/Alert';\nimport API from 'AppData/api';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport { injectIntl } from 'react-intl';\nimport ButtonPanel from './ButtonPanel';\n\nconst subscribeToAppStep = (props) => {\n    const SUBSCRIPTION_STATES = {\n        ON_HOLD: 'ON_HOLD',\n        UNBLOCKED: 'UNBLOCKED',\n        REJECTED: 'REJECTED',\n    };\n    const [subscriptionRequest, setApplicationRequest] = useState({\n        applicationId: '',\n        apiId: '',\n        throttlingPolicy: '',\n    });\n    const { api: apiObject } = useContext(ApiContext);\n    const [newApp, setNewApp] = useState(null);\n    const [throttlingPolicyList] = useState(apiObject.tiers);\n    const {\n        currentStep, createdApp, incrementStep, intl, setStepStatus,\n        stepStatuses, classes,\n    } = props;\n    const subscribeToApplication = () => {\n        const api = new API();\n        api.subscribe(\n            subscriptionRequest.apiId, subscriptionRequest.applicationId,\n            subscriptionRequest.throttlingPolicy,\n        )\n            .then((response) => {\n                if (response.body.status === SUBSCRIPTION_STATES.UNBLOCKED) {\n                    console.log('Subscription created successfully with ID : ' + response.body.subscriptionId);\n                    Alert.info(intl.formatMessage({\n                        defaultMessage: 'Subscribed successfully',\n                        id: 'Apis.Details.Credentials.Wizard.SubscribeToAppStep.subscribed.successfully',\n                    }));\n                    incrementStep();\n                    setStepStatus(stepStatuses.PROCEED);\n                } else {\n                    setStepStatus(stepStatuses.BLOCKED);\n                }\n            })\n            .catch((error) => {\n                console.log('Error while creating the subscription.');\n                console.error(error);\n            });\n    };\n\n    useEffect(() => {\n        const newSubscriptionRequest = { ...subscriptionRequest, apiId: apiObject.id };\n        if (throttlingPolicyList) {\n            const [tierData] = throttlingPolicyList;\n            newSubscriptionRequest.throttlingPolicy = tierData.tierName;\n        }\n        if (createdApp) {\n            newSubscriptionRequest.applicationId = createdApp.value;\n        }\n        setApplicationRequest(newSubscriptionRequest);\n        setNewApp(createdApp);\n    }, [createdApp]);\n\n    return (\n        <>\n            <SubscribeToApi\n                throttlingPolicyList={throttlingPolicyList}\n                applicationsAvailable={[newApp]}\n                subscriptionRequest={subscriptionRequest}\n                updateSubscriptionRequest={setApplicationRequest}\n            />\n            <ButtonPanel\n                classes={classes}\n                currentStep={currentStep}\n                handleCurrentStep={subscribeToApplication}\n            />\n        </>\n    );\n};\n\nexport default injectIntl(subscribeToAppStep);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Application from 'AppData/Application';\nimport API from 'AppData/api';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Settings from 'Settings';\nimport ButtonPanel from './ButtonPanel';\n\nconst useStyles = makeStyles((theme) => ({\n    keyConfigWrapper: {\n        paddingLeft: theme.spacing(4),\n        flexDirection: 'column',\n    },\n    radioWrapper: {\n        flexDirection: 'row',\n    },\n    paper: {\n        background: 'none',\n        marginBottom: theme.spacing(2),\n        marginTop: theme.spacing(2),\n    },\n    subTitle: {\n        fontWeight: 400,\n    },\n    tabPanel: {\n        '& .MuiBox-root': {\n            padding: 0,\n        },\n    },\n    hr: {\n        border: 'solid 1px #efefef',\n    },\n    muiFormGroupRoot: {\n        flexDirection: 'row',\n    },\n    table: {\n        minWidth: '100%',\n        '& td, & th': {\n            padding: theme.spacing(),\n        },\n    },\n    leftCol: {\n        width: 200,\n    },\n    iconAligner: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n    },\n}));\n\nfunction TabPanel(props) {\n    const {\n        children, value, index, ...other\n    } = props;\n\n    return (\n        <div\n            role='tabpanel'\n            hidden={value !== index}\n            id={`nav-tabpanel-${index}`}\n            aria-labelledby={`nav-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <>{children}</>\n            )}\n        </div>\n    );\n}\nTabPanel.defaultProps = {\n    children: <div />,\n};\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n};\n\nconst generateKeysStep = (props) => {\n    const intl = useIntl();\n\n    const keyStates = {\n        COMPLETED: 'COMPLETED',\n        APPROVED: 'APPROVED',\n        CREATED: 'CREATED',\n        REJECTED: 'REJECTED',\n    };\n    const [nextActive, setNextActive] = useState(true);\n    const [keyManager, setKeyManager] = useState(null);\n    const selectedTab = 'Resident Key Manager';\n\n    const [keyRequest, setKeyRequest] = useState({\n        keyType: 'SANDBOX',\n        supportedGrantTypes: [],\n        callbackUrl: '',\n        additionalProperties: {},\n        keyManager: '',\n    });\n\n    const {\n        currentStep, createdApp, incrementStep, setCreatedKeyType,\n        setStepStatus, stepStatuses, setCreatedSelectedTab,\n    } = props;\n\n    useEffect(() => {\n        const api = new API();\n        const promisedKeyManagers = api.getKeyManagers();\n        promisedKeyManagers\n            .then((response) => {\n                const responseKeyManagerList = [];\n                response.body.list.map((item) => responseKeyManagerList.push(item));\n\n                // Selecting a key manager from the list of key managers.\n                let selectedKeyManager;\n                if (responseKeyManagerList.length > 0) {\n                    const responseKeyManagerListDefault = responseKeyManagerList.filter((x) => x.name === 'Resident Key Manager');\n                    selectedKeyManager = responseKeyManagerListDefault.length > 0 ? responseKeyManagerListDefault[0]\n                        : responseKeyManagerList[0];\n                }\n\n                // Filtering Grant Types for Token Exchange\n                const filteredGrantTypes = selectedKeyManager.availableGrantTypes\n                    .filter((k) => (k !== 'urn:ietf:params:oauth:grant-type:token-exchange'));\n                setKeyManager({ ...selectedKeyManager, availableGrantTypes: filteredGrantTypes });\n\n                // Setting key request\n                try {\n                    const newKeyRequest = { ...keyRequest };\n                    newKeyRequest.keyManager = selectedKeyManager.id;\n                    newKeyRequest.supportedGrantTypes = selectedKeyManager.availableGrantTypes;\n                    if (selectedKeyManager.availableGrantTypes.includes('implicit')\n                        || selectedKeyManager.availableGrantTypes.includes('authorization_code')) {\n                        newKeyRequest.callbackUrl = 'http://localhost';\n                    }\n                    if (!selectedKeyManager.availableGrantTypes.includes('client_credentials')) {\n                        setNextActive(false);\n                    }\n                    setKeyRequest(newKeyRequest);\n                } catch (e) {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Credentials.Wizard.GenerateKeysStep.error.keymanager',\n                        defaultMessage: 'Error while selecting the key manager',\n                    }));\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            });\n    }, []);\n\n    const generateKeys = () => {\n        Application.get(createdApp.value).then((application) => {\n            return application.generateKeys(\n                keyRequest.keyType, keyRequest.supportedGrantTypes\n                    .filter((k) => (k !== 'urn:ietf:params:oauth:grant-type:token-exchange')),\n                keyRequest.callbackUrl,\n                keyRequest.additionalProperties, keyRequest.keyManager,\n            );\n        }).then((response) => {\n            if (response.keyState === keyStates.CREATED || response.keyState === keyStates.REJECTED) {\n                setStepStatus(stepStatuses.BLOCKED);\n            } else {\n                incrementStep();\n                setCreatedKeyType(keyRequest.keyType);\n                setCreatedSelectedTab(selectedTab);\n                setStepStatus(stepStatuses.PROCEED);\n                console.log('Keys generated successfully with ID : ' + response);\n            }\n        }).catch((error) => {\n            if (process.env.NODE_ENV !== 'production') {\n                console.log(error);\n            }\n            const { status } = error;\n            if (status === 404) {\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Credentials.Wizard.GenerateKeysStep.error.404',\n                    defaultMessage: 'Resource not found.',\n                }));\n            }\n        });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <Box component='div' marginLeft={4}>\n                <Grid container spacing={2}>\n                    {keyManager && (\n                        <>\n                            <Grid item xs={12} md={12} lg={3}>\n                                <Typography color='inherit' variant='subtitle2' component='div'>\n                                    <FormattedMessage\n                                        defaultMessage='Key Configuration'\n                                        id='Apis.Details.Credentials.Wizard.GenerateKeysStep.key.configuration'\n                                    />\n                                </Typography>\n                                <Typography color='inherit' variant='caption' component='p'>\n                                    <FormHelperText>\n                                        <FormattedMessage\n                                            defaultMessage={'These configurations are set for the purpose of the wizard.'\n                                                + 'You have more control over them when you go to the application view. '}\n                                            id='Apis.Details.Credentials.Wizard.GenerateKeysStep.key.configuration.help'\n                                        />\n                                    </FormHelperText>\n\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={12} md={12} lg={9}>\n                                <Table className={classes.table}>\n                                    <TableBody>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Credentials.Wizard.GenerateKeysStep.config.km.name'\n                                                    defaultMessage='Key Manager'\n                                                />\n                                            </TableCell>\n                                            <TableCell>\n                                                <div>{keyManager.displayName || keyManager.name}</div>\n                                                <Typography variant='caption' component='div'>{keyManager.description}</Typography>\n                                            </TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Credentials.Wizard.GenerateKeysStep.list.environment'\n                                                    defaultMessage='Environment'\n                                                />\n                                            </TableCell>\n                                            <TableCell>Sandbox</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Credentials.Wizard.GenerateKeysStep.list.tokenEndpoint'\n                                                    defaultMessage='Token Endpoint'\n                                                />\n                                            </TableCell>\n                                            <TableCell>{keyManager.tokenEndpoint}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Credentials.Wizard.GenerateKeysStep.list.revokeEndpoint'\n                                                    defaultMessage='Revoke Endpoint'\n                                                />\n                                            </TableCell>\n                                            <TableCell>{keyManager.revokeEndpoint}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Credentials.Wizard.GenerateKeysStep.list.userInfoEndpoint'\n                                                    defaultMessage='User Info Endpoint'\n                                                />\n                                            </TableCell>\n                                            <TableCell>{keyManager.userInfoEndpoint}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Credentials.Wizard.GenerateKeysStep.list.grantTypes'\n                                                    defaultMessage='Grant Types'\n                                                />\n                                            </TableCell>\n                                            <TableCell>\n                                                {keyManager.availableGrantTypes.map((gt) => (\n                                                    <span>\n                                                        {Settings.grantTypes[gt] || gt}\n                                                        ,\n                                                        {' '}\n                                                    </span>\n                                                ))}\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableBody>\n                                </Table>\n                            </Grid>\n                        </>\n                    )}\n                </Grid>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <Box component='span' m={1}>\n                            <ButtonPanel\n                                classes={classes}\n                                currentStep={currentStep}\n                                handleCurrentStep={generateKeys}\n                                nextActive={nextActive}\n                            />\n                        </Box>\n\n                    </Grid>\n                </Grid>\n            </Box>\n        </>\n    );\n};\n\nexport default generateKeysStep;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport Tokens from 'AppComponents/Shared/AppsAndKeys/Tokens';\nimport Application from 'AppData/Application';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { defineMessages, useIntl } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport Alert from 'AppComponents/Shared/Alert';\nimport ButtonPanel from './ButtonPanel';\n\nconst useStyles = makeStyles((theme) => ({\n    tokenWrapper: {\n        paddingLeft: theme.spacing(3),\n        paddingRight: theme.spacing(7),\n    },\n    title: {\n        paddingLeft: theme.spacing(2),\n    },\n}));\n\nconst generateAccessTokenStep = (props) => {\n    const intl = useIntl();\n    const [keyType, setKeyType] = useState('PRODUCTION');\n    const [selectedTab, setSelectedTab] = useState('Resident Key Manager');\n    const [subscriptionScopes, setSubscriptionScopes] = useState([]);\n\n    const [accessTokenRequest, setAccessTokenRequest] = useState({\n        timeout: 3600,\n        scopesSelected: [],\n        keyType: '',\n    });\n    const {\n        currentStep, createdApp, setCreatedToken, incrementStep, createdKeyType, createdSelectedTab,\n    } = props;\n\n    useEffect(() => {\n        const newRequest = { ...accessTokenRequest, keyType: createdKeyType };\n        setKeyType(createdKeyType);\n        setSelectedTab(createdSelectedTab);\n        setAccessTokenRequest(newRequest);\n    }, [createdKeyType, createdSelectedTab]);\n\n    useEffect(() => {\n        Application.get(createdApp.value)\n            .then((application) => {\n                application.getKeys().then(() => {\n                    const subscriptionScopesList = application.subscriptionScopes\n                        .map((scope) => { return scope.key; });\n                    setSubscriptionScopes(subscriptionScopesList);\n                });\n            }).catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Credentials.Wizard.GenerateAccessTokenStep.error.404',\n                        defaultMessage: 'Resource not found',\n                    }));\n                }\n            });\n    }, []);\n\n    const generateAccessToken = () => {\n        setSelectedTab(createdSelectedTab);\n        Application.get(createdApp.value)\n            .then((application) => {\n                return application.generateToken(\n                    selectedTab,\n                    accessTokenRequest.keyType,\n                    accessTokenRequest.timeout,\n                    accessTokenRequest.scopesSelected,\n                );\n            })\n            .then((response) => {\n                console.log('token generated successfully ' + response);\n                setCreatedToken(response);\n                incrementStep();\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Credentials.Wizard.GenerateAccessTokenStep.error.404',\n                        defaultMessage: 'Resource not found',\n                    }));\n                }\n            });\n    };\n    const classes = useStyles();\n    const messages = defineMessages({\n        dataInfo: {\n            id: 'Apis.Details.Credentials.Wizard.GenerateAccessTokenStep',\n            defaultMessage: 'Generate Access Token for {keyType} environment',\n        },\n    });\n\n    return (\n        <>\n            <div className={classes.tokenWrapper}>\n                <Typography variant='subtitle1' component='div' className={classes.title}>\n                    {intl.formatMessage(messages.dataInfo, { keyType })}\n                </Typography>\n                <Tokens\n                    updateAccessTokenRequest={setAccessTokenRequest}\n                    accessTokenRequest={accessTokenRequest}\n                    subscriptionScopes={subscriptionScopes}\n                />\n                <ButtonPanel\n                    classes={classes}\n                    currentStep={currentStep}\n                    handleCurrentStep={generateAccessToken}\n                />\n            </div>\n        </>\n    );\n};\n\nexport default generateAccessTokenStep;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext } from 'react';\nimport ViewToken from 'AppComponents/Shared/AppsAndKeys/ViewToken';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport { Box } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ButtonPanel from './ButtonPanel';\n\nconst useStyles = makeStyles((theme) => ({\n    tokenWrapper: {\n        paddingLeft: theme.spacing(2),\n    },\n}));\n\nconst copyAccessTokenStep = (props) => {\n    const {\n        currentStep, createdToken, handleReset,\n    } = props;\n    const history = useHistory();\n    const { api, updateSubscriptionData } = useContext(ApiContext);\n    const completeStep = () => {\n        updateSubscriptionData(history.push(`/apis/${api.id}/credentials`));\n    };\n    const classes = useStyles();\n\n    return (\n        <div className={classes.tokenWrapper}>\n            <Grid md={10}>\n                <Box my={1} mx={2}>\n                    <ViewToken token={{ ...createdToken, isOauth: true }} />\n                </Box>\n            </Grid>\n            <ButtonPanel\n                classes={classes}\n                currentStep={currentStep}\n                handleCurrentStep={completeStep}\n                handleReset={handleReset}\n            />\n        </div>\n    );\n};\n\nexport default copyAccessTokenStep;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography, Paper, Box } from '@material-ui/core';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { withStyles } from '@material-ui/core/styles';\nimport CreateAppStep from './CreateAppStep';\nimport SubscribeToAppStep from './SubscribeToAppStep';\nimport GenerateKeysStep from './GenerateKeysStep';\nimport GenerateAccessTokenStep from './GenerateAccessTokenStep';\nimport CopyAccessTokenStep from './CopyAccessTokenStep';\n\nconst styles = (theme) => ({\n    paper: {\n        marginLeft: theme.spacing(3),\n    },\n    titleSub: {\n        marginLeft: theme.spacing(3),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n    boxWrapper: {\n        '& h5, & label, & td, & li, & div, & input, & p.MuiFormHelperText-root': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        },\n        '& .MuiButton-containedPrimary span.MuiButton-label': {\n            color: theme.palette.getContrastText(theme.palette.primary.main),\n        },\n    },\n\n});\n\nconst stepComponents = [CreateAppStep, SubscribeToAppStep, GenerateKeysStep,\n    GenerateAccessTokenStep, CopyAccessTokenStep];\n\n/**\n * Class used for wizard\n */\nclass Wizard extends Component {\n    /**\n     * @param {*} props properties\n     */\n    constructor(props) {\n        super(props);\n        const { intl } = this.props;\n        this.steps = [\n            intl.formatMessage({\n                defaultMessage: 'Create application',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.create',\n            }),\n            intl.formatMessage({\n                defaultMessage: 'Subscribe to new application',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.subscribe.to.new.application',\n            }),\n            intl.formatMessage({\n                defaultMessage: 'Generate Keys',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.generate.keys',\n            }),\n            intl.formatMessage({\n                defaultMessage: 'Generate Access Token',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.generate.access.token',\n            }),\n            intl.formatMessage({\n                defaultMessage: 'Copy Access Token',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.copy.access.token',\n            }),\n        ];\n        this.stepStatuses = {\n            PROCEED: 'PROCEED',\n            BLOCKED: 'BLOCKED',\n        };\n        this.state = {\n            currentStep: 0,\n            createdApp: null,\n            createdToken: null,\n            redirect: false,\n            createdKeyType: '',\n            createdSelectedTab: '',\n            stepStatus: 'PROCEED',\n        };\n    }\n\n    /**\n     * Used to set the status retured after executing each step. Used in workflow\n     * scenario to evaluate wheather we can proceed to next step\n     * @param {*} stepStatus status\n     */\n    setStepStatus = (stepStatus) => {\n        this.setState({ stepStatus });\n    }\n\n    /**\n     * Set the created app from step 1\n     * @param {*} createdApp app created\n     */\n    setCreatedApp = (createdApp) => {\n        this.setState({ createdApp });\n    }\n\n    /**\n     * Set the created token from step 4\n     * @param {*} createdToken token created\n     */\n    setCreatedToken = (createdToken) => {\n        this.setState({ createdToken });\n    }\n\n    /**\n     * Set the created keytype from step 3\n     * @param {*} createdKeyType token created\n     */\n    setCreatedKeyType = (createdKeyType) => {\n        this.setState({ createdKeyType });\n    }\n\n    /**\n     * Set the created selectedTab from step 3\n     * @param {*} selectedTab token created\n     */\n    setCreatedSelectedTab = (createdSelectedTab) => {\n        this.setState({ createdSelectedTab });\n    }\n\n    /**\n     * Increment the current step or next step by 1\n     */\n    handleNext = () => {\n        this.setState(({ currentStep }) => {\n            return { currentStep: currentStep + 1 };\n        });\n    }\n\n    /**\n     * Rest the currentStep to 0 and bring wizard back to first step\n     * @memberof Wizard\n     */\n    handleReset = () => {\n        this.setState({\n            currentStep: 0,\n        });\n    };\n\n    /**\n     * @inheritdoc\n     */\n    render() {\n        const { classes } = this.props;\n        const { currentStep, stepStatus } = this.state;\n        const CurrentStepComponent = stepComponents[currentStep];\n        return (\n            <>\n                <Typography variant='h4' component='h2' className={classes.titleSub}>\n                    <FormattedMessage\n                        id={'Apis.Details.Credentials.Credentials'\n                    + '.api.credentials.generate'}\n                        defaultMessage='Subscription &amp; Key Generation Wizard'\n                    />\n                </Typography>\n                <Paper elevation={0} className={classes.paper}>\n                    <Box py={1} mx='auto' display='flex'>\n                        <Grid item xs={12} md={12}>\n                            <Stepper activeStep={currentStep}>\n                                {this.steps.map((label) => {\n                                    return (\n                                        <Step key={label}>\n                                            <StepLabel>{label}</StepLabel>\n                                        </Step>\n                                    );\n                                })}\n                            </Stepper>\n                        </Grid>\n                    </Box>\n                    <Box py={1} mx='auto' display='block' className={classes.boxWrapper}>\n                        {stepStatus === this.stepStatuses.PROCEED && (\n                            <>\n                                <CurrentStepComponent\n                                    {...this.state}\n                                    incrementStep={this.handleNext}\n                                    setStepStatus={this.setStepStatus}\n                                    stepStatuses={this.stepStatuses}\n                                    classes={classes}\n                                    setCreatedApp={this.setCreatedApp}\n                                    setCreatedKeyType={this.setCreatedKeyType}\n                                    setCreatedSelectedTab={this.setCreatedSelectedTab}\n                                    setCreatedToken={this.setCreatedToken}\n                                    handleReset={this.handleReset}\n                                />\n                            </>\n                        )}\n                    </Box>\n                    <Box py={1} mb={1} mx='auto' display='flex'>\n                        {stepStatus === this.stepStatuses.BLOCKED && (\n                            <Box pt={2} px={3} display='flex'>\n                                <Typography variant='h5' component='label'>\n                                    <FormattedMessage\n                                        id={'Apis.Details.Credentials.Wizard.Wizard.approval.request.'\n                                                + 'for.this.step.has'}\n                                        defaultMessage='A request to register this step has been sent.'\n                                    />\n                                </Typography>\n                            </Box>\n                        )}\n                    </Box>\n                </Paper>\n            </>\n        );\n    }\n}\n\nWizard.propTypes = {\n    classes: PropTypes.shape({\n        appBar: PropTypes.string,\n        toolbar: PropTypes.string,\n        subscribeTitle: PropTypes.string,\n        plainContent: PropTypes.string,\n        root: PropTypes.string,\n        instructions: PropTypes.string,\n        button: PropTypes.string,\n        wizardContent: PropTypes.string,\n    }).isRequired,\n    intl: PropTypes.func.isRequired,\n    throttlingPolicyList: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(Wizard));\n","/* eslint-disable react/no-unused-state */\n/* eslint-disable react/jsx-props-no-spreading */\n/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { lazy, Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport {\n    Route, Switch, Redirect, Link, withRouter,\n} from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Api from 'AppData/api';\nimport AuthManager from 'AppData/AuthManager';\nimport withSettings from 'AppComponents/Shared/withSettingsContext';\nimport SolaceTopicsInfo from 'AppComponents/Apis/Details/SolaceApi/SolaceTopicsInfo';\nimport Alert from 'AppComponents/Shared/Alert';\nimport classNames from 'classnames';\nimport { Helmet } from 'react-helmet';\nimport { app } from 'Settings';\nimport CONSTANTS from 'AppData/Constants';\nimport CustomIcon from '../../Shared/CustomIcon';\nimport LeftMenuItem from '../../Shared/LeftMenuItem';\nimport { ResourceNotFound } from '../../Base/Errors/index';\nimport Breadcrumb from './Breadcrumb';\nimport { ApiContext } from './ApiContext';\nimport Progress from '../../Shared/Progress';\nimport Wizard from './Credentials/Wizard/Wizard';\nimport User from '../../../data/User';\n\nconst ApiConsole = lazy(() => import('./ApiConsole/ApiConsole' /* webpackChunkName: \"APIConsole\" */));\nconst GraphQLConsole = lazy(() => import('./GraphQLConsole/GraphQLConsole' /* webpackChunkName: \"GraphQLConsole\" */));\nconst AsyncApiConsole = lazy(() => import('./AsyncApiConsole/AsyncApiConsole'));\nconst Overview = lazy(() => import('./Overview' /* webpackChunkName: \"APIOverview\" */));\nconst Documents = lazy(() => import('./Documents/Documents' /* webpackChunkName: \"APIDocuments\" */));\nconst Credentials = lazy(() => import('./Credentials/Credentials' /* webpackChunkName: \"APICredentials\" */));\nconst Comments = lazy(() => import('./Comments/Comments' /* webpackChunkName: \"APIComments\" */));\nconst Sdk = lazy(() => import('./Sdk' /* webpackChunkName: \"APISdk\" */));\nconst AsyncApiDefinition = lazy(() => import('./Definitions/AsyncApi/AsyncApiDefinitionUI'));\n\nconst LoadableSwitch = withRouter((props) => {\n    const { match, api, setbreadcrumbDocument } = props;\n    const { apiUuid } = match.params;\n    const path = '/apis/';\n    const redirectURL = path + apiUuid + '/overview';\n\n    let tryoutRoute;\n    if (api.type === 'GRAPHQL') {\n        tryoutRoute = <Route path='/apis/:apiUuid/test' component={GraphQLConsole} />;\n    } else if (api.type === CONSTANTS.API_TYPES.WS || api.type === CONSTANTS.API_TYPES.WEBSUB\n        || api.type === CONSTANTS.API_TYPES.SSE || api.type === CONSTANTS.API_TYPES.ASYNC) {\n        tryoutRoute = <Route path='/apis/:apiUuid/test' component={AsyncApiConsole} />;\n    } else {\n        tryoutRoute = <Route path='/apis/:apiUuid/test' component={ApiConsole} />;\n    }\n\n    return (\n        <Suspense fallback={<Progress />}>\n            <Switch>\n                <Redirect exact from='/apis/:apiUuid' to={redirectURL} />\n                <Route path='/apis/:apiUuid/overview' render={() => <Overview {...props} />} />\n                <Route\n                    path='/apis/:apiUuid/documents'\n                    render={() => <Documents {...props} setbreadcrumbDocument={setbreadcrumbDocument} />}\n                />\n                <Route path='/apis/:apiUuid/definition' component={AsyncApiDefinition} />\n                <Route path='/apis/:apiUuid/solaceTopicsInfo' component={SolaceTopicsInfo} />\n                <Route exact path='/apis/:apiUuid/credentials/wizard' component={Wizard} />\n                <Route path='/apis/:apiUuid/comments' component={Comments} />\n                <Route path='/apis/:apiUuid/credentials' component={Credentials} />\n                {tryoutRoute}\n                <Route path='/apis/:apiUuid/sdk' component={Sdk} />\n                <Route component={ResourceNotFound} />\n            </Switch>\n        </Suspense>\n    );\n});\n\n/**\n *\n * @returns style object\n * @param {*} theme\n */\nconst styles = (theme) => {\n    const {\n        custom: {\n            leftMenu: { width, position },\n        },\n    } = theme;\n    const shiftToLeft = position === 'vertical-left' ? width : 0;\n    const shiftToRight = position === 'vertical-right' ? width : 0;\n    const shiftToLeftMinView = position === 'vertical-left' ? 45 : 0;\n    const shiftToRightMinView = position === 'vertical-right' ? 45 : 0;\n    const leftMenuPaddingLeft = position === 'horizontal' ? theme.spacing(3) : 0;\n\n    return {\n        leftMenu: {\n            backgroundColor: theme.custom.leftMenu.background,\n            backgroundImage: `url(${app.context}${theme.custom.leftMenu.backgroundImage})`,\n            textAlign: 'left',\n            fontFamily: theme.typography.fontFamily,\n            position: 'absolute',\n            bottom: 0,\n            paddingLeft: leftMenuPaddingLeft,\n        },\n        leftMenuHorizontal: {\n            top: theme.custom.infoBar.height,\n            width: '100%',\n            overflowX: 'auto',\n            height: 60,\n            display: 'flex',\n            left: 0,\n        },\n        leftMenuVerticalLeft: {\n            width: theme.custom.leftMenu.width,\n            [theme.breakpoints.down('sm')]: {\n                width: 50,\n            },\n            top: 0,\n            left: 0,\n            overflowY: 'auto',\n        },\n        leftMenuVerticalLeftMinView: {\n            width: 45,\n            top: 0,\n            left: 0,\n            overflowY: 'auto',\n        },\n        leftMenuVerticalRight: {\n            width: theme.custom.leftMenu.width,\n            top: 0,\n            right: 0,\n            overflowY: 'auto',\n        },\n        leftLInkMain: {\n            borderRight: 'solid 1px ' + theme.custom.leftMenu.background,\n            cursor: 'pointer',\n            background: theme.custom.leftMenu.rootBackground,\n            color: theme.palette.getContrastText(theme.custom.leftMenu.rootBackground),\n            alignItems: 'center',\n            justifyContent: 'center',\n            display: 'flex',\n            height: theme.custom.infoBar.height,\n            textDecoration: 'none',\n        },\n        leftLInkMainText: {\n            fontSize: 18,\n            color: theme.palette.grey[500],\n            textDecoration: 'none',\n            paddingLeft: theme.spacing(2),\n        },\n        detailsContent: {\n            display: 'flex',\n            flex: 1,\n        },\n        content: {\n            display: 'flex',\n            flex: 1,\n            flexGrow: 1,\n            flexDirection: 'column',\n            marginLeft: shiftToLeft,\n            marginRight: shiftToRight,\n            [theme.breakpoints.down('sm')]: {\n                marginLeft: shiftToLeft !== 0 && 50,\n                marginRight: shiftToRight !== 0 && 50,\n            },\n            paddingBottom: theme.spacing(3),\n            overflowX: 'hidden',\n        },\n        contentExpandView: {\n            display: 'flex',\n            flex: 1,\n            flexGrow: 1,\n            flexDirection: 'column',\n            marginLeft: shiftToLeftMinView,\n            marginRight: shiftToRightMinView,\n            paddingBottom: theme.spacing(3),\n            overflowX: 'hidden',\n            minHeight: 'calc(100vh - 114px)',\n        },\n        shiftLeft: {\n            marginLeft: 0,\n        },\n        contentLoader: {\n            paddingTop: theme.spacing(3),\n        },\n        contentLoaderRightMenu: {\n            paddingRight: theme.custom.leftMenu.width,\n        },\n    };\n};\n/**\n *\n *\n * @class Details\n * @extends {React.Component}\n */\nclass Details extends React.Component {\n    /**\n     *Creates an instance of Details.\n     * @param {*} props\n     * @memberof Details\n     */\n    constructor(props) {\n        super(props);\n        /**\n         *\n         *\n         * @memberof Details\n         */\n        this.updateSubscriptionData = (callback) => {\n            let existingSubscriptions = null;\n            let promisedApplications = null;\n\n            const restApi = new Api();\n\n            // const subscriptionClient = new Subscription();\n            const promisedAPI = restApi.getAPIById(this.api_uuid);\n\n            promisedAPI\n                .then((api) => {\n                    this.setState({ api: api.body });\n                })\n                .catch((error) => {\n                    const { status, response } = error;\n                    const { setTenantDomain, intl } = this.props;\n\n                    const message = intl.formatMessage({\n                        defaultMessage: 'Invalid tenant domain',\n                        id: 'Apis.Details.index.invalid.tenant.domain',\n                    });\n                    if (response && response.body.code === 901300) {\n                        setTenantDomain('INVALID');\n                        Alert.error(message);\n                    }\n                    console.error('Error when getting apis', error);\n                    if (status === 404 || status === 403) {\n                        this.setState({ notFound: true });\n                    }\n                });\n            const user = AuthManager.getUser();\n            if (user === null) {\n                const user1 = new User();\n                this.setState({ open: user1.isSideBarOpen });\n            }\n            if (user != null) {\n                this.setState({ open: user.isSideBarOpen });\n                existingSubscriptions = restApi.getSubscriptions(this.api_uuid, null);\n                const subscriptionLimit = app.subscribeApplicationLimit || 5000;\n                existingSubscriptions = restApi.getSubscriptions(this.api_uuid, null, subscriptionLimit);\n                promisedApplications = restApi.getAllApplications(null, subscriptionLimit);\n\n                Promise.all([existingSubscriptions, promisedApplications])\n                    .then((response) => {\n                        const [subscriptions, applications] = response.map((data) => data.obj);\n\n                        // get the application IDs of existing subscriptions\n                        const subscribedApplications = subscriptions.list.map((element) => {\n                            return {\n                                value: element.applicationId,\n                                policy: element.throttlingPolicy,\n                                status: element.status,\n                                subscriptionId: element.subscriptionId,\n                                label: element.applicationInfo.name,\n                            };\n                        });\n\n                        // Removing subscribed applications from all the applications and get\n                        // the available applications to subscribe\n                        const subscribedAppIds = subscribedApplications.map((sub) => sub.value);\n                        const applicationsAvailable = applications.list\n                            .filter((appInner) => !subscribedAppIds.includes(appInner.applicationId) && appInner.status === 'APPROVED')\n                            .map((filteredApp) => {\n                                return {\n                                    value: filteredApp.applicationId,\n                                    label: filteredApp.name,\n                                };\n                            });\n                        this.setState({ subscribedApplications, applicationsAvailable }, () => {\n                            if (callback) {\n                                callback();\n                            }\n                        });\n                    })\n                    .catch((error) => {\n                        if (process.env.NODE_ENV !== 'production') {\n                            console.log(error);\n                        }\n                        const { status } = error;\n                        if (status === 404) {\n                            this.setState({ notFound: true });\n                        }\n                    });\n            }\n        };\n\n        this.state = {\n            active: 'overview',\n            overviewHiden: false,\n            updateSubscriptionData: this.updateSubscriptionData,\n            api: null,\n            applications: null,\n            subscribedApplications: [],\n            applicationsAvailable: [],\n            item: 1,\n            xo: null,\n            breadcrumbDocument: '',\n        };\n        this.setDetailsAPI = this.setDetailsAPI.bind(this);\n        this.api_uuid = this.props.match.params.apiUuid;\n        this.handleDrawerClose = this.handleDrawerClose.bind(this);\n        this.handleDrawerOpen = this.handleDrawerOpen.bind(this);\n        this.setbreadcrumbDocument = this.setbreadcrumbDocument.bind(this);\n    }\n\n    /**\n     * @memberof Details\n     */\n    componentDidMount() {\n        this.updateSubscriptionData();\n    }\n\n    /**\n     * handle component did update\n     * @param {JSON} prevProps previous props\n     */\n    componentDidUpdate(prevProps) {\n        const { match: { params: { apiUuid: prevApiUuid } } } = prevProps;\n        const { match: { params: { apiUuid: newApiUuid } } } = this.props;\n        if (prevApiUuid !== newApiUuid) {\n            this.api_uuid = newApiUuid;\n            this.updateSubscriptionData();\n        }\n    }\n\n    /**\n     * @param {string} breadcrumbDocument\n     * @memberof Details\n     */\n    setbreadcrumbDocument(breadcrumbDocument) {\n        this.setState({ breadcrumbDocument });\n    }\n\n    /**\n     * @param {JSON} api api object\n     * @memberof Details\n     */\n    setDetailsAPI(api) {\n        this.setState({ api });\n    }\n\n    /**\n     * @memberof Details\n     */\n    handleDrawerClose() {\n        this.setState({ open: false });\n        const user = AuthManager.getUser();\n        if (user != null) {\n            user.isSideBarOpen = false;\n            AuthManager.setUser(user);\n        }\n    }\n\n    /**\n     * handle left side drawer open\n     */\n    handleDrawerOpen() {\n        this.setState({ open: true });\n        const user = AuthManager.getUser();\n        if (user !== null) {\n            user.isSideBarOpen = true;\n            AuthManager.setUser(user);\n        }\n    }\n\n    /**\n     * handle lef side drawer open\n     * @param {JSON} api api object\n     * @returns {boolean} is the api async api\n     */\n    isAsyncAPI(api) {\n        return (api\n            && (api.type === CONSTANTS.API_TYPES.WS\n                || api.type === CONSTANTS.API_TYPES.WEBSUB\n                || api.type === CONSTANTS.API_TYPES.SSE\n                || api.type === CONSTANTS.API_TYPES.ASYNC));\n    }\n\n    /**\n     * @returns {JSX} rendered outpu\n     * @memberof Details\n     */\n    render() {\n        const {\n            classes, theme, intl,\n        } = this.props;\n        const user = AuthManager.getUser();\n        const {\n            api, notFound, open, breadcrumbDocument,\n        } = this.state;\n        const {\n            custom: {\n                leftMenu: {\n                    rootIconSize, rootIconTextVisible, rootIconVisible, position,\n                },\n                apiDetailPages: {\n                    showCredentials, showComments, showTryout, showDocuments, showSdks, showAsyncSpecification, showSolaceTopics,\n                },\n                title: {\n                    prefix, sufix,\n                },\n            },\n        } = theme;\n        const globalStyle = 'body{ font-family: ' + theme.typography.fontFamily + '}';\n        const pathPrefix = '/apis/' + this.api_uuid + '/';\n        if (!api && notFound) {\n            return <ResourceNotFound />;\n        }\n        // check for widget=true in the query params. If it's present we render without <Base> component.\n        const pageUrl = new URL(window.location);\n        const isWidget = pageUrl.searchParams.get('widget');\n        const isAsyncApi = this.isAsyncAPI(api);\n\n        return api ? (\n            <ApiContext.Provider value={this.state}>\n                <Helmet>\n                    <title>{`${prefix} ${api.name}${sufix}`}</title>\n                </Helmet>\n                <style>{globalStyle}</style>\n                {!isWidget && (\n                    <nav\n                        role='navigation'\n                        aria-label={intl.formatMessage({\n                            id: 'Apis.Details.index.secondary.navigation',\n                            defaultMessage: 'Secondary Navigation',\n                        })}\n                        className={classNames(\n                            classes.leftMenu,\n                            {\n                                [classes.leftMenuHorizontal]: position === 'horizontal',\n                            },\n                            {\n                                [classes.leftMenuVerticalLeft]: position === 'vertical-left' && open,\n                                [classes.leftMenuVerticalLeftMinView]: position === 'vertical-left' && !open,\n\n                            },\n                            {\n                                [classes.leftMenuVerticalRight]: position === 'vertical-right',\n                            },\n                            'left-menu',\n                        )}\n                    >\n                        {rootIconVisible && (\n                            <Link to='/apis' className={classes.leftLInkMain} aria-label='ALL APIs'>\n                                <CustomIcon width={rootIconSize} height={rootIconSize} icon='api' />\n                                {rootIconTextVisible && (\n                                    <Typography className={classes.leftLInkMainText}>\n                                        <FormattedMessage id='Apis.Details.index.all.apis' defaultMessage='ALL APIs' />\n                                    </Typography>\n                                )}\n                            </Link>\n                        )}\n                        <LeftMenuItem\n                            text={<FormattedMessage id='Apis.Details.index.overview' defaultMessage='Overview' />}\n                            route='overview'\n                            iconText='overview'\n                            to={pathPrefix + 'overview'}\n                            open={open}\n                            id='left-menu-overview'\n                        />\n                        {user && showCredentials && (\n                            <>\n\n                                <LeftMenuItem\n                                    text={(\n                                        <FormattedMessage\n                                            id='Apis.Details.index.subscriptions'\n                                            defaultMessage='Subscriptions'\n                                        />\n                                    )}\n                                    route='credentials'\n                                    iconText='credentials'\n                                    to={pathPrefix + 'credentials'}\n                                    open={open}\n                                    id='left-menu-credentials'\n                                />\n\n                            </>\n                        )}\n                        {showTryout && (api.gatewayVendor === 'wso2'\n                        || (api.type === 'APIPRODUCT' && !api.gatewayVendor)) && (\n                            <LeftMenuItem\n                                text={(\n                                    <FormattedMessage\n                                        id='Apis.Details.index.try.out'\n                                        defaultMessage='Try out'\n                                    />\n                                )}\n                                route='test'\n                                iconText='test'\n                                to={pathPrefix + 'test'}\n                                open={open}\n                                id='left-menu-test'\n                            />\n\n                        )}\n                        {(showSolaceTopics && api.gatewayVendor === 'solace') && (\n                            <LeftMenuItem\n                                text={(\n                                    <FormattedMessage\n                                        id='Apis.Details.index.solaceTopicsInfo'\n                                        defaultMessage='Solace Info'\n                                    />\n                                )}\n                                route='solaceTopicsInfo'\n                                iconText='test'\n                                to={pathPrefix + 'solaceTopicsInfo'}\n                                open={open}\n                                id='left-menu-solace-info'\n                            />\n                        )}\n                        {isAsyncApi && showAsyncSpecification && (\n                            <LeftMenuItem\n                                text={(\n                                    <FormattedMessage\n                                        id='Apis.Details.index.definition'\n                                        defaultMessage='Definition'\n                                    />\n                                )}\n                                route='definition'\n                                iconText='Definition'\n                                to={pathPrefix + 'definition'}\n                                open={open}\n                                id='left-menu-definition'\n                            />\n                        )}\n                        {showComments && (\n\n                            <LeftMenuItem\n                                text={(\n                                    <FormattedMessage\n                                        id='Apis.Details.index.comments'\n                                        defaultMessage='Comments'\n                                    />\n                                )}\n                                route='comments'\n                                iconText='comments'\n                                to={pathPrefix + 'comments'}\n                                open={open}\n                                id='left-menu-comments'\n                            />\n\n                        )}\n                        {showDocuments && (\n\n                            <LeftMenuItem\n                                text={(\n                                    <FormattedMessage\n                                        id='Apis.Details.index.documentation'\n                                        defaultMessage='Documents'\n                                    />\n                                )}\n                                route='documents'\n                                iconText='docs'\n                                to={pathPrefix + 'documents'}\n                                open={open}\n                                id='left-menu-documents'\n                            />\n\n                        )}\n                        {!isAsyncApi && showSdks && (\n\n                            <LeftMenuItem\n                                text={<FormattedMessage id='Apis.Details.index.sdk' defaultMessage='SDKs' />}\n                                route='sdk'\n                                iconText='sdk'\n                                to={pathPrefix + 'sdk'}\n                                open={open}\n                                id='left-menu-sdk'\n                            />\n\n                        )}\n                        {open ? (\n                            <div\n                                onClick={this.handleDrawerClose}\n                                onKeyDown={this.handleDrawerClose}\n                                style={{\n                                    width: 100, paddingLeft: '15px', position: 'absolute', bottom: 0, cursor: 'pointer',\n                                }}\n                            >\n                                <ArrowBackIosIcon fontSize='medium' style={{ color: 'white' }} />\n                            </div>\n                        ) : (\n                            <div\n                                onClick={this.handleDrawerOpen}\n                                onKeyDown={this.handleDrawerOpen}\n                                style={{\n                                    paddingLeft: '15px', position: 'absolute', bottom: 0, cursor: 'pointer',\n                                }}\n                            >\n                                <ArrowForwardIosIcon fontSize='medium' style={{ color: 'white' }} />\n                            </div>\n\n                        )}\n\n                    </nav>\n                )}\n\n                <div\n                    className={classNames(\n                        { [classes.content]: open },\n                        { [classes.contentExpandView]: !open },\n                    )}\n                >\n                    <Breadcrumb\n                        breadcrumbDocument={breadcrumbDocument}\n                    />\n                    <div\n                        className={classNames(\n                            { [classes.contentLoader]: position === 'horizontal' },\n                            { [classes.contentLoaderRightMenu]: position === 'vertical-right' },\n                        )}\n                    >\n                        <LoadableSwitch\n                            api={api}\n                            updateSubscriptionData={this.updateSubscriptionData}\n                            setbreadcrumbDocument={this.setbreadcrumbDocument}\n                        />\n                    </div>\n                </div>\n            </ApiContext.Provider>\n        ) : (\n            <div className='apim-dual-ring' />\n        );\n    }\n}\n\nDetails.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    match: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n\nexport default withSettings(injectIntl(withStyles(styles, { withTheme: true })(Details)));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core';\nimport CommonListing from './Listing/CommonListing';\nimport TagCloudListing from './Listing/TagCloudListing';\nimport Details from './Details/index';\nimport { ResourceNotFound } from '../Base/Errors';\n\n/**\n * Default API Store overview page\n *\n * @returns {React.Component}\n */\nfunction Apis() {\n    return (\n        <Switch>\n            <Route\n                exact\n                path='/api-groups'\n                render={(props) => (\n                    <TagCloudListing {...props} />)}\n            />\n            <Route\n                exact\n                path='/apis'\n                render={(props) => (\n                    <CommonListing {...props} />)}\n            />\n            <Route\n                path='/apis/search'\n                render={(props) => (\n                    <CommonListing {...props} />)}\n            />\n            <Route\n                path='/apis/:apiUuid/'\n                render={(props) => (\n                    <Details {...props} />)}\n            />\n            <Route component={ResourceNotFound} />\n        </Switch>\n    );\n}\n\nexport default withStyles({}, { withTheme: true })(Apis);\n"],"sourceRoot":""}