{"version":3,"sources":["webpack:///./source/src/app/components/Apis/Details/ApiContext.jsx","webpack:///./source/src/app/components/Apis/Listing/StarRatingBar.jsx","webpack:///./source/src/app/data/stringFormatter.js","webpack:///./source/src/app/components/Apis/Listing/Background.jsx","webpack:///./source/src/app/components/Apis/Listing/APICards/ImageGenerator.jsx","webpack:///./source/src/app/components/Apis/Listing/APICards/LetterGenerator.jsx","webpack:///./source/src/app/components/Apis/Listing/APICards/ApiThumbClassic.jsx","webpack:///./source/src/app/components/Apis/Listing/APICards/ImageUtils.js","webpack:///./source/src/app/components/Apis/Listing/APICards/APIThumbPlain.jsx","webpack:///./source/src/app/components/Apis/Listing/ApiThumb.jsx","webpack:///./source/src/app/components/Apis/Details/StarRatingSummary.jsx"],"names":["ApiContext","React","createContext","active","handleMenuSelect","api","applications","subscribedApplications","applicationsAvailable","updateSubscriptionData","StarRatingBar","Component","constructor","props","super","this","state","avgRating","userRating","count","total","showEditing","getApiRating","bind","removeUserRating","doRate","toggleEditRating","componentDidMount","componentDidUpdate","prevProps","ratingUpdate","apiId","setRatingUpdate","user","AuthManager","getUser","Api","getRatingFromUser","then","response","setState","body","pagination","rateIndex","intl","ratingInfo","rating","addRating","catch","error","Alert","formatMessage","defaultMessage","id","finally","removeRatingOfUser","prevState","render","classes","isEditable","showSummary","apiRating","apiRatingNumber","parseFloat","reviewCount","returnCount","position","component","onClick","display","style","cursor","fontSize","color","variant","className","rateThis","ml","mb","onClickAway","map","i","area-label","key","starRate","noStarRate","removeRating","closeRating","name","value","precision","readOnly","iconEmpty","iconFilled","gutterBottom","align","defaultProps","propTypes","PropTypes","shape","isRequired","theme","string","bool","oneOfType","number","func","injectIntl","withStyles","custom","infoBar","starColor","palette","grey","A200","starColorEmpty","getContrastText","background","right","spacing","top","justifyContent","alignItems","padding","borderRadius","marginLeft","lineHeight","width","withTheme","capitalizeFirstLetter","charAt","toUpperCase","slice","upperCaseString","aHexToOpacity","aHex","substring","getColorWithoutAlpha","Background","colorPair","height","thumbnailBoxChild","rects","j","sub","toString","push","fill","fillOpacity","x","y","primeColor","prime","svgImage","aria-hidden","objectFit","ImageGenerator","PureComponent","fixedIcon","category","backgroundIndex","randomBackgroundIndex","IconElement","str","colorPairs","thumbnail","backgrounds","type","document","icon","MaterialIcons","categories","icons","length","randomIconIndex","charCodeAt","iconWrapper","Icon","useStyles","makeStyles","root","thumbIcon","defaultWidth","Math","ceil","square","char","bgColor","colorMap","offset","textShadow","light","dark","letter","charLightColor","toLowerCase","charNumber","parseInt","String","fromCharCode","r","g","b","Utils","hexToRGBHash","rgbToHex","getColorFromLetter","fallbacks","artifact","charLength","ThumbIcon","Avatar","windowURL","window","URL","webkitURL","ApiThumbClassic","defaultApiImage","selectedIcon","imageObj","isHover","imageLoaded","toggleMouseOver","getAPIThumbnail","data","headers","iconJson","JSON","parse","size","url","createObjectURL","componentWillUnmount","revokeObjectURL","getPathPrefix","event","path","isMonetizationEnabled","context","detailsLink","customWidth","customHeight","showInfo","social","showRating","thumbnailTemplates","version","provider","businessInformation","businessOwner","trim","lifeCycleStatus","status","imageWidth","imageHeight","defaultImage","ImageView","src","alt","media","LetterGenerator","iconColor","Card","onMouseOver","onFocus","onMouseOut","onBlur","raised","classNames","card","textblock","monetizationLabel","actionArea","to","CardMedia","area-hidden","app","CardContent","apiDetails","Typography","thumbHeader","handleRedirectToAPIOverview","title","row","thumbBy","thumbInfo","thumbLeft","thumbRight","contextBox","thumbLeftAction","aria-label","ratingWrapper","chipWrapper","transportType","chipWrapper2","Chip","label","undefined","chipWrapper3","gatewayVendor","data-testid","contextType","margin","maxWidth","transition","contentBackgroundColor","contentPictureOverlap","suppressLinkStyles","textDecoration","text","disabled","thumbContent","alignSelf","flex","flexDirection","whiteSpace","overflow","textOverflow","textAlign","marginTop","thumbWrapper","paddingTop","marginRight","deleteIcon","textWrapper","secondary","imageWrapper","imageOverlap","bottom","marginBottom","border","primary","main","getIcon","minWidth","bullet","transform","pos","paddingLeft","caption","imageDisplay","maxHeight","APIThumbPlain","useTheme","imageConf","setImageConf","useState","setIMageObj","setImageLoaded","useEffect","Box","mt","apiType","ApiThumb","ratingSummary"],"mappings":"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","file":"Apis~Landing.44f03df4105c342867a1.bundle.js","sourcesContent":["/* eslint-disable import/prefer-default-export */\n/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\n\nexport const ApiContext = React.createContext({\n    active: 'overview',\n    handleMenuSelect: () => {},\n    api: null,\n    applications: null,\n    subscribedApplications: [],\n    applicationsAvailable: [],\n    updateSubscriptionData: () => {},\n});\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport IconButton from '@material-ui/core/IconButton';\nimport { withStyles } from '@material-ui/core/styles';\nimport Cancel from '@material-ui/icons/Cancel';\nimport Clear from '@material-ui/icons/Clear';\nimport StarRate from '@material-ui/icons/StarRate';\nimport StarIcon from '@material-ui/icons/Star';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Api from 'AppData/api';\nimport AuthManager from 'AppData/AuthManager';\nimport StarRatingSummary from 'AppComponents/Apis/Details/StarRatingSummary';\nimport Rating from '@material-ui/lab/Rating';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nconst styles = (theme) => ({\n    starRate: {\n        fontSize: 30,\n        color: theme.custom.infoBar.starColor,\n    },\n    noStarRate: {\n        fontSize: 30,\n        color: theme.palette.grey.A200,\n    },\n    iconFilled: {\n        color: theme.custom.infoBar.starColor,\n    },\n    iconEmpty: {\n        color: theme.custom.infoBar.starColorEmpty || '#cfcfcf',\n    },\n    removeRating: {\n        fontSize: 20,\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n    },\n    closeRating: {\n        position: 'absolute',\n        right: theme.spacing(-2),\n        top: theme.spacing(-2),\n    },\n    userRating: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        cursor: 'pointer',\n        padding: '5px',\n        background: '#efefef',\n        borderRadius: '3px',\n        position: 'absolute',\n        right: 0,\n        top: '-50px',\n        marginLeft: '125px',\n    },\n    rateThis: {\n        lineHeight: '15px',\n        width: 40,\n    },\n});\n\n/**\n *\n *\n * @class StarRatingBar\n * @extends {React.Component}\n */\nclass StarRatingBar extends React.Component {\n    /**\n     *Creates an instance of RecommendedApiThumb.\n     * @param {JSON} props properties\n     * @memberof StarRatingBar\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            avgRating: 0,\n            userRating: 0,\n            count: 0,\n            total: 0,\n            showEditing: false,\n        };\n        this.getApiRating = this.getApiRating.bind(this);\n        this.removeUserRating = this.removeUserRating.bind(this);\n        this.doRate = this.doRate.bind(this);\n        this.toggleEditRating = this.toggleEditRating.bind(this);\n    }\n\n    /**\n     * Component did mount callback.\n     * @memberof StarRatingBar\n     */\n    componentDidMount() {\n        this.getApiRating();\n    }\n\n    /**\n     * Component did mount callback.\n     * @param {JSON} prevProps previous instance properties\n     * @memberof StarRatingBar\n     */\n    componentDidUpdate(prevProps) {\n        const { ratingUpdate } = this.props;\n        if (ratingUpdate !== prevProps.ratingUpdate) {\n            this.getApiRating();\n        }\n    }\n\n    /**\n     *\n     *\n     * @memberof StarRatingBar\n     */\n    getApiRating() {\n        const { apiId, setRatingUpdate } = this.props;\n        const user = AuthManager.getUser();\n        const api = new Api();\n        // get api rating\n        if (user != null) {\n            const promisedRating = api.getRatingFromUser(apiId, null);\n            promisedRating.then((response) => {\n                this.setState({\n                    avgRating: response.body.avgRating,\n                    userRating: response.body.userRating,\n                    count: response.body.count,\n                    total: response.body.pagination.total,\n                });\n                if (setRatingUpdate) {\n                    setRatingUpdate({\n                        avgRating: response.body.avgRating,\n                        count: response.body.count,\n                        total: response.body.pagination.total,\n                    });\n                }\n            });\n        }\n    }\n\n    /**\n     *\n     *\n     * @param {*} rateIndex\n     * @memberof StarRatingBar\n     */\n    doRate(rateIndex) {\n        const { apiId, intl } = this.props;\n        const api = new Api();\n        const ratingInfo = { rating: rateIndex };\n        const promise = api.addRating(apiId, ratingInfo);\n        promise\n            .then(() => {\n                this.getApiRating();\n            })\n            .catch((error) => {\n                Alert.error(intl.formatMessage({\n                    defaultMessage: 'Error occurred while adding ratings',\n                    id: 'Apis.Listing.StarRatingBar.error.occurred.adding',\n                }));\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            })\n            .finally(() => {\n                this.toggleEditRating();\n            });\n    }\n\n    /**\n     * @memberof StarRatingBar\n     */\n    removeUserRating() {\n        const { apiId, setRatingUpdate, intl } = this.props;\n        const api = new Api();\n        // remove user rating\n        api.removeRatingOfUser(apiId, null)\n            .then(() => {\n                this.getApiRating();\n                setRatingUpdate();\n            })\n            .catch((error) => {\n                Alert.error(intl.formatMessage({\n                    defaultMessage: 'Error occurred while removing ratings',\n                    id: 'Apis.Listing.StarRatingBar.error.occurred',\n                }));\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            })\n            .finally(() => {\n                this.toggleEditRating();\n            });\n    }\n\n    /**\n     * @memberof StarRatingBar\n     */\n    toggleEditRating() {\n        this.setState((prevState) => ({ showEditing: !prevState.showEditing }));\n    }\n\n    /**\n     * @returns {JSX} star rating bar\n     * @memberof StarRatingBar\n     */\n    render() {\n        const {\n            avgRating, userRating, count, total, showEditing,\n        } = this.state;\n        const {\n            classes, isEditable, showSummary, apiRating,\n        } = this.props;\n        const apiRatingNumber = parseFloat(apiRating);\n        return (\n            <>\n                {showSummary ? (\n                    <StarRatingSummary avgRating={avgRating} reviewCount={total} returnCount={count} />\n                ) : (\n                    <>\n                        {isEditable ? (\n                            <Box position='relative'>\n                                <IconButton component='div' onClick={this.toggleEditRating} display='flex' style={{ cursor: 'pointer' }}>\n                                    {(userRating === 0)\n                                        ? (<StarBorderIcon style={{ fontSize: 30 }} />)\n                                        : (<StarIcon style={{ fontSize: 30, color: '#75d5fa' }} />)}\n                                    <Typography variant='body2' className={classes.rateThis}>\n                                        {(userRating === 0) ? (\n                                            <FormattedMessage defaultMessage='Rate This' id='Apis.Listing.StarRatingBar.rate.this' />\n                                        ) : (\n                                            <Box>\n                                                <Box fontSize={22} ml={1} mb={0.5}>{userRating}</Box>\n                                                <Box><FormattedMessage defaultMessage='You' id='Apis.Listing.StarRatingBar.you' /></Box>\n                                            </Box>\n                                        )}\n                                    </Typography>\n                                </IconButton>\n                                {showEditing && (\n                                    <>\n                                        <ClickAwayListener onClickAway={this.toggleEditRating}>\n                                            <div className={classes.userRating}>\n                                                {[1, 2, 3, 4, 5].map((i) => (\n                                                    <IconButton area-label={'Rate ' + i} onClick={() => this.doRate(i)}>\n                                                        <StarRate\n                                                            key={i}\n                                                            className={userRating >= i ? classes.starRate : classes.noStarRate}\n                                                        />\n                                                    </IconButton>\n                                                ))}\n                                                <IconButton area-label='Clear rating' onClick={() => this.removeUserRating()}>\n                                                    <Clear\n                                                        className={classes.removeRating}\n                                                    />\n                                                </IconButton>\n                                                <IconButton\n                                                    className={classes.closeRating}\n                                                    area-label='Close rating popup'\n                                                    onClick={this.toggleEditRating}\n                                                >\n                                                    <Cancel\n                                                        className={classes.removeRating}\n                                                    />\n                                                </IconButton>\n                                            </div>\n                                        </ClickAwayListener>\n                                    </>\n                                )}\n                            </Box>\n                        ) : (\n                            <>\n                                <Rating\n                                    name='half-rating'\n                                    value={apiRatingNumber}\n                                    precision={0.1}\n                                    readOnly\n                                    classes={{ iconEmpty: classes.iconEmpty, iconFilled: classes.iconFilled }}\n                                />\n                                <Typography variant='caption' gutterBottom align='left' component='div'>\n                                    {`${avgRating}/5.0 (${total}`}\n                                    {total === 1 ? (\n                                        <FormattedMessage defaultMessage='user' id='Apis.Listing.StarRatingBar.user' />\n                                    ) : (\n                                        <FormattedMessage defaultMessage='users' id='Apis.Listing.StarRatingBar.users' />\n                                    )}\n                                    {')'}\n                                </Typography>\n                            </>\n                        )}\n                    </>\n                )}\n            </>\n        );\n    }\n}\n\nStarRatingBar.defaultProps = {\n    apiRating: 0,\n    ratingUpdate: 0,\n    setRatingUpdate: () => { },\n};\n\nStarRatingBar.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    apiId: PropTypes.string.isRequired,\n    isEditable: PropTypes.bool.isRequired,\n    showSummary: PropTypes.bool.isRequired,\n    apiRating: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    ratingUpdate: PropTypes.number,\n    setRatingUpdate: PropTypes.func,\n};\n\nexport default injectIntl(withStyles(styles, { withTheme: true })(StarRatingBar));\n","/*\n *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n *  WSO2 Inc. licenses this file to you under the Apache License,\n *  Version 2.0 (the \"License\"); you may not use this file except\n *  in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied. See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n */\n\n/**\n * Capitalize the first letter of a string\n * @param {string} string string to be formatted\n * @return {string} formatted string\n */\nfunction capitalizeFirstLetter(string) {\n    return string && string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n/**\n * Lowercase all letters in a string\n * @param {string} string string to be formatted\n * @return {string} formatted string\n */\nfunction lowerCaseString(string) {\n    return string.toLowerCase();\n}\n\n/**\n * Uppercase all letters in a string\n * @param {string} string string to be formatted\n * @return {string} formatted string\n */\nfunction upperCaseString(string) {\n    return string.toUpperCase();\n}\n\nexport { capitalizeFirstLetter, lowerCaseString, upperCaseString };\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n    svgImage: {\n        cursor: 'pointer',\n        // ⚠️ object-fit is not supported by IE11.\n        objectFit: 'cover',\n    },\n};\n\nfunction aHexToOpacity(aHex) {\n    const alphaValue = '0x' + aHex.substring(7, 9);\n    return alphaValue / 256;\n}\n\n/**\n *\n * @param {*} aHex\n */\nfunction getColorWithoutAlpha(aHex) {\n    return aHex.substring(0, 7);\n}\n\n/**\n * Generate svg background.\n * @param {*} props\n */\nfunction Background(props) {\n    const {\n        classes, colorPair, width, height,\n    } = props;\n    // Creating the background\n\n    const thumbnailBox = {\n        width: 250,\n        height: 200,\n    };\n\n    const thumbnailBoxChild = {\n        width: 50,\n        height: 50,\n    };\n\n    const rects = [];\n    for (let i = 0; i <= 4; i++) {\n        for (let j = 0; j <= 4; j++) {\n            const color = '#' + (colorPair.sub - ((0x00000025 * i) - (j * 0x00000015))).toString(16);\n            rects.push(<rect\n                key={i + '_' + j}\n                {...thumbnailBoxChild}\n                /* eslint no-mixed-operators: 0 */\n                fill={getColorWithoutAlpha(color)}\n                fillOpacity={aHexToOpacity(color)}\n                x={200 - i * 54}\n                y={54 * j}\n            />);\n        }\n    }\n    const primeColor = '#' + colorPair.prime.toString(16);\n    return (\n        <svg width={width} height={height} className={classes.svgImage} aria-hidden='true'>\n            <rect {...thumbnailBox} fill={getColorWithoutAlpha(primeColor)} fillOpacity={aHexToOpacity(primeColor)} />\n            {rects}\n        </svg>\n    );\n}\n\nBackground.propTypes = {\n    classes: PropTypes.shape({ svgImage: PropTypes.string }).isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    colorPair: PropTypes.shape({ sub: PropTypes.number, prime: PropTypes.number }).isRequired,\n};\n\nexport default withStyles(styles)(Background);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport MaterialIcons from 'MaterialIcons';\nimport Background from '../Background';\n\nconst styles = {\n    icon: {},\n    iconWrapper: {\n        position: 'relative',\n        display: 'flex',\n        justifyContent: 'center',\n        '& span': {\n            position: 'absolute',\n            right: 'auto',\n        },\n    },\n};\n\n/**\n * Generate dynamic API thumbnail image (SVG), Use PureComponent to avoid unnessasary re-rendering when hover ect\n *\n * @class ImageGenerator\n * @extends {PureComponent}\n */\nclass ImageGenerator extends PureComponent {\n    /**\n     *\n     * @inheritdoc\n     * @returns {React.PureComponent} @inheritdoc\n     * @memberof ImageGenerator\n     */\n    render() {\n        const {\n            classes, api, width, height, theme, fixedIcon,\n        } = this.props;\n\n        const {\n            category, key, color, backgroundIndex,\n        } = fixedIcon;\n\n        let str = api;\n        if (typeof api === 'object') str = api.name;\n        let count;\n        let colorPair;\n        let randomBackgroundIndex;\n        let IconElement;\n        const colorPairs = theme.custom.thumbnail.backgrounds;\n\n        // Creating the icon\n        if (key && category) {\n            IconElement = key;\n        } else if (api.type === 'DOC') {\n            IconElement = theme.custom.thumbnail.document.icon;\n        } else {\n            count = MaterialIcons.categories[10].icons.length;\n            const randomIconIndex = (str.charCodeAt(0) + str.charCodeAt(str.length - 1)) % count;\n            IconElement = MaterialIcons.categories[10].icons[randomIconIndex].id;\n        }\n\n        // Obtain or generate background color pair\n        if (api.type === 'DOC') {\n            colorPair = theme.custom.thumbnail.document.backgrounds;\n        } else if (backgroundIndex && colorPairs.length > backgroundIndex) {\n            colorPair = colorPairs[backgroundIndex];\n        } else {\n            randomBackgroundIndex = (str.charCodeAt(0) + str.charCodeAt(str.length - 1)) % colorPairs.length;\n            colorPair = colorPairs[randomBackgroundIndex];\n        }\n        return (\n            <div className={classes.iconWrapper} style={{ width }}>\n                <Icon className={classes.icon} style={{ fontSize: height + 'px', color }}>\n                    {IconElement}\n                </Icon>\n                <Background width={width} height={height} colorPair={colorPair} />\n            </div>\n        );\n    }\n}\n\nImageGenerator.defaultProps = {\n    height: 190,\n    width: 250,\n    fixedIcon: {\n        category: null,\n        key: null,\n        color: '',\n        backgroundIndex: null,\n    },\n};\n\nImageGenerator.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    height: PropTypes.number,\n    width: PropTypes.number,\n    fixedIcon: PropTypes.shape({}),\n    api: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(ImageGenerator);\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport { capitalizeFirstLetter } from 'AppData/stringFormatter';\nimport Utils from 'AppData/Utils';\n\nconst getColorFromLetter = (letter, colorMap, offset) => {\n    let charLightColor = colorMap[letter.toLowerCase()];\n\n    if (!charLightColor) {\n        const charNumber = parseInt(letter, 10);\n        if (charNumber) {\n            charLightColor = colorMap[String.fromCharCode(111 + charNumber)];\n        } else {\n            return [null, null];\n        }\n    }\n    const { r, g, b } = Utils.hexToRGBHash(charLightColor);\n    const dark = Utils.rgbToHex(r - Math.ceil(r * offset), g - Math.ceil(offset * g),\n        b - Math.ceil(offset * b));\n    return [charLightColor, dark];\n};\n\nconst useStyles = makeStyles((theme) => {\n    return {\n        root: {\n            display: 'flex',\n        },\n        thumbIcon: ({ width }) => {\n            const { width: defaultWidth } = theme.custom.thumbnail;\n            const fontSize = Math.ceil((width * 90) / defaultWidth);\n            return {\n                fontSize,\n            };\n        },\n        square: ({\n            char, width, height, bgColor,\n        }) => {\n            const {\n                colorMap, offset, width: defaultWidth, textShadow,\n            } = theme.custom.thumbnail;\n            const [light, dark] = getColorFromLetter(bgColor === false ? '' : char, colorMap, offset);\n            const fontSize = Math.ceil((width * 70) / defaultWidth);\n            /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n            const background = light && `linear-gradient(to right, ${light}, ${dark})`;\n            return {\n                color: light && theme.palette.getContrastText(dark),\n                background,\n                fallbacks: [\n                    { background: light }, /* fallback for old browsers */\n                    {\n                        background:\n                        `-webkit-linear-gradient(to right, ${light}, ${dark})`, /* Chrome 10-25, Safari 5.1-6 */\n                    },\n                ],\n                height,\n                width,\n                fontSize: `${fontSize}px`,\n                textShadow,\n            };\n        },\n    };\n});\n\nexport default (props) => {\n    const {\n        artifact, width, height, charLength = 2, ThumbIcon, bgColor,\n    } = props;\n    const name = artifact.name.substring(0, charLength);\n    const classes = useStyles({\n        char: name.substring(0, 1), width, height, bgColor,\n    });\n\n    return (\n        <div className={classes.root}>\n            <Avatar variant='square' className={classes.square}>\n                {ThumbIcon ? <ThumbIcon className={classes.thumbIcon} /> : capitalizeFirstLetter(name)}\n            </Avatar>\n        </div>\n    );\n};\n","/* eslint-disable react/prop-types */\n/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport { withStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport MaterialIcons from 'MaterialIcons';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport { app } from 'Settings';\nimport classNames from 'classnames';\nimport ImageGenerator from './ImageGenerator';\nimport Api from '../../../../data/api';\nimport { ApiContext } from '../../Details/ApiContext';\nimport LetterGenerator from './LetterGenerator';\n\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = (theme) => ({\n    card: {\n        margin: theme.spacing(3 / 2),\n        maxWidth: theme.custom.thumbnail.width,\n        transition: 'box-shadow 0.3s ease-in-out',\n        position: 'relative',\n    },\n    apiDetails: {\n        background: theme.custom.thumbnail.contentBackgroundColor,\n        padding: theme.spacing(1),\n        color: theme.palette.getContrastText(theme.custom.thumbnail.contentBackgroundColor),\n        '& a': {\n            color: theme.palette.getContrastText(theme.custom.thumbnail.contentBackgroundColor),\n        },\n        position: theme.custom.thumbnail.contentPictureOverlap ? 'absolute' : 'relative',\n        top: 0,\n    },\n    suppressLinkStyles: {\n        textDecoration: 'none',\n        color: theme.palette.text.disabled,\n    },\n    row: {\n        display: 'inline-block',\n    },\n    thumbBy: {\n        'padding-left': '5px',\n    },\n    media: {\n        // ⚠️ object-fit is not supported by IE11.\n        objectFit: 'cover',\n    },\n    thumbContent: {\n        width: theme.custom.thumbnail.width - theme.spacing(2),\n    },\n    thumbLeft: {\n        alignSelf: 'flex-start',\n        flex: 1,\n        width: '25%',\n        'padding-left': '5px',\n        'padding-right': '65px',\n    },\n    thumbLeftAction: {\n        alignSelf: 'flex-start',\n        flex: 1,\n        width: '25%',\n        'padding-left': '5px',\n        'padding-right': '10px',\n    },\n    thumbRight: {\n        display: 'flex',\n        alignItems: 'flex-start',\n        flexDirection: 'column',\n    },\n    thumbInfo: {\n        display: 'flex',\n    },\n    thumbHeader: {\n        width: theme.custom.thumbnail.width - theme.spacing(1),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        'padding-left': '5px',\n    },\n    contextBox: {\n        width: parseInt((theme.custom.thumbnail.width - theme.spacing(1)) / 2, 10),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        display: 'inline-block',\n        lineHeight: '1em',\n        'padding-top': 5,\n        'padding-right': 5,\n        'padding-bottom': 1.5,\n        textAlign: 'left',\n    },\n    context: {\n        marginTop: 5,\n    },\n    thumbWrapper: {\n        position: 'relative',\n        paddingTop: 20,\n        marginRight: theme.spacing(2),\n    },\n    deleteIcon: {\n        fill: 'red',\n    },\n    textWrapper: {\n        color: theme.palette.text.secondary,\n        textDecoration: 'none',\n    },\n    imageWrapper: {\n        color: theme.custom.thumbnail.iconColor,\n        width: theme.custom.thumbnail.width,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    imageOverlap: {\n        position: 'absolute',\n        bottom: 1,\n    },\n    chipWrapper: {\n        marginTop: '15px',\n    },\n    chipWrapper2: {\n        marginBottom: '10px',\n    },\n    chipWrapper3: {\n        marginTop: '12px',\n    },\n    ratingWrapper: {\n        marginTop: '20px',\n    },\n    textblock: {\n        color: theme.palette.text.secondary,\n        position: 'absolute',\n        bottom: '35px',\n        right: '10px',\n        background: theme.custom.thumbnail.contentBackgroundColor,\n        'padding-left': '10px',\n        'padding-right': '10px',\n    },\n    actionArea: {\n        display: 'block !important',\n        '&:focus': {\n            border: '1px solid' + theme.palette.primary.main,\n        },\n    },\n});\n\nconst windowURL = window.URL || window.webkitURL;\n\n/**\n *\n * Render API Card component in API listing card view,containing essential API information like name , version ect\n * @class APIThumb\n * @extends {Component}\n */\nclass ApiThumbClassic extends React.Component {\n    /**\n     *Creates an instance of APIThumb.\n     * @param {*} props\n     * @memberof APIThumb\n     */\n    constructor(props) {\n        super(props);\n        const { theme: { custom: { thumbnail: { defaultApiImage } } } } = props;\n        this.state = {\n            category: MaterialIcons.categories[0].name,\n            selectedIcon: null,\n            color: null,\n            backgroundIndex: null,\n            imageObj: null,\n            isHover: false,\n            imageLoaded: !!defaultApiImage, // Convert the image string to boolean value.\n        };\n        this.toggleMouseOver = this.toggleMouseOver.bind(this);\n    }\n\n    /**\n     *\n     *\n     * @memberof ApiThumb\n     */\n    componentDidMount() {\n        const { imageLoaded } = this.state;\n        if (imageLoaded) return;\n        const { api } = this.props;\n        const restApi = new Api();\n\n        const promisedThumbnail = restApi.getAPIThumbnail(api.id);\n        promisedThumbnail.then((response) => {\n            if (response && response.data) {\n                if (response.headers['content-type'] === 'application/json') {\n                    const iconJson = JSON.parse(response.data);\n                    this.setState({\n                        selectedIcon: iconJson.key,\n                        category: iconJson.category,\n                        color: iconJson.color,\n                        backgroundIndex: iconJson.backgroundIndex,\n                    });\n                } else if (response && response.data.size > 0) {\n                    const url = windowURL.createObjectURL(response.data);\n                    this.setState({ imageObj: url });\n                }\n            }\n        }).finally(() => {\n            this.setState({ imageLoaded: true });\n        });\n    }\n\n    /**\n     * Clean up resource\n     */\n    componentWillUnmount() {\n        if (this.state.thumbnail) {\n            windowURL.revokeObjectURL(this.state.imageObj);\n        }\n    }\n\n    /**\n     * Get Path Prefix depedning on the respective API Type being rendered\n     *\n     * @returns {String} path\n     * @memberof ApiThumb\n     */\n    getPathPrefix() {\n        const path = '/apis/';\n        return path;\n    }\n\n    /**\n     * Toggle mouse Hover state to set the card `raised` property\n     *\n     * @param {React.SyntheticEvent} event mouseover and mouseout\n     * @memberof APIThumb\n     */\n    toggleMouseOver(event) {\n        this.setState({ isHover: event.type === 'mouseover' });\n    }\n\n    /**\n     * @inheritdoc\n     * @returns {React.Component} @inheritdoc\n     * @memberof APIThumb\n     */\n    render() {\n        const {\n            imageObj, selectedIcon, color, backgroundIndex, category, isHover, imageLoaded,\n        } = this.state;\n        const path = this.getPathPrefix();\n        const { isMonetizationEnabled } = this.context;\n\n        const detailsLink = path + this.props.api.id;\n        const {\n            api, classes, theme, customWidth, customHeight, showInfo,\n        } = this.props;\n        const { custom: { thumbnail, social: { showRating }, thumbnailTemplates: { variant, active } } } = theme;\n        const { name, version, context } = api;\n\n        let { provider } = api;\n        if (\n            api.businessInformation\n            && api.businessInformation.businessOwner\n            && api.businessInformation.businessOwner.trim() !== ''\n        ) {\n            provider = api.businessInformation.businessOwner;\n        }\n        if (!api.lifeCycleStatus) {\n            api.lifeCycleStatus = api.status;\n        }\n        const imageWidth = customWidth || thumbnail.width;\n        const imageHeight = customHeight || 140;\n        const defaultImage = thumbnail.defaultApiImage;\n\n        const showChips = () => {\n            if (api.lifeCycleStatus === 'PROTOTYPED') {\n                if ((api.type === 'GRAPHQL' || api.transportType === 'GRAPHQL')) {\n                    // GraphQL APIs in prototyped status.\n                    return (\n                        <div className='api-thumb-chip-main'>\n                            <Typography\n                                variant='subtitle1'\n                                gutterBottom\n                                align='right'\n                                className={classNames(classes.chipWrapper2, 'api-thumb-chip-wrapper')}\n                            >\n                                <Chip\n                                    label={api.transportType === undefined ? api.type : api.transportType}\n                                    color='primary'\n                                />\n                            </Typography>\n                            <Typography\n                                variant='subtitle1'\n                                gutterBottom\n                                align='right'\n                                className={classes.chipWrapper3}\n                            >\n                                <Chip\n                                    label='PRE-RELEASED'\n                                    color='default'\n                                />\n                            </Typography>\n                        </div>\n                    );\n                } else if ((api.gatewayVendor === 'solace')) {\n                    // Solace APIs in prototyped status.\n                    return (\n                        <div className='api-thumb-chip-main'>\n                            <Typography\n                                variant='subtitle1'\n                                gutterBottom\n                                align='right'\n                                className={classes.chipWrapper2}\n                            >\n                                <Chip\n                                    label='SOLACE'\n                                    color='primary'\n                                />\n                            </Typography>\n                            <Typography\n                                variant='subtitle1'\n                                gutterBottom\n                                align='right'\n                                className={classes.chipWrapper3}\n                            >\n                                <Chip\n                                    label='PRE-RELEASED'\n                                    color='default'\n                                />\n                            </Typography>\n                        </div>\n                    );\n                } else {\n                    // APIs in prototyped status.\n                    return (\n                        <div className='api-thumb-chip-main'>\n                            <Chip\n                                label='PRE-RELEASED'\n                                color='default'\n                            />\n                        </div>\n                    );\n                }\n            } else {\n                // GraphQL APIs which are not in prototyped status.\n                if ((api.type === 'GRAPHQL' || api.transportType === 'GRAPHQL')) {\n                    return (\n                        <div className='api-thumb-chip-main'>\n                            <Chip\n                                label={api.transportType === undefined ? api.type : api.transportType}\n                                color='primary'\n                            />\n                        </div>\n                    );\n                }\n\n                // Solace APIs which are not in prototyped status.\n                if ((api.gatewayVendor === 'solace')) {\n                    return (\n                        <div className='api-thumb-chip-main'>\n                            <Chip\n                                data-testid='solace-label'\n                                label='SOLACE'\n                                color='primary'\n                            />\n                        </div>\n                    );\n                }\n            }\n            return null;\n        };\n\n        let ImageView;\n        if (!imageLoaded) {\n            ImageView = (\n                <div className='image-load-frame'>\n                    <div className='image-load-animation1' />\n                    <div className='image-load-animation2' />\n                </div>\n            );\n        } else if (imageObj) {\n            ImageView = (\n                <img\n                    height={imageHeight}\n                    width={imageWidth}\n                    src={imageObj}\n                    alt='API Thumbnail'\n                    className={classes.media}\n                />\n            );\n        } else {\n            ImageView = (variant === 'text' && active) ? (\n                <LetterGenerator\n                    width={imageWidth}\n                    height={imageHeight}\n                    artifact={api}\n                />\n            ) : (\n                <ImageGenerator\n                    width={imageWidth}\n                    height={imageHeight}\n                    api={api}\n                    fixedIcon={{\n                        key: selectedIcon,\n                        color: color || thumbnail.iconColor,\n                        backgroundIndex,\n                        category,\n                        api,\n                    }}\n                />\n            );\n        }\n        if (!showInfo) {\n            return (\n                <div className='api-thumb-image-view'>\n                    {!defaultImage && ImageView}\n                    {defaultImage && <img src={app.context + defaultImage} alt='img' />}\n                </div>\n            );\n        }\n        return (\n            <Card\n                onMouseOver={this.toggleMouseOver}\n                onFocus={this.toggleMouseOver}\n                onMouseOut={this.toggleMouseOver}\n                onBlur={this.toggleMouseOver}\n                raised={isHover}\n                className={classNames('image-thumbnail', classes.card)}\n            >\n                {isMonetizationEnabled && (\n                    <div className={classNames(classes.textblock, 'image-thumb-text-block')}>{api.monetizationLabel}</div>\n                )}\n                <Link className={classNames(classes.actionArea, 'image-thumb-action-area')} to={detailsLink} area-label={'Go to ' + name}>\n                    <CardMedia area-hidden='true' classes={{ root: 'image-thumb-card-root' }}>\n                        {!defaultImage && ImageView}\n                        {defaultImage && <img src={app.context + defaultImage} alt='img' />}\n                    </CardMedia>\n                    <CardContent classes={{ root: classNames(classes.apiDetails, 'image-thumb-card-content') }}>\n                        <Typography\n                            className={classNames(classes.thumbHeader, 'image-thumb-card-thumb-header')}\n                            variant='h5'\n                            component='h2'\n                            gutterBottom\n                            onClick={this.handleRedirectToAPIOverview}\n                            title={name}\n                        >\n                            {name}\n                        </Typography>\n                        <div className={classNames(classes.row, 'image-thumb-provider-wrapper')}>\n                            <Typography\n                                variant='caption'\n                                gutterBottom\n                                align='left'\n                                className={classNames(classes.thumbBy, 'image-thumb-provider')}\n                            >\n                                <FormattedMessage defaultMessage='By' id='Apis.Listing.ApiThumb.by' />\n                                <FormattedMessage defaultMessage=' : ' id='Apis.Listing.ApiThumb.by.colon' />\n                                {provider}\n                            </Typography>\n                        </div>\n                        <div className={classNames(classes.thumbInfo, 'image-thumb-info')}>\n                            <div className={classNames(classes.row, 'image-thumb-row')}>\n                                <div className={classNames(classes.thumbLeft, 'image-thumb-left-version')}>\n                                    <Typography variant='subtitle1' component='div'>{version}</Typography>\n                                    <Typography variant='caption' component='div' gutterBottom align='left'>\n                                        <FormattedMessage defaultMessage='Version' id='Apis.Listing.ApiThumb.version' />\n                                    </Typography>\n                                </div>\n                            </div>\n                            <div className={classNames(classes.row, 'image-thumb-context')}>\n                                <div className={classes.thumbRight}>\n                                    <Typography\n                                        variant='subtitle1'\n                                        component='div'\n                                        align='right'\n                                        className={classes.contextBox}\n                                    >\n                                        {context}\n                                    </Typography>\n                                    <Typography\n                                        variant='caption'\n                                        gutterBottom\n                                        align='right'\n                                        className={classes.context}\n                                        Component='div'\n                                    >\n                                        <FormattedMessage defaultMessage='Context' id='Apis.Listing.ApiThumb.context' />\n                                    </Typography>\n                                </div>\n                            </div>\n                        </div>\n                        <div className={classNames(classes.thumbInfo, 'api-thumb-rating-chip-wrapper')}>\n                            {showRating && (\n                                <div className={classNames(classes.thumbLeftAction, 'api-thumb-rating-wrapper')}>\n                                    <Typography\n                                        variant='subtitle1'\n                                        component='div'\n                                        aria-label='API Rating'\n                                        gutterBottom\n                                        align='left'\n                                        className={classNames('api-thumb-rating', classes.ratingWrapper)}\n                                    >\n                                        <StarRatingBar\n                                            apiRating={api.avgRating}\n                                            apiId={api.id}\n                                            isEditable={false}\n                                            showSummary={false}\n                                        />\n                                    </Typography>\n                                </div>\n                            )}\n                            <div className={classNames(classes.thumbRight, 'api-thumb-chips-wrapper')}>\n                                <Typography\n                                    variant='subtitle1'\n                                    component='div'\n                                    gutterBottom\n                                    align='right'\n                                    className={classes.chipWrapper}\n                                >\n                                    {showChips()}\n                                </Typography>\n                            </div>\n                        </div>\n                    </CardContent>\n                </Link>\n            </Card>\n        );\n    }\n}\nApiThumbClassic.defaultProps = {\n    customWidth: null,\n    customHeight: null,\n    showInfo: true,\n};\nApiThumbClassic.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    customWidth: PropTypes.number,\n    customHeight: PropTypes.number,\n    showInfo: PropTypes.bool,\n};\n\nApiThumbClassic.contextType = ApiContext;\n\nexport default withStyles(styles, { withTheme: true })(ApiThumbClassic);\n","const getIcon = (key, category, theme, api) => {\n    let IconElement;\n\n    // Creating the icon\n    if (key && category) {\n        IconElement = key;\n    } else if (api.type === 'DOC') {\n        IconElement = theme.custom.thumbnail.document.icon;\n    } else {\n        IconElement = 'settings';\n    }\n    return IconElement;\n};\n\nexport default getIcon;\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Chip from '@material-ui/core/Chip';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport { app } from 'Settings';\nimport Api from 'AppData/api';\nimport classNames from 'classnames';\n\nimport getIcon from './ImageUtils';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minWidth: 200,\n        marginTop: 10,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n    thumbHeader: {\n        width: '150px',\n        color: '#444',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        'padding-left': '5px',\n    },\n    contextBox: {\n        maxWidth: 120,\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        paddingLeft: '5px',\n    },\n    caption: {\n        color: theme.palette.grey[700],\n    },\n    imageDisplay: {\n        maxWidth: '40px',\n        maxHeight: '40px',\n    },\n}));\nconst windowURL = window.URL || window.webkitURL;\n\n/**\n * @param {JSON} props props passed from parent\n * @returns {JSX} plain api thumbnail\n */\nfunction APIThumbPlain(props) {\n    const theme = useTheme();\n    const classes = useStyles();\n    const { api, showInfo } = props;\n    const { custom: { thumbnail, social: { showRating } } } = theme;\n    const {\n        name, version, context, provider,\n    } = api;\n\n    const [imageConf, setImageConf] = useState({\n        selectedIcon: '',\n        category: '',\n        color: '#ccc',\n    });\n    const [imageObj, setIMageObj] = useState(null);\n    const [imageLoaded, setImageLoaded] = useState(false);\n\n    useEffect(() => {\n        const restApi = new Api();\n\n        const promisedThumbnail = restApi.getAPIThumbnail(api.id);\n\n        promisedThumbnail.then((response) => {\n            if (response && response.data) {\n                if (response.headers['content-type'] === 'application/json') {\n                    const iconJson = JSON.parse(response.data);\n                    setImageConf({\n                        selectedIcon: iconJson.key,\n                        category: iconJson.category,\n                        color: iconJson.color,\n                    });\n                } else if (response && response.data.size > 0) {\n                    setIMageObj(windowURL.createObjectURL(response.data));\n                }\n            }\n        }).finally(() => {\n            setImageLoaded(true);\n        });\n    }, []);\n    let ImageView;\n    if (!imageLoaded) {\n        ImageView = (\n            <div className='image-load-frame'>\n                <div className='image-load-animation1' />\n                <div className='image-load-animation2' />\n            </div>\n        );\n    } else if (imageObj) {\n        ImageView = (\n            <img\n                src={imageObj}\n                alt='API Thumbnail'\n                className={classes.imageDisplay}\n            />\n        );\n    } else {\n        ImageView = (\n            <Icon className={classes.icon} style={{ fontSize: 40 + 'px', color: imageConf.color }}>\n                {getIcon(imageConf.selectedIcon, imageConf.category, theme, api)}\n            </Icon>\n        );\n    }\n\n    if (!showInfo) {\n        return (\n            <Link to={'/apis/' + api.id} aria-hidden='true'>\n                <Box display='flex'>\n                    <Box>\n                        {!thumbnail.defaultApiImage && ImageView}\n                        {thumbnail.defaultApiImage && <img src={app.context + thumbnail.defaultApiImage} alt='img' />}\n                    </Box>\n                </Box>\n\n            </Link>\n        );\n    }\n    return (\n        <Card className={classes.root} variant='outlined'>\n            <CardContent>\n                <Box>\n                    <Link to={'/apis/' + api.id} aria-hidden='true'>\n                        <Box display='flex'>\n                            <Box>\n                                {!thumbnail.defaultApiImage && ImageView}\n                                {thumbnail.defaultApiImage && <img src={app.context + thumbnail.defaultApiImage} alt='img' />}\n                            </Box>\n                            <Typography\n                                variant='h5'\n                                gutterBottom\n                                title={name}\n                                className={classes.thumbHeader}\n                            >\n                                {name}\n                            </Typography>\n                        </Box>\n\n                    </Link>\n                </Box>\n                {provider && (\n                    <>\n                        <Typography variant='caption' gutterBottom align='left' className={classes.caption} component='span'>\n                            <FormattedMessage defaultMessage='By' id='Apis.Listing.ApiThumb.by' />\n                            <FormattedMessage defaultMessage=' : ' id='Apis.Listing.ApiThumb.by.colon' />\n                        </Typography>\n                        <Typography variant='body2' component='span'>{provider}</Typography>\n                    </>\n                )}\n                <Box display='flex' mt={2}>\n                    <Box flex={1}>\n                        <Typography variant='subtitle1'>{version}</Typography>\n                        <Typography variant='caption' gutterBottom align='left' className={classes.caption}>\n                            <FormattedMessage defaultMessage='Version' id='Apis.Listing.ApiThumb.version' />\n                        </Typography>\n                    </Box>\n                    <Box>\n                        <Typography variant='subtitle1' align='right' className={classes.contextBox}>\n                            {context}\n                        </Typography>\n                        <Typography\n                            variant='caption'\n                            gutterBottom\n                            align='right'\n                            className={classes.caption}\n                            Component='div'\n                        >\n                            <FormattedMessage defaultMessage='Context' id='Apis.Listing.ApiThumb.context' />\n                        </Typography>\n                    </Box>\n                </Box>\n\n                <Box display='flex' mt={2}>\n                    {showRating && (\n                        <Box flex={1}>\n                            <Typography\n                                variant='subtitle1'\n                                gutterBottom\n                                align='left'\n                                className={classNames('api-thumb-rating', classes.ratingWrapper)}\n                            >\n                                <StarRatingBar\n                                    apiRating={api.avgRating}\n                                    apiId={api.id}\n                                    isEditable={false}\n                                    showSummary={false}\n                                />\n                            </Typography>\n                        </Box>\n                    )}\n                    <Box>\n                        <Typography\n                            variant='subtitle1'\n                            gutterBottom\n                            align='right'\n                            className={classes.chipWrapper}\n                        >\n                            {(api.type === 'GRAPHQL' || api.transportType === 'GRAPHQL') && (\n                                <Chip\n                                    label={api.transportType === undefined ? api.type : api.transportType}\n                                    color='primary'\n                                />\n                            )}\n                            {(api.lifeCycleStatus === 'PROTOTYPED') && (\n                                <Chip\n                                    label={api.apiType === 'APIProduct' ? api.state : 'PROTOTYPE'}\n                                    color='default'\n                                />\n                            )}\n                        </Typography>\n                    </Box>\n                </Box>\n            </CardContent>\n        </Card>\n    );\n}\n\nAPIThumbPlain.defaultProps = {\n    showInfo: true,\n};\nAPIThumbPlain.propTypes = {\n    showInfo: PropTypes.bool,\n};\n\nexport default APIThumbPlain;\n","import React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport ApiThumbClassic from 'AppComponents/Apis/Listing/APICards/ApiThumbClassic';\nimport APIThumbPlain from 'AppComponents/Apis/Listing/APICards/APIThumbPlain';\n\n/**\n * Render no api section\n * @param {JSON} props properties passed from parent\n * @returns {void}\n */\nexport default function ApiThumb(props) {\n    const theme = useTheme();\n    const { custom } = theme;\n    if (!custom.thumbnailTemplates || !custom.thumbnailTemplates.active) {\n        return (\n            <ApiThumbClassic {...props} />\n        );\n    }\n    const { thumbnailTemplates: { variant, active } } = custom;\n    if (active && variant === 'plain') {\n        return (\n            <APIThumbPlain {...props} />\n        );\n    }\n    if (active && variant === 'text') {\n        return (\n            <ApiThumbClassic {...props} />\n        );\n    }\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport StarRate from '@material-ui/icons/StarRate';\nimport Icon from '@material-ui/core/Icon';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\n\nconst styles = (theme) => {\n    const starColor = theme.custom.infoBar.starColor || theme.palette.getContrastText(theme.custom.infoBar.background);\n    return {\n        starRate: {\n            marginRight: theme.spacing(),\n            color: starColor,\n            '&.material-icons': {\n                fontSize: 30,\n            },\n        },\n        userRating: {\n            display: 'flex',\n            justifyContent: 'flex-start',\n            alignItems: 'center',\n        },\n    };\n};\n\n/**\n *\n * @param {JSON} props props passed from parent\n * @returns {JSX} summary of the rating\n */\nfunction StarRatingSummary(props) {\n    const {\n        classes, theme, avgRating, reviewCount, returnCount,\n    } = props;\n    return (\n        <>\n            {returnCount > 0 ? (\n                <>\n                    <Icon className={classes.starRate}>star</Icon>\n                    <div className={classes.ratingSummary}>\n                        <div aria-label='User rating' className={classes.userRating}>\n                            <Typography variant='body1'>{avgRating}</Typography>\n                            <Typography aria-label='out of five' variant='body1'>/5.0</Typography>\n                        </div>\n                        <Typography aria-label='Number of users who has rated' variant='body1' gutterBottom align='left'>\n                            {reviewCount}\n                            {' '}\n                            {reviewCount === 1 ? (\n                                <FormattedMessage defaultMessage='user' id='Apis.Details.StarRatingSummary.user' />\n                            ) : (\n                                <FormattedMessage defaultMessage='users' id='Apis.Details.StarRatingSummary.users' />\n                            )}\n                        </Typography>\n                    </div>\n                </>\n            ) : (\n                <>\n                    <StarRate className={classes.starRate} style={{ color: theme.palette.grey.A200 }} />\n                    <div className={classes.ratingSummary}>\n                        <Typography variant='caption' gutterBottom align='left'>\n                            <FormattedMessage defaultMessage='Not Rated' id='Apis.Details.StarRatingSummary.not.rated' />\n                        </Typography>\n                    </div>\n                </>\n            )}\n        </>\n    );\n}\n\nexport default withStyles(styles, { withTheme: true })(StarRatingSummary);\n"],"sourceRoot":""}