export enum APIName {
  Publisher = "Publisher",
  ServiceCatalog = "ServiceCatalog",
}

// This settings mock is temporary until the settings API call makes through React-Query or similar data fetcher
export const TEMPORARY_MOCKED_SETTINGS = {
  devportalUrl: "https://localhost:9443/devportal",
  environment: [
    {
      id: "Default",
      name: "Default",
      displayName: "Default",
      provider: "wso2",
      type: "hybrid",
      serverUrl: "https://localhost:9443/services/",
      showInApiConsole: true,
      vhosts: [
        {
          host: "localhost",
          httpContext: "",
          httpPort: 8280,
          httpsPort: 8243,
          wsPort: 9099,
          wssPort: 8099,
          websubHttpPort: 9021,
          websubHttpsPort: 8021,
        },
      ],
    },
  ],
  scopes: [
    "apim:admin",
    "apim:api_create",
    "apim:api_delete",
    "apim:api_generate_key",
    "apim:api_import_export",
    "apim:api_manage",
    "apim:api_mediation_policy_manage",
    "apim:api_product_import_export",
    "apim:api_publish",
    "apim:api_view",
    "apim:app_import_export",
    "apim:client_certificates_add",
    "apim:client_certificates_manage",
    "apim:client_certificates_update",
    "apim:client_certificates_view",
    "apim:comment_manage",
    "apim:comment_view",
    "apim:comment_write",
    "apim:document_create",
    "apim:document_manage",
    "apim:ep_certificates_add",
    "apim:ep_certificates_manage",
    "apim:ep_certificates_update",
    "apim:ep_certificates_view",
    "apim:mediation_policy_create",
    "apim:mediation_policy_manage",
    "apim:mediation_policy_view",
    "apim:pub_alert_manage",
    "apim:publisher_settings",
    "apim:shared_scope_manage",
    "apim:subscription_block",
    "apim:subscription_manage",
    "apim:subscription_view",
    "apim:threat_protection_policy_create",
    "apim:threat_protection_policy_manage",
    "apim:tier_manage",
    "apim:tier_view",
    "openid",
  ],
  monetizationAttributes: [],
  securityAuditProperties: {
    isGlobal: null,
    overrideGlobal: null,
    apiToken: null,
    collectionId: null,
    baseUrl: null,
  },
  externalStoresEnabled: false,
  docVisibilityEnabled: false,
  crossTenantSubscriptionEnabled: false,
  authorizationHeader: "Authorization",
};

export class MockedUsers {
  public static readonly ReadOnly = Error("Not Implemented!")
  public static readonly Creator = {
    name: "test.creator@carbon.super",
    scopes: [
      "apim:api_create",
      "apim:api_delete",
      "apim:api_generate_key",
      "apim:api_mediation_policy_manage",
      "apim:api_view",
      "apim:client_certificates_add",
      "apim:client_certificates_manage",
      "apim:client_certificates_update",
      "apim:client_certificates_view",
      "apim:comment_manage",
      "apim:comment_view",
      "apim:comment_write",
      "apim:document_create",
      "apim:document_manage",
      "apim:ep_certificates_add",
      "apim:ep_certificates_manage",
      "apim:ep_certificates_update",
      "apim:ep_certificates_view",
      "apim:mediation_policy_create",
      "apim:mediation_policy_manage",
      "apim:mediation_policy_view",
      "apim:pub_alert_manage",
      "apim:publisher_settings",
      "apim:subscription_view",
      "apim:threat_protection_policy_create",
      "apim:threat_protection_policy_manage",
      "apim:tier_view",
      "openid",
      "service_catalog:service_view",
      "service_catalog:service_write",
    ],
    remember: false,
    expiryTime: "1970-01-01T00:00:00.000Z",
  };
  public static readonly Publisher = {
    name: "test.publisher@carbon.super",
    scopes: [
      "apim:api_generate_key",
      "apim:api_publish",
      "apim:api_view",
      "apim:comment_manage",
      "apim:comment_view",
      "apim:comment_write",
      "apim:document_create",
      "apim:document_manage",
      "apim:publisher_settings",
      "apim:subscription_block",
      "apim:subscription_manage",
      "apim:subscription_view",
      "apim:tier_view",
      "openid",
      "service_catalog:service_view",
    ],
    remember: false,
    expiryTime: "1970-01-01T00:00:00.000Z",
  };
  public static readonly Admin = {
    name: "test.admin@carbon.super",
    scopes: [
      "apim:api_create",
      "apim:api_delete",
      "apim:api_generate_key",
      "apim:api_publish",
      "apim:api_view",
      "apim:client_certificates_add",
      "apim:client_certificates_update",
      "apim:client_certificates_view",
      "apim:comment_view",
      "apim:comment_write",
      "apim:document_create",
      "apim:document_manage",
      "apim:ep_certificates_add",
      "apim:ep_certificates_update",
      "apim:ep_certificates_view",
      "apim:mediation_policy_create",
      "apim:mediation_policy_manage",
      "apim:mediation_policy_view",
      "apim:pub_alert_manage",
      "apim:publisher_settings",
      "apim:subscription_block",
      "apim:subscription_view",
      "apim:threat_protection_policy_create",
      "apim:threat_protection_policy_manage",
      "openid",
      "service_catalog:service_view",
      "service_catalog:service_write",
    ],
    remember: false,
    expiryTime: "1970-01-01T00:00:00.000Z",
  };
}
