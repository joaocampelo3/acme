{"version":3,"sources":["webpack:///./source/src/app/components/Apis/Create/Components/DefaultAPIForm.jsx","webpack:///./source/src/app/components/Apis/Create/Components/APICreateBase.jsx","webpack:///./source/src/app/data/Wsdl.js","webpack:///./source/src/app/components/Apis/Details/APIDefinition/LinterUI/LinterUI.jsx","webpack:///./source/src/app/components/Apis/Details/APIDefinition/Linting/APILintingSummary.tsx","webpack:///./source/src/app/components/Apis/Details/ProductResources/ProductResourcesEditWorkspace.jsx","webpack:///./source/src/app/components/Apis/Details/ProductResources/MethodView.jsx","webpack:///./source/src/app/components/Apis/Create/WSDL/Steps/ProvideWSDL.jsx","webpack:///./source/src/app/components/Apis/Create/AsyncAPI/Steps/ProvideAsyncAPI.jsx","webpack:///./source/src/app/components/Apis/Create/OpenAPI/Steps/ProvideOpenAPI.jsx","webpack:///./source/src/app/components/Apis/Create/OpenAPI/Steps/ValidationResults.tsx","webpack:///./source/src/app/components/Apis/Create/GraphQL/Steps/ProvideGraphQL.jsx","webpack:///./source/src/app/components/Apis/Create/Default/APICreateDefault.jsx","webpack:///./source/src/app/components/Apis/Create/APICreateRoutes.jsx","webpack:///./source/src/app/components/Apis/Create/APIProduct/APIProductCreateWrapper.jsx","webpack:///./source/src/app/components/Apis/Create/Components/APICreateProductBase.jsx","webpack:///./source/src/app/components/Apis/Create/OpenAPI/ApiCreateOpenAPI.jsx","webpack:///./source/src/app/components/Apis/Create/WSDL/ApiCreateWSDL.jsx","webpack:///./source/src/app/components/Apis/Create/GraphQL/ApiCreateGraphQL.jsx","webpack:///./source/src/app/components/Apis/Create/WebSocket/ApiCreateWebSocket.jsx","webpack:///./source/src/app/components/Apis/Create/StreamingAPI/APICreateStreamingAPI.jsx","webpack:///./source/src/app/components/Apis/Create/AsyncAPI/ApiCreateAsyncAPI.jsx","webpack:///./source/src/app/components/Apis/Create/AsyncAPI/ExternalEndpoint.jsx","webpack:///./node_modules/@material-ui/core/esm/LinearProgress/LinearProgress.js","webpack:///./node_modules/@material-ui/lab/esm/AlertTitle/AlertTitle.js","webpack:///./node_modules/@material-ui/lab/esm/internal/svg-icons/SuccessOutlined.js","webpack:///./node_modules/@material-ui/lab/esm/internal/svg-icons/ReportProblemOutlined.js","webpack:///./node_modules/@material-ui/lab/esm/internal/svg-icons/ErrorOutline.js","webpack:///./node_modules/@material-ui/lab/esm/internal/svg-icons/InfoOutlined.js","webpack:///./node_modules/@material-ui/lab/esm/internal/svg-icons/Close.js","webpack:///./node_modules/@material-ui/lab/esm/Alert/Alert.js","webpack:///./source/src/app/components/Apis/Details/APIDefinition/Linting/Linting.tsx","webpack:///./source/src/app/components/Shared/DropZoneLocal.jsx"],"names":["useStyles","makeStyles","theme","mandatoryStar","color","palette","error","main","marginLeft","spacing","helperTextContext","textOverflow","width","display","whiteSpace","overflow","endpointValidChip","border","endpointInvalidChip","endpointErrorChip","iconButton","padding","iconButtonValid","green","actualContext","isWebSocket","initialContext","context","version","indexOf","replace","checkContext","value","result","tenant","user","AuthManager","getUser","name","split","length","contextVal","startsWith","toLowerCase","undefined","find","x","contextTemplate","DefaultAPIForm","props","onChange","onValidate","api","isAPIProduct","children","appendChildrenBeforeEndpoint","hideEndpoint","classes","useState","validity","setValidity","isEndpointValid","setIsEndpointValid","statusCode","setStatusCode","isUpdating","setUpdating","isErrorCode","setIsErrorCode","useEffect","Boolean","condition","then","otherwise","updateValidity","newState","isFormValid","Object","entries","map","reduce","acc","cVal","validate","field","nameValidity","APIValidation","apiName","abortEarly","apiParameter","body","list","details","message","contextValidity","apiContext","required","versionValidity","apiVersion","wsUrlValidity","wsUrl","endpointURL","item","md","noValidate","autoComplete","autoFocus","fullWidth","id","label","defaultMessage","className","helperText","detail","index","style","marginTop","InputProps","onBlur","target","InputLabelProps","for","margin","variant","container","key","xs","root","endpoint","endAdornment","position","aria-label","onClick","API","testEndpoint","statusMessage","finally","disabled","size","direction","justify","alignItems","gutterBottom","defaultProps","propTypes","PropTypes","shape","isRequired","func","APICreateBase","title","sm","elevation","element","arrayOf","Wsdl","file","apiClient","APIClientFactory","getAPIClient","Utils","getCurrentEnvironment","CONST","API_CLIENT","client","requestBody","apis","Validation","validateWSDLDefinition","url","additionalProperties","implementationType","APIs","importWSDLDefinition","JSON","stringify","response","Resource","tableCell","fontSize","headerTableCell","background","fontWeight","tableRow","backgroundColor","action","hover","cursor","tableWrapper","headerTableRow","LinterUI","React","page","setPage","rowsPerPage","setRowsPerPage","linterResults","handleRowClick","columns","minWidth","align","rows","type","severityMap","severity","line","range","start","code","sx","maxHeight","stickyHeader","column","slice","row","format","rowsPerPageOptions","component","count","onPageChange","event","newPage","onRowsPerPageChange","activeButton","default","handleChange","selectedSeverity","setSelectedSeverity","severityCounts","forEach","ml","Number","exclusive","String","maxWidth","noWrap","Math","random","searchWrapper","paper","height","borderRadius","apiWrapper","overflowY","ResourceWrapper","marginRight","grey","common","white","SelectedResourceWrapper","overflowX","leftMost","getContrastText","rightMost","colTitle","minHeight","treeItemMain","treeItemMainWrapper","paddingLeft","treeItem","hr","flex","methodView","middleText","selectedApi","selectedTitle","buttonWrapper","textDecorate","selectedApiDescription","messageWrapper","tootBar","justifyContent","inactiveIcon","resourceMethod","POST","PUT","GET","DELETE","PATCH","OPTIONS","HEAD","ProductResourcesEdit","apiResources","setApiResources","isStateCreate","resourceNotFountMessage","allApis","setAllApis","notFound","setNotFound","searchText","setSearchText","selectedApiPaths","setSelectedApiPaths","setSelectedApi","fromSearch","setFromSearch","apiRestClient","filterAPIs","text","inputValue","trim","composeQuery","composeQueryJSON","queryString","parse","limit","offset","search","all","query","isValidHttpVerb","innerKey","addPropsToSelectedApiPaths","paths","apiId","latestApiResources","keys","methodObj","checked","verb","resourceFound","resourcekey","apiResource","operations","operationKey","operation","allreadyAdded","getApiSwagger","apiSelected","getSwagger","obj","catch","status","doRedirectToLogin","updateResourceTree","resourceToAdd","inputApiResources","updateStateHere","newApiResources","cloneDeep","newResource","toUpperCase","authType","throttlingPolicy","scopes","apiFound","indexA","operationFound","indexB","splice","push","updateCheckBox","prevSelectedApiPaths","addSelectedResourcesToTree","addAll","filteredList","filter","theApi","lifeCycleStatus","placeholder","shrink","dense","apiObj","labelId","role","button","primary","secondary","onKeyDown","path","CONSTS","HTTP_METHODS","includes","edge","tabIndex","disableRipple","inputProps","method","instanceOf","Array","string","MethodView","console","info","Configurations","app","useTheme","chipColor","custom","resourceChipColors","chipTextColor","log","ProvideWSDL","apiInputs","inputsDispatcher","isFileInput","inputType","isGenerateRESTAPI","isError","isValidating","setIsValidating","isCreateMode","mode","handleWSDLValidationResponse","isWSDLValid","isValid","success","handleWSDLValidationErrorResponse","description","onDrop","files","state","validateFileOrArchive","dropBoxControlLabel","values","break","urlStateEndAdornment","control","onClose","disableActions","paperProps","humanFileSize","accept","validateUrl","ProvideAsyncAPI","validationErrors","setValidationErrors","gatewayVendor","setGatewayVendor","pop","validFile","validateAsyncAPIByFile","isValidFile","errors","validateURL","validateAsyncAPIByUrl","returnContent","isValidURL","content","INPUT_TYPES","FILE","URL","isInvalidURL","data-testid","icon","ProvideOpenAPI","onLinterLineSelect","setLinterResults","isLinting","setIsLinting","lint","getLinterResultsFromContent","results","reset","validateURLDebounced","useCallback","debounce","newURL","validateOpenAPIByUrl","formattedContent","definition","err","hasJSONStructure","YAML","load","validateOpenAPIByFile","endsWith","read","FileReader","readAsText","onloadend","toString","importDefinitionDialogHeader","ValidationResults","expandValidationErrors","setExpandValidationErrors","expandLinterResults","setExpandLinterResults","linterSelectedSeverity","setLinterSelectedSeverity","expanded","expandIcon","stopPropagation","ProvideGraphQL","validateGraphQLFile","graphQLInfo","ariaLabel","getPolicies","promisedPolicies","policies","APICreateDefault","history","intl","usePublisherSettings","settings","data","isLoading","settingsError","pageError","setPageError","isCreating","setIsCreating","isPublishing","setIsPublishing","isRevisioning","setIsRevisioning","isDeploying","setIsDeploying","isPublishButtonClicked","setIsPublishButtonClicked","useReducer","currentState","inputAction","formValidity","isPublishable","isAPICreateDisabled","createAPI","allPolicies","Alert","formatMessage","p","apiData","endpointConfig","endpoint_type","sandbox_endpoints","production_endpoints","newAPIProduct","APIProduct","promisedCreatedAPI","saveProduct","apiProduct","newAPI","save","loading","pageTitle","mt","isNotPublisher","restApi","promisedAPIRevision","createRevision","api1","revisionId","envList","environment","env","body1","internalGateways","provider","getFirstVhost","envName","e","vhosts","host","displayOnDevportal","vhost","promisedDeployment","deployRevision","promisedPublish","publish","workflowStatus","WORKFLOW_STATUS","CREATED","to","withRouter","injectIntl","styles","flexGrow","APICreateRoutes","APIProductCreateWrapper","ApiCreateGraphQL","ApiCreateSwagger","ApiCreateWSDL","ApiCreateWebSocket","APICreateStreamingAPI","APICreateAsyncAPI","ResourceNotFound","withStyles","Paper","saveButton","titleWrapper","flexDirection","paddingBottom","alternativeLabel","ApiProductCreateWrapper","useIntl","wizardStep","setWizardStep","useAppContext","setPolicies","setCreating","steps","createAPIProduct","activeStep","step","createProductRevision","deployProductRevision","updateLcState","APICreateProductBase","apiInputsReducer","endpoints","ApiCreateOpenAPI","handleOnValidate","importOpenAPIByFile","importOpenAPIByUrl","mb","href","importByUrl","importByFileOrArchive","useHistory","marginBottom","newApi","importGraphQL","uuid","apiType","useParams","isWebSub","asyncAPIPolicies","policyName","protocolKeys","WebSocket","SSE","WebSub","setHideEndpoint","isAPICreatable","handleOnChange","protocol","endpointType","saveStreamingAPI","endpointPlaceholderText","select","WS","WEBSUB","SelectProps","multiple","renderValue","selected","displayName","disableGutters","streamingApi","ApiCreateAsyncAPI","hideExternalEndpoint","setHideExternalEndpoint","isValidExternalEndpoint","setValidExternalEndpoint","asyncTransportProtocols","Other","validateEndpoint","Joi","uri","empty","lg","upperCaseString","externalEndpoint","advertiseInfo","advertised","apiExternalProductionEndpoint","apiExternalSandboxEndpoint","originalDevPortalUrl","apiOwner","vendor","importAsyncAPIByFile","importAsyncAPIByUrl","externalEndpointWarning","alertTitle","typography","fontWeightMedium","ExternalEndpoint","LinearProgress","ref","_props$color","valueBuffer","_props$variant","other","rootProps","inlineStyles","bar1","bar2","round","transform","concat","_transform","determinate","indeterminate","buffer","dashed","bar","bar1Indeterminate","bar1Determinate","bar1Buffer","bar2Indeterminate","bar2Buffer","getColor","backgroundPrimary","backgroundSecondary","colorAdjust","colorPrimary","colorSecondary","animation","dashedColorPrimary","backgroundImage","backgroundSize","backgroundPosition","dashedColorSecondary","left","bottom","top","transition","transformOrigin","barColorPrimary","barColorSecondary","zIndex","right","opacity","AlertTitle","createSvgIcon","d","defaultIconMapping","SuccessOutlined","warning","ReportProblemOutlined","ErrorOutline","InfoOutlined","_ref","Close","_props$closeText","closeText","_props$iconMapping","iconMapping","_props$role","_props$severity","square","capitalize","IconButton","getBackgroundColor","body2","standardSuccess","standardInfo","standardWarning","standardError","outlinedSuccess","outlinedInfo","outlinedWarning","outlinedError","filledSuccess","filledInfo","filledWarning","filledError","spectralFunctions","spectralSeverityMap","0","1","2","3","spectralSeverityNames","swagger","validationResults","defaultRuleSet","extends","rules","linter","setRuleset","run","customRuleset","getLinterCustomRules","LinterCustomRuleset","parsedCustomRuleset","Error","stack","sort","a","b","bytesParam","si","bytes","thresh","abs","units","u","toFixed","baseStyle","borderWidth","borderColor","borderStyle","outline","activeStyle","acceptStyle","rejectStyle","DropZoneLocal","dropZoneObject","useDropzone","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","useMemo","containerStyles","fontFamily","textAlign","showFilesList","bool","oneOfType"],"mappings":"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","file":"APICreateRoutes.8b6d72f7c544eb8d0449.bundle.js","sourcesContent":["/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport { InputAdornment, IconButton, Icon } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Chip from '@material-ui/core/Chip';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport green from '@material-ui/core/colors/green';\nimport APIValidation from 'AppData/APIValidation';\nimport API from 'AppData/api';\nimport AuthManager from 'AppData/AuthManager';\n\nconst useStyles = makeStyles((theme) => ({\n    mandatoryStar: {\n        color: theme.palette.error.main,\n        marginLeft: theme.spacing(0.1),\n    },\n    helperTextContext: {\n        '& p': {\n            textOverflow: 'ellipsis',\n            width: 400,\n            display: 'block',\n            whiteSpace: 'nowrap',\n            overflow: 'hidden',\n        },\n    },\n    endpointValidChip: {\n        color: 'green',\n        border: '1px solid green',\n    },\n    endpointInvalidChip: {\n        color: '#ffd53a',\n        border: '1px solid #ffd53a',\n    },\n    endpointErrorChip: {\n        color: 'red',\n        border: '1px solid red',\n    },\n    iconButton: {\n        padding: theme.spacing(1),\n    },\n    iconButtonValid: {\n        padding: theme.spacing(1),\n        color: green[500],\n    },\n}));\n\n/**\n *\n * Return the actual API context that will be exposed in the gateway.\n * If the context value contains `{version}` placeholder text it will be replaced with the actual version value.\n * If there is no such placeholder text in the context, The version will be appended to the context\n * i:e /context/version\n * Parameter expect an object containing `context` and `version` properties.\n * @param {String} context API Context\n * @param {String} version API Version string\n * @param isWebSocket check whether it is a webSocketAPI\n * @returns {String} Derived actual context string\n */\nfunction actualContext({ context, version }, isWebSocket) {\n    let initialContext;\n    // eslint-disable-next-line no-unused-expressions\n    isWebSocket ? (initialContext = '{channel}/{version}') : (initialContext = '{context}/{version}');\n    if (context) {\n        initialContext = context;\n        if (context.indexOf('{version}') < 0) {\n            initialContext = context + '/{version}';\n        }\n    }\n    if (version) {\n        initialContext = initialContext.replace('{version}', version);\n    }\n    return initialContext;\n}\n\n/**\n * This method used to  compare the context values\n * @param {*} value  input value\n * @param {*} result resulted value\n * @returns {Boolean} true or false\n */\nfunction checkContext(value, result) {\n    let tenant;\n    const user = AuthManager.getUser();\n    if (user.name && user.name.indexOf('@') !== -1) {\n        tenant = user.name.split('@')[user.name.split('@').length - 1];\n    }\n    let contextVal = value.startsWith('/') ? value.toLowerCase() : '/' + value.toLowerCase();\n    if (tenant !== null && tenant !== undefined && tenant !== 'carbon.super') {\n        contextVal = '/t/' + tenant + contextVal.toLowerCase();\n    }\n    if (\n        result.find(\n            (x) =>\n                x.context.toLowerCase() === contextVal.toLowerCase() ||\n                x.contextTemplate.toLowerCase() === contextVal.toLowerCase(),\n        ) !== undefined\n    ) {\n        return true;\n    }\n    return false;\n}\n\n/**\n * Improved API create default form\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function DefaultAPIForm(props) {\n    const {\n        onChange, onValidate, api, isAPIProduct, isWebSocket, children, appendChildrenBeforeEndpoint, hideEndpoint,\n    } = props;\n    const classes = useStyles();\n    const [validity, setValidity] = useState({});\n    const [isEndpointValid, setIsEndpointValid] = useState();\n    const [statusCode, setStatusCode] = useState('');\n    const [isUpdating, setUpdating] = useState(false);\n    const [isErrorCode, setIsErrorCode] = useState(false);\n    const iff = (condition, then, otherwise) => (condition ? then : otherwise);\n\n    // Check the provided API validity on mount, TODO: Better to use Joi schema here ~tmkb\n    useEffect(() => {\n        onValidate(Boolean(api.name)\n                && (isAPIProduct || Boolean(api.version))\n                && Boolean(api.context));\n    }, []);\n\n    const updateValidity = (newState) => {\n        let isFormValid = Object.entries(newState).length > 0\n            && Object.entries(newState)\n                .map(([, value]) => value === null || value === undefined)\n                .reduce((acc, cVal) => acc && cVal); // Aggregate the individual validation states\n        // TODO: refactor following redundant validation.\n        // The valid state should available in the above reduced state ~tmkb\n        // if isAPIProduct gets true version validation has been skipped\n        isFormValid = isFormValid\n            && Boolean(api.name)\n            && (isAPIProduct || Boolean(api.version))\n            && Boolean(api.context);\n        onValidate(isFormValid, validity);\n        setValidity(newState);\n    };\n    /**\n     * Trigger the provided onValidate call back on each input validation run\n     * Do the validation state aggregation and call the onValidate method with aggregated value\n     * @param {string} field The input field.\n     * @param {string} value Validation state object\n     */\n    function validate(field, value) {\n        switch (field) {\n            case 'name': {\n                const nameValidity = APIValidation.apiName.validate(value, { abortEarly: false }).error;\n                if (nameValidity === null) {\n                    APIValidation.apiParameter.validate(field + ':' + value).then((result) => {\n                        if (result.body.list.length > 0 && value.toLowerCase() === result.body.list[0]\n                            .name?.toLowerCase()) {\n                            updateValidity({\n                                ...validity,\n                                name: { details: [{ message: 'Name ' + value + ' already exists' }] },\n                            });\n                        } else {\n                            updateValidity({ ...validity, name: nameValidity });\n                        }\n                    });\n                } else {\n                    updateValidity({ ...validity, name: nameValidity });\n                }\n                break;\n            }\n            case 'context': {\n                const contextValidity = APIValidation.apiContext.required().validate(value, { abortEarly: false })\n                    .error;\n                const apiContext = value.startsWith('/') ? value : '/' + value;\n                if (contextValidity === null) {\n                    APIValidation.apiParameter.validate(field + ':' + apiContext).then((result) => {\n                        const count = result.body.list.length;\n                        if (count > 0 && checkContext(value, result.body.list)) {\n                            updateValidity({\n                                ...validity,\n                                context: {\n                                    details: [{\n                                        message: isWebSocket ? apiContext + ' channel already exists'\n                                            : apiContext + ' context already exists'\n                                    }]\n                                },\n                            });\n                        } else {\n                            updateValidity({ ...validity, context: contextValidity, version: null });\n                        }\n                    });\n                } else {\n                    updateValidity({ ...validity, context: contextValidity });\n                }\n                break;\n            }\n            case 'version': {\n                const versionValidity = APIValidation.apiVersion.required().validate(value).error;\n                updateValidity({ ...validity, version: versionValidity });\n                break;\n            }\n            case 'endpoint': {\n                if (isWebSocket && value && value.length > 0) {\n                    const wsUrlValidity = APIValidation.wsUrl.validate(value).error;\n                    updateValidity({ ...validity, endpointURL: wsUrlValidity });\n                }\n                break;\n            }\n            default: {\n                break;\n            }\n        }\n    }\n\n    function testEndpoint(endpoint) {\n        setUpdating(true);\n        const restApi = new API();\n        restApi.testEndpoint(endpoint)\n            .then((result) => {\n                if (result.body.error !== null) {\n                    setStatusCode(result.body.error);\n                    setIsErrorCode(true);\n                } else {\n                    setStatusCode(result.body.statusCode + ' ' + result.body.statusMessage);\n                    setIsErrorCode(false);\n                }\n                if (result.body.statusCode >= 200 && result.body.statusCode < 300) {\n                    setIsEndpointValid(true);\n                    setIsErrorCode(false);\n                } else {\n                    setIsEndpointValid(false);\n                }\n            }).finally(() => {\n                setUpdating(false);\n            });\n    }\n\n    return (\n        <Grid item md={11}>\n            <form noValidate autoComplete='off'>\n                <TextField\n                    autoFocus\n                    fullWidth\n                    id='api-name'\n                    error={Boolean(validity.name)}\n                    label={(\n                        <>\n                            <FormattedMessage id='Apis.Create.Components.DefaultAPIForm.name' defaultMessage='Name' />\n                            <sup className={classes.mandatoryStar}>*</sup>\n                        </>\n                    )}\n                    helperText={\n                        validity.name\n                        && validity.name.details.map((detail, index) => {\n                            return <div style={{ marginTop: index !== 0 && '10px' }}>{detail.message}</div>;\n                        })\n                    }\n                    value={api.name}\n                    name='name'\n                    onChange={onChange}\n                    InputProps={{\n                        id: 'itest-id-apiname-input',\n                        onBlur: ({ target: { value } }) => {\n                            validate('name', value);\n                        },\n                    }}\n                    InputLabelProps={{\n                        for: 'itest-id-apiname-input',\n                    }}\n                    margin='normal'\n                    variant='outlined'\n                />\n                <Grid container spacing={2}>\n                    {!isAPIProduct ? (\n                        <>\n                            <Grid item md={8} xs={6}>\n                                <TextField\n                                    fullWidth\n                                    id='context'\n                                    error={Boolean(validity.context)}\n                                    label={(\n                                        <>\n                                            {isWebSocket ? (\n                                                <FormattedMessage\n                                                    id='Apis.Create.Components.DefaultAPIForm.api.channel'\n                                                    defaultMessage='Channel'\n                                                />\n                                            ) : (\n                                                <FormattedMessage\n                                                    id='Apis.Create.Components.DefaultAPIForm.api.context'\n                                                    defaultMessage='Context'\n                                                />\n                                            )}\n                                            <sup className={classes.mandatoryStar}>*</sup>\n                                        </>\n                                    )}\n                                    name='context'\n                                    value={api.context}\n                                    onChange={onChange}\n                                    InputProps={{\n                                        id: 'itest-id-apicontext-input',\n                                        onBlur: ({ target: { value } }) => {\n                                            validate('context', value);\n                                        },\n                                    }}\n                                    InputLabelProps={{\n                                        for: 'itest-id-apicontext-input',\n                                    }}\n                                    helperText={\n                                        (validity.context\n                                            && validity.context.details.map((detail, index) => {\n                                                return (\n                                                    <div style={{ marginTop: index !== 0 && '10px' }}>\n                                                        {detail.message}\n                                                    </div>\n                                                );\n                                            }))\n                                        // eslint-disable-next-line max-len\n                                        || `API will be exposed in ${actualContext(api, isWebSocket)} context at the gateway`\n                                    }\n                                    classes={{ root: classes.helperTextContext }}\n                                    margin='normal'\n                                    variant='outlined'\n                                />\n                            </Grid>\n                            <Grid item md={4} xs={6}>\n                                <TextField\n                                    fullWidth\n                                    id='version'\n                                    error={Boolean(validity.version)}\n                                    label={(\n                                        <>\n                                            <FormattedMessage\n                                                id='Apis.Create.Components.DefaultAPIForm.version'\n                                                defaultMessage='Version'\n                                            />\n                                            <sup className={classes.mandatoryStar}>*</sup>\n                                        </>\n                                    )}\n                                    name='version'\n                                    value={api.version}\n                                    onChange={onChange}\n                                    InputProps={{\n                                        id: 'itest-id-apiversion-input',\n                                        onBlur: ({ target: { value } }) => {\n                                            validate('version', value);\n                                        },\n                                    }}\n                                    InputLabelProps={{\n                                        for: 'itest-id-apiversion-input',\n                                    }}\n                                    helperText={validity.version && validity.version.message}\n                                    margin='normal'\n                                    variant='outlined'\n                                />\n                            </Grid>\n                        </>\n                    ) : (\n                        <>\n                            <Grid item md={12}>\n                                <TextField\n                                    fullWidth\n                                    id='context'\n                                    error={Boolean(validity.context)}\n                                    label={(\n                                        <>\n                                            <FormattedMessage\n                                                id='Apis.Create.Components.DefaultAPIForm.api.product.context'\n                                                defaultMessage='Context'\n                                            />\n                                            <sup className={classes.mandatoryStar}>*</sup>\n                                        </>\n                                    )}\n                                    name='context'\n                                    value={api.context}\n                                    onChange={onChange}\n                                    InputProps={{\n                                        onBlur: ({ target: { value } }) => {\n                                            validate('context', value);\n                                        },\n                                    }}\n                                    helperText={\n                                        (validity.context\n                                            && validity.context.details.map((detail, index) => {\n                                                return (\n                                                    <div\n                                                        key={detail.message}\n                                                        style={{ marginTop: index !== 0 && '10px' }}\n                                                    >\n                                                        {detail.message}\n                                                    </div>\n                                                );\n                                            }))\n                                        || `API Product will be exposed in ${actualContext(api)} context at the gateway`\n                                    }\n                                    margin='normal'\n                                    variant='outlined'\n                                />\n                            </Grid>\n                        </>\n                    )}\n                </Grid>\n                {appendChildrenBeforeEndpoint && !!children && children}\n                {!isAPIProduct && !hideEndpoint && (\n                    <TextField\n                        fullWidth\n                        id='itest-id-apiendpoint-input'\n                        label='Endpoint'\n                        name='endpoint'\n                        value={api.endpoint}\n                        onChange={onChange}\n                        helperText={\n                            (validity.endpointURL\n                                && validity.endpointURL.details.map((detail, index) => {\n                                    return (\n                                        <div style={{ marginTop: index !== 0 && '10px' }}>\n                                            {detail.message}\n                                        </div>\n                                    );\n                                }))\n                        }\n                        error={Boolean(validity.endpointURL)}\n                        margin='normal'\n                        variant='outlined'\n                        InputProps={{\n                            onBlur: ({ target: { value } }) => {\n                                validate('endpoint', value);\n                            },\n                            endAdornment: (\n                                <InputAdornment position='end'>\n                                    {statusCode && (\n                                        <Chip\n                                            label={statusCode}\n                                            className={isEndpointValid ? classes.endpointValidChip : iff(\n                                                isErrorCode,\n                                                classes.endpointErrorChip, classes.endpointInvalidChip,\n                                            )}\n                                            variant='outlined'\n                                        />\n                                    )}\n                                    {!isWebSocket && (\n                                        <IconButton\n                                            className={isEndpointValid ? classes.iconButtonValid : classes.iconButton}\n                                            aria-label='TestEndpoint'\n                                            onClick={() => testEndpoint(api.endpoint)}\n                                            disabled={isUpdating}\n                                        >\n                                            {isUpdating\n                                                ? <CircularProgress size={20} />\n                                                : (\n                                                    <Icon>\n                                                        check_circle\n                                                    </Icon>\n                                                )}\n                                        </IconButton>\n                                    )}\n                                </InputAdornment>\n                            ),\n                        }}\n                    />\n                )}\n\n                {!appendChildrenBeforeEndpoint && !!children && children}\n            </form>\n            <Grid container direction='row' justify='flex-end' alignItems='center'>\n                <Grid item>\n                    <Typography variant='caption' display='block' gutterBottom>\n                        <sup style={{ color: 'red' }}>*</sup>\n                        {' '}\n                        Mandatory fields\n                    </Typography>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}\n\nDefaultAPIForm.defaultProps = {\n    onValidate: () => {},\n    api: {}, // Uncontrolled component\n    isWebSocket: false,\n};\nDefaultAPIForm.propTypes = {\n    api: PropTypes.shape({}),\n    isAPIProduct: PropTypes.shape({}).isRequired,\n    isWebSocket: PropTypes.shape({}),\n    onChange: PropTypes.func.isRequired,\n    onValidate: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\n/**\n * Base component for all API create forms\n *\n * @param {Object} props title and children components are expected\n * @returns {React.Component} Base element\n */\nexport default function APICreateBase(props) {\n    const { title, children } = props;\n    return (\n        <Grid container spacing={3}>\n            <Grid item xs={12} />\n            {/*\n            Following two grids control the placement of whole create page\n            For centering the content better use `container` props, but instead used an empty grid item for flexibility\n             */}\n            <Grid item sm={false} md={3} />\n            <Grid item sm={12} md={6}>\n                <Grid container spacing={5}>\n                    <Grid item md={12}>\n                        {title}\n                    </Grid>\n                    <Grid item xs={12} md={12}>\n                        <Paper elevation={0}>{children}</Paper>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}\nAPICreateBase.propTypes = {\n    title: PropTypes.element.isRequired,\n    children: PropTypes.arrayOf(PropTypes.element).isRequired,\n};\n","/**\n * Copyright (c) 2019, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport API from 'AppData/api';\n\nimport APIClientFactory from './APIClientFactory';\nimport Utils from './Utils';\nimport Resource from './Resource';\n\n/**\n * An abstract representation of a Scopes\n */\nclass Wsdl extends Resource {\n    /**\n     * Validate a WSDL file or an archive\n     *\n     * @static\n     * @param {*} file WSDL file or archive\n     * @returns {*} WSDL validation response\n     * @memberof Wsdl\n     */\n    static validateFileOrArchive(file) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment(), Utils.CONST.API_CLIENT)\n            .client;\n        const requestBody = {\n            requestBody: {\n                file,\n            },\n        };\n        return apiClient.then((client) => {\n            return client.apis.Validation.validateWSDLDefinition(null, requestBody);\n        });\n    }\n\n    /**\n     * Validate a WSDL URL\n     *\n     * @static\n     * @param {*} url WSDL URL\n     * @returns {*} WSDL validation response\n     * @memberof Wsdl\n     */\n    static validateUrl(url) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment(), Utils.CONST.API_CLIENT)\n            .client;\n        return apiClient.then((client) => {\n            return client.apis.Validation.validateWSDLDefinition(\n                {},\n                {\n                    requestBody: { url },\n                },\n            );\n        });\n    }\n\n    /**\n     * Importing a WSDL and creating an API by a .wsdl file or a WSDL archive zip file\n     *\n     * @static\n     * @param {*} url WSDL url\n     * @param {*} additionalProperties additional properties of the API eg: name, version, context\n     * @param {*} implementationType SOAPTOREST or SOAP\n     * @returns {API} API object which was created\n     * @memberof Wsdl\n     */\n    static importByUrl(url, additionalProperties, implementationType = 'SOAP') {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment(), Utils.CONST.API_CLIENT)\n            .client;\n        return apiClient.then((client) => {\n            const promisedResponse = client.apis.APIs.importWSDLDefinition(\n                {},\n                {\n                    requestBody: {\n                        url,\n                        additionalProperties: JSON.stringify(additionalProperties),\n                        implementationType,\n                    },\n                },\n            );\n            return promisedResponse.then((response) => new API(response.body));\n        });\n    }\n\n    /**\n     * Importing a WSDL and creating an API by a .wsdl file or a WSDL archive zip file\n     *\n     * @static\n     * @param {*} file WSDL file or archive\n     * @param {*} additionalProperties additional properties of the API eg: name, version, context\n     * @param {*} implementationType SOAPTOREST or SOAP\n     * @returns {API} API object which was created\n     * @memberof Wsdl\n     */\n    static importByFileOrArchive(file, additionalProperties, implementationType = 'SOAP') {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment(), Utils.CONST.API_CLIENT)\n            .client;\n        return apiClient.then((client) => {\n            const promisedResponse = client.apis.APIs.importWSDLDefinition(\n                null,\n                {\n                    requestBody: {\n                        file,\n                        additionalProperties: JSON.stringify(additionalProperties),\n                        implementationType,\n                    },\n                },\n            );\n\n            return promisedResponse.then((response) => new API(response.body));\n        });\n    }\n}\n\nexport default Wsdl;\n","/* eslint-disable */\n/*\n * Copyright (c) 2022, WSO2 Inc. (http://www.wso2.com). All Rights Reserved.\n *\n * This software is the property of WSO2 Inc. and its suppliers, if any.\n * Dissemination of any information or reproduction of any material contained\n * herein is strictly forbidden, unless permitted by WSO2 in accordance with\n * the WSO2 Commercial License available at http://wso2.com/licenses.\n * For specific language governing the permissions and limitations under\n * this license, please see the license as well as any agreement you’ve\n * entered into with WSO2 governing the purchase of this software and any\n * associated services.\n */\nimport React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport { spectralSeverityMap as severityMap} from '../Linting/Linting'\n\nconst useStyles = makeStyles((theme) => ({\n\n    tableCell: {\n        border: 'none',\n        fontSize: '10px !important',\n    },\n    headerTableCell: {\n        background: 'transparent',\n        fontSize: 10,\n        fontWeight: 'bold',\n        border: 'none',\n    },\n    tableRow: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.action.hover,\n        },\n        cursor: 'pointer',\n    },\n    tableWrapper: {\n        '& table tr td:first-child': {\n            width: 10,\n        },\n        '& table tr td:nth-child(2)': {\n            width: 10,\n        },\n    },\n    headerTableRow: {\n        display: 'flex',\n    }\n\n}));\n\nexport default function LinterUI(props) {\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n    const { linterResults, handleRowClick } = props;\n    const classes = useStyles();\n\n    function getData(type, line, message, code) {\n        return { type, line, message, code};\n    }\n\n    const columns = [\n        { id: 'type',\n            label: 'Type',\n            minWidth: 50,\n        },\n        { id: 'line',\n            label: 'Line',\n            minWidth: 50\n        },\n        {\n            id: 'message',\n            label: 'Message',\n            minWidth: 170,\n            align: 'left',\n        },\n    ];\n\n    const  rows = linterResults.map((item, index) => getData(\n            severityMap[item.severity],\n            item.range.start.line + 1, \n            item.message,\n            index,\n    ));\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n    return (\n        <Paper sx={{ width: '100%', overflow: 'hidden' }}>\n            <TableContainer sx={{ maxHeight: 440 }} className={classes.tableWrapper}>\n                <Table stickyHeader aria-label='linter-table'>\n                    <TableHead>\n                        <TableRow>\n                            {columns.map((column) => (\n                                <TableCell\n                                    key={column.id}\n                                    align={column.align}\n                                    className={classes.headerTableCell}\n                                    style={{ minWidth: column.minWidth }}\n                                >\n                                    {column.label}\n                                </TableCell>\n                            ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                            .map((row) => {\n                                return (\n                                    <TableRow\n                                        key={row.code}\n                                        className={classes.tableRow}\n                                        onClick={() => handleRowClick(row.line)}\n                                    >\n                                        {columns.map((column) => {\n                                            const value = row[column.id];\n                                            return (\n                                                <TableCell\n                                                    key={column.id}\n                                                    align={column.align}\n                                                    className={classes.tableCell}>\n                                                    {column.format && typeof value === 'number'\n                                                        ? column.format(value)\n                                                        : value}\n                                                </TableCell>\n                                            );\n                                        })}\n                                    </TableRow>\n                                );\n                            })}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                rowsPerPageOptions={[10, 25, 100]}\n                component='div'\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onPageChange={handleChangePage}\n                onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n        </Paper>\n    );\n}\n","/* eslint-disable */\n/*\n * Copyright (c) 2022, WSO2 Inc. (http://www.wso2.com). All Rights Reserved.\n *\n * This software is the property of WSO2 Inc. and its suppliers, if any.\n * Dissemination of any information or reproduction of any material contained\n * herein is strictly forbidden, unless permitted by WSO2 in accordance with\n * the WSO2 Commercial License available at http://wso2.com/licenses.\n * For specific language governing the permissions and limitations under\n * this license, please see the license as well as any agreement you’ve\n * entered into with WSO2 governing the purchase of this software and any\n * associated services.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport {\n    ISpectralDiagnostic,\n} from '@stoplight/spectral-core';\nimport { oas } from '@stoplight/spectral-rulesets';\nimport { FormattedMessage } from 'react-intl';\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { spectralSeverityMap, spectralSeverityNames } from \"./Linting\"\nimport { Grid, Tooltip, Typography } from '@material-ui/core';\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\n// TODO tmkasun: Possible to extend AsyncAPI rule set as well\nconst defaultRuleSet = { extends: [oas], rules: {} };\ntype APILintingProps = {\n    linterResults: ISpectralDiagnostic[],\n    handleChange: Function,\n};\n\nconst useStyles = makeStyles((theme) => ({\n    activeButton: {\n        \"&:selected\": {\n            backgroundColor: theme.palette.background.default,\n        }\n    }\n}));\nexport const APILintingSummary = (props: APILintingProps) => {\n    const { linterResults, handleChange } = props;\n    const classes = useStyles();\n    const [selectedSeverity, setSelectedSeverity] = useState(null);\n    const severityCounts: { [key: number]: number } = {};\n    \n    if (linterResults) {\n        linterResults.forEach(({ severity }) => {\n            severityCounts[severity] = severityCounts[severity] + 1 || 1;\n        });\n    }\n    \n    return (\n        <Box ml={3}>\n            {linterResults === null && (\n                <FormattedMessage\n                    id=\"Apis.Details.APIDefinition.Linting.APILintingSummary.loading\"\n                    defaultMessage=\"Linting . . .\"\n                />\n            )}\n            {linterResults && (\n                <Tooltip title={\n                    Object.entries(spectralSeverityNames).map(([severity, name]) => {\n                        return `${name}:${severityCounts[Number(severity)]||0}${(Number(severity) !== 3) ? \", \": \"\"}` || '-';\n                    })\n                }>\n                    <ToggleButtonGroup\n                        exclusive\n                        value={selectedSeverity}\n                        size=\"small\"\n                        onChange={(event, value) => { \n                            setSelectedSeverity(value);\n                            handleChange(event, value) }}>\n                        {Object.entries(spectralSeverityMap).map(([severity, component]) => (\n                            <ToggleButton\n                                key={Math.random()}\n                                value={String(severity)}\n                            >\n                                <Box ml={1} display=\"flex\">\n                                    {component}\n                                    <Grid item>\n                                        <Box maxWidth='2rem'>\n                                            <Typography noWrap>\n                                                &nbsp;{severityCounts[Number(severity)] || 0}\n                                            </Typography>\n                                        </Box>\n                                    </Grid>\n                                </Box>\n                            </ToggleButton>\n                        ))}\n                    </ToggleButtonGroup>\n                </Tooltip>\n            )}\n        </Box>\n    );\n};\nexport default APILintingSummary;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable array-callback-return */\n/* eslint no-param-reassign: [\"error\", { \"props\": true, \"ignorePropertyModificationsFor\": [\"operationObj\"] }] */\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Icon from '@material-ui/core/Icon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport queryString from 'query-string';\nimport { FormattedMessage } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport cloneDeep from 'lodash.clonedeep';\nimport PropTypes from 'prop-types';\nimport API from 'AppData/api';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport MethodView from 'AppComponents/Apis/Details/ProductResources/MethodView';\nimport { doRedirectToLogin } from 'AppComponents/Shared/RedirectToLogin';\nimport CONSTS from 'AppData/Constants';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\n\nconst useStyles = makeStyles((theme) => ({\n    searchWrapper: {\n        padding: 0,\n        marginTop: theme.spacing(1),\n        '& input': {\n            padding: '12px 14px',\n        },\n        display: 'flex',\n    },\n    paper: {\n        height: '100%',\n        borderRadius: 0,\n    },\n    apiWrapper: {\n        overflowY: 'auto',\n        height: 349,\n    },\n    ResourceWrapper: {\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2),\n        '& .frame': {\n            overflowY: 'auto',\n            height: 328,\n            border: '1px solid ' + theme.palette.grey[400],\n            borderRadius: theme.spacing(1),\n        },\n        '& .frame::-webkit-scrollbar': {\n            '-webkit-appearance': 'none',\n        },\n        '& .frame::-webkit-scrollbar:vertical': {\n            width: 11,\n        },\n        '& .frame::-webkit-scrollbar:horizontal': {\n            height: 11,\n        },\n        '& .frame::-webkit-scrollbar-thumb': {\n            borderRadius: theme.spacing(1),\n            border: '2px solid' + theme.palette.common.white,\n            backgroundColor: theme.palette.grey[400],\n        },\n        '& .frame.rightFrame': {\n            height: 369,\n        },\n    },\n    SelectedResourceWrapper: {\n        overflowY: 'auto',\n        overflowX: 'auto',\n        height: 321,\n    },\n    leftMost: {\n        background: theme.palette.grey[700],\n        color: theme.palette.getContrastText(theme.palette.grey[700]),\n        padding: theme.spacing(1),\n    },\n    rightMost: {\n        background: theme.palette.grey[600],\n        color: theme.palette.getContrastText(theme.palette.grey[600]),\n        padding: theme.spacing(1),\n    },\n    colTitle: {\n        background: theme.palette.grey[400],\n        color: theme.palette.getContrastText(theme.palette.grey[400]),\n        padding: theme.spacing(1),\n        fontWeight: 200,\n        minHeight: 25,\n    },\n    treeItemMain: {\n        background: theme.palette.grey[100],\n        color: theme.palette.getContrastText(theme.palette.grey[100]),\n        padding: theme.spacing(1),\n    },\n    treeItemMainWrapper: {\n        paddingLeft: theme.spacing(2),\n    },\n    treeItem: {\n        '& .material-icons': {\n            fontSize: theme.spacing(2),\n            cursor: 'pointer',\n            marginRight: theme.spacing(1),\n        },\n        display: 'flex',\n        alignItems: 'center',\n        padding: '6px 0',\n    },\n    hr: {\n        flex: 1,\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        color: theme.palette.getContrastText(theme.palette.grey[100]),\n    },\n    methodView: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n    middleText: {\n        flex: 1,\n    },\n    selectedApi: {\n        background: theme.palette.grey[100],\n    },\n    selectedTitle: {\n        padding: theme.spacing(2),\n    },\n    buttonWrapper: {\n        marginTop: theme.spacing(2),\n        textDecorate: 'none',\n    },\n    selectedApiDescription: {\n        padding: '0px 16px',\n    },\n    messageWrapper: {\n        padding: theme.spacing(3),\n    },\n    tootBar: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        alignItems: 'center',\n        margin: '0 16px',\n        background: theme.palette.grey[100],\n        color: theme.palette.getContrastText(theme.palette.grey[100]),\n        padding: 5,\n        borderRadius: 5,\n        '& a': {\n            cursor: 'pointer',\n            display: 'flex',\n            justifyContent: 'flex-end',\n            alignItems: 'center',\n        },\n    },\n    inactiveIcon: {\n        color: theme.palette.grey[300],\n    },\n}));\n\nconst resourceMethod = {\n    POST: 'post',\n    PUT: 'put',\n    GET: 'get',\n    DELETE: 'delete',\n    PATCH: 'patch',\n    OPTIONS: 'options',\n    HEAD: 'head',\n};\n\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nfunction ProductResourcesEdit(props) {\n    const classes = useStyles();\n    const {\n        apiResources, setApiResources, isStateCreate, api, resourceNotFountMessage,\n    } = props;\n\n    // Define states\n    const [allApis, setAllApis] = useState([]);\n    const [notFound, setNotFound] = useState(false);\n    const [searchText, setSearchText] = useState('');\n    const [selectedApiPaths, setSelectedApiPaths] = useState([]);\n    const [selectedApi, setSelectedApi] = useState(null);\n    const [fromSearch, setFromSearch] = useState(false);\n    // Initialize the rest api libraries\n    const apiRestClient = new API();\n\n    /**\n     * This method is filtering apis base on the searchText entered. In no searchText provided it will give all apis.\n     *\n     * @param {*} [text=null]\n     * @returns a promise\n     */\n    const filterAPIs = (text = null) => {\n        if (text) {\n            // Build the search query and update\n            const inputValue = text.trim().toLowerCase();\n            const composeQuery = '?query=name:' + inputValue + ' type:HTTP';\n            const composeQueryJSON = queryString.parse(composeQuery);\n            // TODO we need to make the limit and offset changeable from the UI ( paggination )\n            composeQueryJSON.limit = 100;\n            composeQueryJSON.offset = 0;\n            return API.search(composeQueryJSON);\n        } else {\n            return API.all({\n                query: {\n                    type: 'HTTP',\n                },\n            });\n        }\n    };\n\n    const isValidHttpVerb = (innerKey) => {\n        if (innerKey === resourceMethod.DELETE || innerKey === resourceMethod.POST\n                || innerKey === resourceMethod.GET || innerKey === resourceMethod.PUT\n                || innerKey === resourceMethod.PATCH || innerKey === resourceMethod.OPTIONS\n                || innerKey === resourceMethod.HEAD) {\n            return true;\n        }\n        return false;\n    };\n\n    const addPropsToSelectedApiPaths = (paths, apiId, latestApiResources = apiResources) => {\n        /* Add checked field to each resource object */\n        Object.keys(paths).map((key) => {\n            const methodObj = paths[key];\n            Object.keys(methodObj).map((innerKey) => {\n                // We are setting the check property at this level because we need to\n                // add resources for each verb ( post, get, put etc.. )\n                if (isValidHttpVerb(innerKey)) {\n                    methodObj[innerKey].checked = false;\n\n                    // We need to check the latestApiResources for the same\n                    // API/Resource Name / Verb and  indicate it differently\n                    // Loop latestApiResources object\n                    const target = key;\n                    const verb = innerKey;\n                    let resourceFound = false;\n                    if (latestApiResources) {\n                        Object.keys(latestApiResources).map((resourcekey) => {\n                            const apiResource = latestApiResources[resourcekey];\n\n                            // Check if the the api slected from UI is same as the operation api id checking\n                            if (apiResource && apiId === apiResource.apiId) {\n                                // API is the same\n                                Object.keys(apiResource.operations).map((operationKey) => {\n                                    const operation = apiResource.operations[operationKey];\n                                    if (\n                                        operation\n                                        && operation.target === target\n                                        && operation.verb.toLowerCase() === verb.toLowerCase()\n                                    ) {\n                                        // Operation is already there\n                                        resourceFound = true;\n                                    }\n                                });\n                            }\n                        });\n                    }\n                    if (resourceFound) {\n                        methodObj[innerKey].allreadyAdded = true;\n                    } else {\n                        methodObj[innerKey].allreadyAdded = false;\n                    }\n                }\n            });\n        });\n        setSelectedApiPaths(paths);\n    };\n\n    // Get the api swagger after an api is selected\n    const getApiSwagger = (apiSelected) => {\n        const { id } = apiSelected;\n        const promisedAPI = apiRestClient.getSwagger(id);\n        promisedAPI\n            .then((response) => {\n                if (response.obj.paths !== undefined) {\n                    addPropsToSelectedApiPaths(response.obj.paths, id);\n                    setSelectedApi(apiSelected);\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') console.log(error);\n                const { status } = error;\n                if (status === 404) {\n                    setNotFound(true);\n                } else if (status === 401) {\n                    doRedirectToLogin();\n                }\n            });\n    };\n    const handleSearchTextChange = (event) => {\n        const apiPromise = filterAPIs(event.target.value);\n        apiPromise\n            .then((response) => {\n                const {\n                    body: { list },\n                } = response;\n                const filteredList = list.filter((theApi) => theApi.status !== 'PROTOTYPED');\n                if (filteredList.length > 0) {\n                    setSelectedApi(list[0]);\n                }\n                setAllApis(filteredList);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') console.log(error);\n                const { status } = error;\n                if (status === 404) {\n                    setNotFound(true);\n                } else if (status === 401) {\n                    doRedirectToLogin();\n                }\n            });\n        setSearchText(event.target.value);\n        setFromSearch(event.target.value);\n    };\n    const updateResourceTree = (resourceToAdd, action, inputApiResources = null) => {\n        let updateStateHere = false;\n        let newApiResources = null;\n        if (!inputApiResources) {\n            // If a copy of the state variable is not passed from the calling method we\n            // have to make a copy inside here before doing modifications to that\n            newApiResources = cloneDeep(apiResources);\n            updateStateHere = true;\n        } else {\n            newApiResources = inputApiResources;\n        }\n        const {\n            target, verb, apiId, name, version,\n        } = resourceToAdd;\n        const newResource = {\n            id: null,\n            target,\n            verb: verb.toUpperCase(),\n            authType: null,\n            throttlingPolicy: null,\n            scopes: [],\n        };\n        let apiFound = false;\n\n        // Loop copy of apiResources object\n        Object.keys(newApiResources).map((key, indexA) => {\n            const apiResource = newApiResources[key];\n\n            // Check if the the api slected from UI is same as the operation api id trying to remove.\n            if (apiResource && apiId === apiResource.apiId) {\n                apiFound = true;\n                let operationFound = false;\n                Object.keys(apiResource.operations).map((innerKey, indexB) => {\n                    const operation = apiResource.operations[innerKey];\n                    if (\n                        operation\n                        && operation.target === target\n                        && operation.verb.toLowerCase() === verb.toLowerCase()\n                    ) {\n                        // Operation is already there\n                        operationFound = true;\n                        if (action === 'remove') {\n                            if (apiResource.operations.length > 1) {\n                                apiResource.operations.splice(indexB, 1);\n                            } else {\n                                newApiResources.splice(indexA, 1);\n                            }\n                        }\n                    }\n                });\n                // Operation not added .. so we need to add that\n                if (!operationFound && action === 'add') {\n                    apiResource.operations.push(newResource);\n                }\n            }\n        });\n\n        if (!apiFound) {\n            // Add api object\n            newApiResources.push({\n                name,\n                apiId,\n                operations: [newResource],\n                version,\n            });\n        }\n        // When we are adding the resources in a loop we do not care about the return but we simply set the state here.\n        if (updateStateHere) {\n            setApiResources(newApiResources);\n            // We need to call this in order to set other properties\n            if (apiId === selectedApi.id) {\n                addPropsToSelectedApiPaths(cloneDeep(selectedApiPaths), apiId, newApiResources);\n            }\n        }\n        return newApiResources;\n    };\n\n    const updateCheckBox = (key, innerKey) => {\n        // we need to copy the object from the state and modify it before set it to the state\n        const prevSelectedApiPaths = { ...selectedApiPaths };\n\n        // Now we inverse the checked value\n        prevSelectedApiPaths[key][innerKey].checked = !prevSelectedApiPaths[key][innerKey].checked;\n\n        // Then we set state\n        setSelectedApiPaths(prevSelectedApiPaths);\n    };\n    const addSelectedResourcesToTree = (addAll = false) => {\n        /* Add checked field to each resource object */\n        const newApiResources = cloneDeep(apiResources);\n        Object.keys(selectedApiPaths).map((key) => {\n            const methodObj = selectedApiPaths[key];\n            Object.keys(methodObj).map((innerKey) => {\n                // We are setting the check property at this level because we need to\n                // add resources for each verb ( post, get, put etc.. )\n                if ((methodObj[innerKey].checked || addAll) && isValidHttpVerb(innerKey)) {\n                    // We need to add this to apiResources array\n                    updateResourceTree(\n                        {\n                            target: key,\n                            verb: innerKey,\n                            apiId: selectedApi.id,\n                            name: selectedApi.name,\n                            version: selectedApi.version,\n                        },\n                        'add',\n                        newApiResources,\n                    );\n                }\n            });\n        });\n        setApiResources(newApiResources);\n        addPropsToSelectedApiPaths(cloneDeep(selectedApiPaths), selectedApi.id, newApiResources);\n    };\n    useEffect(() => {\n        // Get all apis\n        const apiPromise = filterAPIs();\n        apiPromise\n            .then((response) => {\n                const {\n                    body: { list },\n                } = response;\n                const filteredList = list.filter((theApi) => theApi.lifeCycleStatus !== 'PROTOTYPED' &&\n                    theApi.lifeCycleStatus !== 'RETIRED' && theApi.lifeCycleStatus !== 'DEPRECATED'\n                );\n\n                setAllApis(filteredList);\n                if (filteredList.length > 0) {\n                    setSelectedApi(filteredList[0]);\n                    getApiSwagger(filteredList[0]);\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') console.log(error);\n                const { status } = error;\n                if (status === 404) {\n                    setNotFound(true);\n                } else if (status === 401) {\n                    doRedirectToLogin();\n                }\n            });\n    }, []);\n    if (notFound) {\n        return <ResourceNotFound message={resourceNotFountMessage} />;\n    }\n    return (\n        <>\n            {allApis.length === 0 && !fromSearch ? (\n                <Grid container>\n                    <Typography className={classes.messageWrapper}>\n                        <FormattedMessage\n                            id='Apis.Details.ProductResources.ProductResourcesWorkspace.ApisnotFound'\n                            defaultMessage='No REST APIs are created yet'\n                        />\n                    </Typography>\n                </Grid>\n            ) : (\n                <>\n                    {!isStateCreate && (\n                        <Grid container>\n                            <>\n                                <Grid item xs={8} className={classes.leftMost}>\n                                    <Typography>\n                                        <FormattedMessage\n                                            id='Apis.Details.ProductResources.ProductResourcesWorkspace.find.and.select'\n                                            defaultMessage='Find and select resources for the API Product'\n                                        />\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={4} className={classes.rightMost}>\n                                    <Typography>\n                                        <FormattedMessage\n                                            id='Apis.Details.ProductResources.ProductResourcesWorkspace.selected'\n                                            defaultMessage='Selected resources of API Product'\n                                        />\n                                    </Typography>\n                                </Grid>\n                            </>\n                        </Grid>\n                    )}\n                    <Grid container>\n                        {/* ************************************************ */}\n                        {/* 1st column API search and select column          */}\n                        {/* ************************************************ */}\n                        <Grid item xs={3}>\n                            <div className={classes.colTitle}>\n                                <Typography>\n                                    <FormattedMessage\n                                        id='Apis.Details.ProductResources.ProductResourcesWorkspace.select.an.api'\n                                        defaultMessage='Select an API'\n                                    />\n                                </Typography>\n                            </div>\n                            <Paper>\n                                <div className={classes.searchWrapper}>\n                                    <TextField\n                                        id='outlined-full-width'\n                                        label='API'\n                                        style={{ margin: 8 }}\n                                        placeholder='Filter APIs'\n                                        helperText='Filter by name'\n                                        onChange={handleSearchTextChange}\n                                        value={searchText}\n                                        fullWidth\n                                        margin='normal'\n                                        variant='outlined'\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    />\n                                </div>\n                                <div className={classes.apiWrapper}>\n                                    <List dense component='nav'>\n                                        {allApis.map((apiObj) => {\n                                            const labelId = `checkbox-list-label-${apiObj.id}`;\n\n                                            return (\n                                                <ListItem\n                                                    key={apiObj.id}\n                                                    role={undefined}\n                                                    dense\n                                                    button\n                                                    className={\n                                                        selectedApi\n                                                        && apiObj.id === selectedApi.id\n                                                        && classes.selectedApi\n                                                    }\n                                                >\n                                                    <ListItemText\n                                                        id={labelId}\n                                                        primary={apiObj.name}\n                                                        secondary={`${apiObj.version} - ${apiObj.context}`}\n                                                        onClick={() => getApiSwagger(apiObj)}\n                                                    />\n                                                </ListItem>\n                                            );\n                                        })}\n                                    </List>\n                                </div>\n                            </Paper>\n                        </Grid>\n                        {/* ************************************************ */}\n                        {/* 2nd column Resource Selection                    */}\n                        {/* ************************************************ */}\n                        <Grid item xs={5}>\n                            <Paper className={classes.paper}>\n                                <div className={classes.colTitle}>\n                                    <Typography>\n                                        <FormattedMessage\n                                            id='Apis.Details.ProductResources.ProductResourcesEdit.api.resources'\n                                            defaultMessage='Select API Resources'\n                                        />\n                                    </Typography>\n                                </div>\n                                {selectedApi && (\n                                    <Typography variant='h5' component='h2' className={classes.selectedTitle}>\n                                        {selectedApi.name}\n                                    </Typography>\n                                )}\n                                <div className={classes.tootBar}>\n                                    <Button\n                                        onClick={() => addSelectedResourcesToTree()}\n                                        onKeyDown={() => addSelectedResourcesToTree()}\n                                        id='add-selected-resources'\n                                    >\n                                        <Typography variant='body2'>\n                                            <FormattedMessage\n                                                id='Apis.Details.ProductResources.ProductResourcesWorkspace.\n                                        toolbar.add.selected'\n                                                defaultMessage='Add Selected'\n                                            />\n                                        </Typography>\n                                        <Icon>fast_forward</Icon>\n                                    </Button>\n                                    <VerticalDivider />\n                                    <Button\n                                        onClick={() => addSelectedResourcesToTree(true)}\n                                        onKeyDown={() => addSelectedResourcesToTree(true)}\n                                        id='add-all-resources-btn'\n                                    >\n                                        <Typography variant='body2'>\n                                            <FormattedMessage\n                                                id='Apis.Details.ProductResources.ProductResourcesWorkspace.toolbar.\n                                                add.all'\n                                                defaultMessage='Add All'\n                                            />\n                                        </Typography>\n                                        <Icon>fast_forward</Icon>\n                                    </Button>\n                                </div>\n                                <div className={classes.ResourceWrapper}>\n                                    <div className='frame'>\n                                        <List dense id='resource-wrapper'>\n                                            {Object.keys(selectedApiPaths).map((key) => {\n                                                const path = selectedApiPaths[key];\n                                                const labelId = `checkbox-list-label_${key}`;\n                                                return Object.keys(path).map((innerKey) => {\n                                                    const methodObj = path[innerKey];\n                                                    return (\n                                                        CONSTS.HTTP_METHODS.includes(innerKey) && (\n                                                            <ListItem\n                                                                key={`${innerKey} - ${key}`}\n                                                                role={undefined}\n                                                                dense\n                                                            >\n                                                                <ListItemIcon style={{ minWidth: 35 }}>\n                                                                    <Checkbox\n                                                                        edge='start'\n                                                                        checked={methodObj.checked}\n                                                                        tabIndex={-1}\n                                                                        disableRipple\n                                                                        onChange={() => updateCheckBox(key, innerKey)}\n                                                                        color='primary'\n                                                                        disabled={methodObj.allreadyAdded}\n                                                                        inputProps={\n                                                                            {\n                                                                                'aria-label': 'Select API resource',\n                                                                            }\n                                                                        }\n                                                                    />\n                                                                </ListItemIcon>\n                                                                <ListItemText\n                                                                    id={labelId + innerKey}\n                                                                    primary={(\n                                                                        <div>\n                                                                            <MethodView\n                                                                                method={innerKey}\n                                                                                className={classes.methodView}\n                                                                            />\n                                                                            <span>{key}</span>\n                                                                        </div>\n                                                                    )}\n                                                                    secondary={\n                                                                        methodObj['x-auth-type']\n                                                                    && methodObj['x-throttling-tier']\n                                                                    && `${methodObj['x-auth-type']} - ${\n                                                                        methodObj['x-throttling-tier']\n                                                                    }`\n                                                                    }\n                                                                    onClick={() => updateResourceTree(\n                                                                        {\n                                                                            target: key,\n                                                                            verb: innerKey,\n                                                                            apiId: selectedApi.id,\n                                                                            name: selectedApi.name,\n                                                                            version: selectedApi.version,\n                                                                        },\n                                                                        'add',\n                                                                    )}\n                                                                    className={classes.middleText}\n                                                                />\n                                                                <ListItemSecondaryAction>\n                                                                    {methodObj.allreadyAdded && (\n                                                                        <Icon className={classes.inactiveIcon}>\n                                                                            chevron_right\n                                                                        </Icon>\n                                                                    )}\n                                                                    {!methodObj.allreadyAdded && (\n                                                                        <IconButton\n                                                                            edge='end'\n                                                                            aria-label='comments'\n                                                                            onClick={() => updateResourceTree(\n                                                                                {\n                                                                                    target: key,\n                                                                                    verb: innerKey,\n                                                                                    apiId: selectedApi.id,\n                                                                                    name: selectedApi.name,\n                                                                                    version: selectedApi.version,\n                                                                                },\n                                                                                'add',\n                                                                            )}\n                                                                        >\n                                                                            <Icon>chevron_right</Icon>\n                                                                        </IconButton>\n                                                                    )}\n                                                                </ListItemSecondaryAction>\n                                                            </ListItem>\n                                                        )\n                                                    );\n                                                });\n                                            })}\n                                        </List>\n                                    </div>\n                                </div>\n                            </Paper>\n                        </Grid>\n                        {/* ************************************************ */}\n                        {/* Third column with  selected resources            */}\n                        {/* ************************************************ */}\n                        <Grid item xs={4}>\n                            <Paper className={classes.paper}>\n                                <div className={classes.colTitle} />\n                                {api.name && (\n                                    <>\n                                        <Typography variant='h5' component='h2' className={classes.selectedTitle}>\n                                            {api.name}\n                                        </Typography>\n                                    </>\n                                )}\n                                <div className={classes.ResourceWrapper}>\n                                    <div className='frame rightFrame'>\n                                        {allApis.length > 0 && apiResources && apiResources.length === 0 && (\n                                            <div className={classes.messageWrapper}>\n                                                <Typography component='p'>\n                                                    <FormattedMessage\n                                                        id='Apis.Details.ProductResources.ProductResourcesWorkspace.\n                                                    empty.title'\n                                                        defaultMessage='Use the left side panel to add resources'\n                                                    />\n                                                </Typography>\n                                            </div>\n                                        )}\n                                        {apiResources\n                                        && apiResources.length > 0\n                                        && Object.keys(apiResources).map((key) => {\n                                            const apiResource = apiResources[key];\n                                            return (\n                                                <div key={apiResource.name}>\n                                                    <div className={classes.treeItemMain}>\n                                                        <Typography component='p'>\n                                                            {apiResource.name}\n                                                            {' - '}\n                                                            {apiResource.version}\n                                                        </Typography>\n                                                    </div>\n                                                    <div className={classes.treeItemMainWrapper}>\n                                                        {Object.keys(apiResource.operations).map((innerKey) => {\n                                                            const operation = apiResource.operations[innerKey];\n                                                            const { target, verb } = operation;\n                                                            return (\n                                                                <div\n                                                                    key={`${apiResource.apiId}_${verb}_${target}`}\n                                                                    className={classes.treeItem}\n                                                                >\n                                                                    <MethodView\n                                                                        method={verb}\n                                                                        className={classes.methodView}\n                                                                    />\n                                                                    <Typography variant='body2'>{target}</Typography>\n                                                                    <hr className={classes.hr} />\n                                                                    <IconButton\n                                                                        onClick={() => updateResourceTree(\n                                                                            {\n                                                                                target,\n                                                                                verb,\n                                                                                apiId: apiResource.apiId,\n                                                                                name: apiResource.name,\n                                                                                version: apiResource.version,\n                                                                            },\n                                                                            'remove',\n                                                                        )}\n                                                                        aria-label={\n                                                                            'delete resource ' + apiResource.name\n                                                                        }\n                                                                    >\n                                                                        <Icon>\n                                                                            delete\n                                                                        </Icon>\n                                                                    </IconButton>\n                                                                </div>\n                                                            );\n                                                        })}\n                                                    </div>\n                                                </div>\n                                            );\n                                        })}\n                                    </div>\n                                </div>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </>\n            )}\n        </>\n    );\n}\nProductResourcesEdit.propTypes = {\n    apiResources: PropTypes.instanceOf(Array).isRequired,\n    setApiResources: PropTypes.func.isRequired,\n    isStateCreate: PropTypes.isRequired,\n    api: PropTypes.isRequired,\n    resourceNotFountMessage: PropTypes.string.isRequired,\n};\nexport default ProductResourcesEdit;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { useTheme } from '@material-ui/styles';\nimport Chip from '@material-ui/core/Chip';\nimport PropTypes from 'prop-types';\nimport Configurations from 'Config';\n\nfunction MethodView(props) {\n    console.info(Configurations.app);\n    const theme = useTheme();\n    const { method, className } = props;\n    let chipColor = theme.custom.resourceChipColors ? theme.custom.resourceChipColors[method.toLowerCase()] : null;\n    let chipTextColor = '#000000';\n    if (!chipColor) {\n        console.log('Check the theme settings. The resourceChipColors is not populated properly');\n        chipColor = '#cccccc';\n    } else {\n        chipTextColor = theme.palette.getContrastText(theme.custom.resourceChipColors[method.toLowerCase()]);\n    }\n    return (\n        <Chip\n            label={method}\n            className={className || ''}\n            style={{\n                backgroundColor: chipColor, color: chipTextColor, height: 20, width: 65,\n            }}\n        />\n    );\n}\nMethodView.propTypes = {\n    className: PropTypes.string.isRequired,\n    method: PropTypes.string.isRequired,\n};\n\nexport default MethodView;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Radio from '@material-ui/core/Radio';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFile from '@material-ui/icons/InsertDriveFile';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport CheckIcon from '@material-ui/icons/Check';\n\nimport APIValidation from 'AppData/APIValidation';\nimport Wsdl from 'AppData/Wsdl';\nimport Banner from 'AppComponents/Shared/Banner';\nimport DropZoneLocal, { humanFileSize } from 'AppComponents/Shared/DropZoneLocal';\n\nconst useStyles = makeStyles((theme) => ({\n    mandatoryStar: {\n        color: theme.palette.error.main,\n    },\n}));\n\n/**\n * Sub component of API Create using WSDL UI, This is handling the taking input of WSDL file or URL from the user\n * In the create API using WSDL wizard first step out of 2 steps\n * @export\n * @param {*} props\n * @returns {React.Component} @inheritdoc\n */\nexport default function ProvideWSDL(props) {\n    const { apiInputs, inputsDispatcher, onValidate } = props;\n    const isFileInput = apiInputs.inputType === 'file';\n    const isGenerateRESTAPI = apiInputs.type === 'SOAPTOREST';\n    const classes = useStyles();\n    const [isError, setValidity] = useState(); // If valid value is `null` else an error object will be there\n    const [isValidating, setIsValidating] = useState(false);\n    const isCreateMode = apiInputs.mode === 'create';\n\n    /**\n     * Handles WSDL validation response and returns the state.\n     *\n     * @param {*} response WSDL validation response\n     * @param {string} type of the input; file or url\n     * @returns {boolean} validation status\n     */\n    function handleWSDLValidationResponse(response, type) {\n        const isWSDLValid = response.body.isValid;\n        let success = false;\n        if (isWSDLValid) {\n            if (type === 'file') {\n                setValidity({ ...isError, file: null });\n            } else {\n                setValidity({ ...isError, url: null });\n            }\n            success = true;\n        } else if (type === 'file') {\n            setValidity({ ...isError, file: { message: 'WSDL content validation failed!' } });\n        } else {\n            setValidity({ ...isError, url: { message: 'Invalid WSDL URL!' } });\n        }\n        onValidate(isWSDLValid);\n        setIsValidating(false);\n        return success;\n    }\n\n    /**\n     * Handles WSDL validation error response.\n     *\n     * @param error {*} error object\n     * @param type {string} file/url type\n     */\n    function handleWSDLValidationErrorResponse(error, type) {\n        let message = 'Error occurred during validation';\n        if (error.response && error.response.body.description) {\n            message = error.response.body.description;\n        }\n        if (type === 'file') {\n            setValidity({ ...isError, file: { message } });\n        } else {\n            setValidity({ ...isError, url: { message } });\n        }\n        setIsValidating(false);\n    }\n\n    /**\n     * Trigger the onValidate call back after validating WSDL url from the state.\n     * Do the validation state aggregation and call the onValidate method with aggregated value\n     * @param {Object} state Validation state object\n     */\n    function validateUrl(state) {\n        if (state === null) {\n            setIsValidating(true);\n            Wsdl.validateUrl(apiInputs.inputValue).then((response) => {\n                handleWSDLValidationResponse(response, 'url');\n            }).catch((error) => {\n                handleWSDLValidationErrorResponse(error, 'url');\n            });\n        } else {\n            setValidity({ ...isError, url: state });\n            onValidate(false);\n        }\n    }\n\n    /**\n     * Trigger the provided onValidate callback after validating the provided WSDL file.\n     * Do the validation state aggregation and call the onValidate method with aggregated value\n     * @param {*} file WSDL file or archive\n     * @param {Object} state Validation state object\n     */\n    function validateFileOrArchive(file, state = null) {\n        if (state === null) {\n            setIsValidating(true);\n            Wsdl.validateFileOrArchive(file).then((response) => {\n                if (handleWSDLValidationResponse(response, 'file')) {\n                    inputsDispatcher({ action: 'inputValue', value: file });\n                }\n            }).catch((error) => {\n                handleWSDLValidationErrorResponse(error, 'file');\n            });\n        } else {\n            setValidity({ ...isError, file: state });\n            onValidate(false);\n        }\n    }\n\n    /**\n     *\n     *\n     * @param {*} files\n     */\n    function onDrop(files) {\n        // Why `files[0]` below is , We only handle one wsdl file at a time, So if use provide multiple, We would only\n        // accept the first file. This information is shown in the dropdown helper text\n        validateFileOrArchive(files[0]);\n    }\n\n    /**\n     *  Render uploaded WSDL schema list\n     */\n    function renderUploadedList() {\n        return (\n            <List>\n                <ListItem key={apiInputs.inputValue.path}>\n                    <ListItemAvatar>\n                        <Avatar>\n                            <InsertDriveFile />\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText\n                        primary={`${apiInputs.inputValue.path} - ${humanFileSize(apiInputs.inputValue.size)}`}\n                    />\n                    <ListItemSecondaryAction>\n                        <IconButton\n                            edge='end'\n                            aria-label='delete'\n                            onClick={() => {\n                                inputsDispatcher({ action: 'inputValue', value: null });\n                                inputsDispatcher({ action: 'isFormValid', value: false });\n                            }}\n                        >\n                            <DeleteIcon />\n                        </IconButton>\n                    </ListItemSecondaryAction>\n                </ListItem>\n            </List>\n        );\n    }\n\n    const dropBoxControlLabel = isGenerateRESTAPI ? (\n        <FormattedMessage\n            id='Apis.Create.WSDL.Steps.ProvideWSDL.Input.file.dropzone'\n            defaultMessage='Drag & Drop WSDL file {break} -or-'\n            values={{ break: <br /> }}\n        />\n    ) : (\n        <FormattedMessage\n            id='Apis.Create.WSDL.Steps.ProvideWSDL.Input.file.archive.dropzone'\n            defaultMessage='Drag & Drop WSDL file/archive {break} -or-'\n            values={{ break: <br /> }}\n        />\n    );\n\n    /**\n     * Render file upload UI.\n     *\n     */\n    function renderFileUpload() {\n        if (apiInputs.inputValue) {\n            return renderUploadedList();\n        }\n        // TODO: Pass message saying accepting only one file ~tmkb\n        return (\n            <DropZoneLocal\n                error={isError && isError.file}\n                onDrop={onDrop}\n                files={apiInputs.inputValue}\n                accept='.bz,.bz2,.gz,.rar,.tar,.zip,.7z,.wsdl'\n            >\n                {isValidating ? (<CircularProgress />)\n                    : (\n                        <>\n                            { dropBoxControlLabel }\n                            <Button\n                                color='primary'\n                                variant='contained'\n                            >\n                                <FormattedMessage\n                                    id='Apis.Create.WSDL.Steps.ProvideWSDL.Input.file.upload'\n                                    defaultMessage='Browse File to Upload'\n                                />\n                            </Button>\n                        </>\n                    )}\n            </DropZoneLocal>\n        );\n    }\n\n    let urlStateEndAdornment = null;\n    if (isValidating) {\n        urlStateEndAdornment = (\n            <InputAdornment position='end'>\n                <CircularProgress />\n            </InputAdornment>\n        );\n    } else if (isError && isError.url) {\n        urlStateEndAdornment = (\n            <InputAdornment position='end'>\n                <ErrorOutlineIcon fontSize='large' color='error' />\n            </InputAdornment>\n        );\n    } else if (isError && !isError.url) {\n        urlStateEndAdornment = (\n            <InputAdornment position='end'>\n                <CheckIcon fontSize='large' color='primary' />\n            </InputAdornment>\n        );\n    }\n\n    return (\n        <>\n            <Grid container spacing={5}>\n                {isCreateMode\n                && (\n                    <Grid item md={12}>\n                        <FormControl component='fieldset'>\n                            <FormLabel component='legend'>\n                                <>\n                                    <sup className={classes.mandatoryStar}>*</sup>\n                                    {' '}\n                                    <FormattedMessage\n                                        id='Apis.Create.WSDL.Steps.ProvideWSDL.implementation.type'\n                                        defaultMessage='Implementation Type'\n                                    />\n                                </>\n                            </FormLabel>\n                            <RadioGroup\n                                aria-label='Implementation type'\n                                value={apiInputs.type ? apiInputs.type : 'SOAP'}\n                                onChange={\n                                    (event) => {\n                                        inputsDispatcher({ action: 'type', value: event.target.value });\n                                        inputsDispatcher({ action: 'isFormValid', value: false });\n                                        inputsDispatcher({ action: 'inputValue', value: null });\n                                        inputsDispatcher({ action: 'inputType', value: 'url' });\n                                    }\n                                }\n                            >\n                                <FormControlLabel\n                                    value='SOAP'\n                                    control={<Radio color='primary' />}\n                                    label={(\n                                        <FormattedMessage\n                                            id='Apis.Create.WSDL.Steps.ProvideWSDL.passthrough.label'\n                                            defaultMessage='Pass Through'\n                                        />\n                                    )}\n                                />\n                                <FormControlLabel\n                                    value='SOAPTOREST'\n                                    control={<Radio color='primary' />}\n                                    label={(\n                                        <FormattedMessage\n                                            id='Apis.Create.WSDL.Steps.ProvideWSDL.SOAPtoREST.label'\n                                            defaultMessage='Generate REST APIs'\n                                        />\n                                    )}\n                                />\n                            </RadioGroup>\n                        </FormControl>\n                    </Grid>\n                )}\n                <Grid item md={12}>\n                    <FormControl component='fieldset'>\n                        <FormLabel component='legend'>\n                            <>\n                                <sup className={classes.mandatoryStar}>*</sup>\n                                {' '}\n                                <FormattedMessage\n                                    id='Apis.Create.WSDL.Steps.ProvideWSDL.Input.type'\n                                    defaultMessage='Input Type'\n                                />\n                            </>\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='Input type'\n                            value={apiInputs.inputType}\n                            onChange={(event) => inputsDispatcher({ action: 'inputType', value: event.target.value })}\n                        >\n                            <FormControlLabel\n                                value='url'\n                                control={<Radio color='primary' />}\n                                label={(\n                                    <FormattedMessage\n                                        id='Apis.Create.WSDL.Steps.ProvideWSDL.url.label'\n                                        defaultMessage='WSDL URL'\n                                    />\n                                )}\n                            />\n                            <FormControlLabel\n                                value='file'\n                                control={<Radio color='primary' />}\n                                label={(\n                                    <FormattedMessage\n                                        id='Apis.Create.WSDL.Steps.ProvideWSDL.file.label.wsdl.file.archive'\n                                        defaultMessage='WSDL File/Archive'\n                                    />\n                                )}\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>\n                {isError && isError.file\n                    && (\n                        <Grid item md={11}>\n                            <Banner\n                                onClose={() => setValidity({ file: null })}\n                                disableActions\n                                dense\n                                paperProps={{ elevation: 1 }}\n                                type='error'\n                                message={isError.file.message}\n                            />\n                        </Grid>\n                    )}\n                <Grid item md={11}>\n                    {isFileInput ? renderFileUpload()\n                        : (\n                            <TextField\n                                autoFocus\n                                id='outlined-full-width'\n                                label='WSDL URL'\n                                placeholder='Enter WSDL URL'\n                                fullWidth\n                                margin='normal'\n                                variant='outlined'\n                                onChange={({ target: { value } }) => inputsDispatcher({ action: 'inputValue', value })}\n                                value={apiInputs.inputValue}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                                InputProps={{\n                                    onBlur: ({ target: { value } }) => {\n                                        validateUrl(APIValidation.url.required().validate(value).error);\n                                    },\n                                    endAdornment: urlStateEndAdornment,\n                                }}\n                                helperText={\n                                    (isError && isError.url && isError.url.message) || 'Click away to validate the URL'\n                                }\n                                error={isError && Boolean(isError.url)}\n                                disabled={isValidating}\n                            />\n                        )}\n\n                </Grid>\n            </Grid>\n        </>\n    );\n}\n\nProvideWSDL.defaultProps = {\n    onValidate: () => { },\n};\nProvideWSDL.propTypes = {\n    apiInputs: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n        mode: PropTypes.string,\n    }).isRequired,\n    inputsDispatcher: PropTypes.func.isRequired,\n    onValidate: PropTypes.func,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Radio from '@material-ui/core/Radio';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport CheckIcon from '@material-ui/icons/Check';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFile from '@material-ui/icons/InsertDriveFile';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport Banner from 'AppComponents/Shared/Banner';\nimport APIValidation from 'AppData/APIValidation';\nimport API from 'AppData/api';\nimport DropZoneLocal, { humanFileSize } from 'AppComponents/Shared/DropZoneLocal';\nimport CheckCircleSharpIcon from '@material-ui/icons/CheckCircleSharp';\nimport Chip from '@material-ui/core/Chip';\n\nconst useStyles = makeStyles((theme) => ({\n    mandatoryStar: {\n        color: theme.palette.error.main,\n    },\n}));\n\n/**\n * Sub component of API Create using AsyncAPI UI, This is handling the taking input of WSDL file or URL from the user\n * In the create API using AsyncAPI wizard first step out of 2 steps\n * @export\n * @param {*} props\n * @returns {React.Component} @inheritdoc\n */\nexport default function ProvideAsyncAPI(props) {\n    const { apiInputs, inputsDispatcher, onValidate } = props;\n    const isFileInput = apiInputs.inputType === 'file';\n    const { inputType, inputValue } = apiInputs;\n    const classes = useStyles();\n    // If valid value is `null`,that means valid, else an error object will be there\n    const [isValid, setValidity] = useState({});\n    const [isValidating, setIsValidating] = useState(false);\n    const [validationErrors, setValidationErrors] = useState([]);\n    const [gatewayVendor, setGatewayVendor] = useState('wso2');\n\n    /**\n     *\n     *\n     * @param {*} files\n     */\n    function onDrop(files) {\n        setIsValidating(true);\n\n        // Why `files.pop()` below is , We only handle one AsyncAPI file at a time,\n        // So if use provide multiple, We would only\n        // accept the first file. This information is shown in the dropdown helper text\n        const file = files.pop();\n        let validFile = null;\n        API.validateAsyncAPIByFile(file)\n            .then((response) => {\n                const {\n                    body: { isValid: isValidFile, info, errors },\n                } = response;\n                setGatewayVendor(info.gatewayVendor);\n                if (isValidFile) {\n                    validFile = file;\n                    inputsDispatcher({ action: 'preSetAPI', value: info });\n                    setValidity({ ...isValid, file: null });\n                } else {\n                    // eslint-disable-next-line max-len\n                    setValidity({ ...isValid, file: { message: 'AsyncAPI content validation failed! ' } });\n                    setValidationErrors(errors);\n                }\n            })\n            .catch((error) => {\n                setValidity({ ...isValid, file: { message: 'AsyncAPI content validation failed!' } });\n                console.error(error);\n            })\n            .finally(() => {\n                setIsValidating(false); // Stop the loading animation\n                onValidate(validFile !== null); // If there is a valid file then validation has passed\n                // If the given file is valid , we set it as the inputValue else set `null`\n                inputsDispatcher({ action: 'inputValue', value: validFile });\n            });\n    }\n\n    /**\n     * Trigger the provided onValidate call back on each input validation run\n     * Do the validation state aggregation and call the onValidate method with aggregated value\n     * @param {Object} state Validation state object returned from Joi `.validate()` method\n     */\n    function validateURL(value) {\n        const state = APIValidation.url.required().validate(value).error;\n        // State `null` means URL is valid, We do backend validation only in valid URLs\n        if (state === null) {\n            setIsValidating(true);\n            API.validateAsyncAPIByUrl(apiInputs.inputValue, { returnContent: true }).then((response) => {\n                const {\n                    body: {\n                        isValid: isValidURL, info, content, errors,\n                    },\n                } = response;\n                if (isValidURL) {\n                    info.content = content;\n                    inputsDispatcher({ action: 'preSetAPI', value: info });\n                    setValidity({ ...isValid, url: null });\n                } else {\n                    setValidity({ ...isValid, url: { message: 'AsyncAPI content validation failed!' } });\n                    setValidationErrors(errors);\n                }\n                onValidate(isValidURL);\n                setIsValidating(false);\n            }).catch((error) => {\n                setValidity({ url: { message: error.message } });\n                onValidate(false);\n                setIsValidating(false);\n                console.error(error);\n            });\n            // Valid URL string\n            // TODO: Handle catch network or api call failures ~tmkb\n        } else {\n            setValidity({ ...isValid, url: state });\n            onValidate(false);\n        }\n    }\n\n    useEffect(() => {\n        if (inputValue) {\n            if (inputType === ProvideAsyncAPI.INPUT_TYPES.FILE) {\n                onDrop([inputValue]);\n            } else if (inputType === ProvideAsyncAPI.INPUT_TYPES.URL) {\n                validateURL(inputValue);\n            }\n        }\n    }, [inputType, inputValue]);\n\n    // TODO: Use validation + input to separate component that can be share with wsdl,swagger,graphql URL inputs ~tmkb\n    const isInvalidURL = Boolean(isValid.url);\n    let urlStateEndAdornment = null;\n    if (isValidating) {\n        urlStateEndAdornment = (\n            <InputAdornment position='end'>\n                <CircularProgress />\n            </InputAdornment>\n        );\n    } else if (isValid.url !== undefined) {\n        if (isInvalidURL) {\n            urlStateEndAdornment = (\n                <InputAdornment position='end'>\n                    <ErrorOutlineIcon fontSize='large' color='error' />\n                </InputAdornment>\n            );\n        } else {\n            urlStateEndAdornment = (\n                <InputAdornment position='end'>\n                    <CheckIcon fontSize='large' color='primary' />\n                </InputAdornment>\n            );\n        }\n    }\n\n    return (\n        <>\n            <Grid container spacing={5}>\n                <Grid item xs={12} md={12}>\n                    <FormControl component='fieldset'>\n                        <FormLabel component='legend'>\n                            <>\n                                <sup className={classes.mandatoryStar}>*</sup>\n                                {' '}\n                                <FormattedMessage\n                                    id='Apis.Create.AsyncAPI.Steps.ProvideAsyncAPI.Input.type'\n                                    defaultMessage='Input Type'\n                                />\n                            </>\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='Input type'\n                            value={apiInputs.inputType}\n                            onChange={(event) => inputsDispatcher({ action: 'inputType', value: event.target.value })}\n                        >\n                            <FormControlLabel\n                                data-testid='input-asyncapi-url'\n                                value={ProvideAsyncAPI.INPUT_TYPES.URL}\n                                control={<Radio color='primary' />}\n                                label='AsyncAPI URL'\n                            />\n                            <FormControlLabel\n                                data-testid='input-asyncapi-file'\n                                value={ProvideAsyncAPI.INPUT_TYPES.FILE}\n                                control={<Radio color='primary' />}\n                                label='AsyncAPI File'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>\n                {isValid.file\n                && (\n                    <Grid item md={11}>\n                        <Banner\n                            onClose={() => setValidity({ file: null })}\n                            disableActions\n                            dense\n                            paperProps={{ elevation: 1 }}\n                            type='error'\n                            message={isValid.file.message}\n                            errors={validationErrors}\n                        />\n                    </Grid>\n                )}\n                <Grid item xs={10} md={11}>\n                    {isFileInput ? (\n                        <>\n                            {apiInputs.inputValue ? (\n                                <List>\n                                    <ListItem key={apiInputs.inputValue.path}>\n                                        <ListItemAvatar>\n                                            <Avatar>\n                                                <InsertDriveFile />\n                                            </Avatar>\n                                        </ListItemAvatar>\n                                        <ListItemText\n                                            primary={`${apiInputs.inputValue.path} -\n                                    ${humanFileSize(apiInputs.inputValue.size)}`}\n                                        />\n                                        <ListItemSecondaryAction>\n                                            <IconButton\n                                                edge='end'\n                                                aria-label='delete'\n                                                onClick={() => {\n                                                    inputsDispatcher({ action: 'inputValue', value: null });\n                                                    inputsDispatcher({ action: 'isFormValid', value: false });\n                                                }}\n                                            >\n                                                <DeleteIcon />\n                                            </IconButton>\n                                        </ListItemSecondaryAction>\n                                    </ListItem>\n                                </List>\n                            ) : (\n                                <DropZoneLocal\n                                    error={isValid.file}\n                                    onDrop={onDrop}\n                                    files={apiInputs.inputValue}\n                                    accept='.bz,.bz2,.gz,.rar,.tar,.zip,.7z,.json,application/json,.yaml,.yml'\n                                >\n                                    {isValidating ? (<CircularProgress />)\n                                        : ([\n                                            <FormattedMessage\n                                                id='Apis.Create.AsyncAPI.Steps.ProvideAsyncAPI.Input.file.dropzone'\n                                                defaultMessage={'Drag & Drop AsyncAPI File '\n                                                + 'here {break} or {break} Browse files'}\n                                                values={{ break: <br /> }}\n                                            />,\n                                            <Button\n                                                data-testid='upload-api-file'\n                                                color='primary'\n                                                variant='contained'\n                                            >\n                                                <FormattedMessage\n                                                    id='Apis.Create.AsyncAPI.Steps.ProvideAsyncAPI.Input.file.upload'\n                                                    defaultMessage='Browse File to Upload'\n                                                />\n                                            </Button>,\n                                        ]\n                                        )}\n                                </DropZoneLocal>\n                            )}\n                        </>\n                    ) : (\n                        <TextField\n                            autoFocus\n                            id='outlined-full-width'\n                            label='AsyncAPI URL'\n                            placeholder='Enter AsyncAPI URL'\n                            fullWidth\n                            margin='normal'\n                            variant='outlined'\n                            onChange={({ target: { value } }) => inputsDispatcher({ action: 'inputValue', value })}\n                            value={apiInputs.inputValue}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            InputProps={{\n                                onBlur: ({ target: { value } }) => {\n                                    validateURL(value);\n                                },\n                                endAdornment: urlStateEndAdornment,\n                            }}\n                            // 'Give the URL of AsyncAPI endpoint'\n                            helperText={(isValid.url && isValid.url.message) || 'Click away to validate the URL'}\n                            error={isInvalidURL}\n                        />\n                    )}\n                </Grid>\n                { gatewayVendor === 'solace' && (\n                    <Grid item xs={10} md={11}>\n                        <Chip\n                            data-testid='solace-api-label'\n                            label='Identified as Solace Event Portal API'\n                            icon={<CheckCircleSharpIcon style={{ color: 'green' }} />}\n                            variant='outlined'\n                            style={{ color: 'green' }}\n                        />\n                    </Grid>\n                )}\n                <Grid item xs={2} md={5} />\n            </Grid>\n        </>\n    );\n}\n\nProvideAsyncAPI.defaultProps = {\n    onValidate: () => { },\n};\nProvideAsyncAPI.INPUT_TYPES = {\n    URL: 'url',\n    FILE: 'file',\n};\nProvideAsyncAPI.propTypes = {\n    apiInputs: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n        inputValue: PropTypes.string,\n    }).isRequired,\n    inputsDispatcher: PropTypes.func.isRequired,\n    onValidate: PropTypes.func,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport Radio from '@material-ui/core/Radio';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport CheckIcon from '@material-ui/icons/Check';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFile from '@material-ui/icons/InsertDriveFile';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport debounce from 'lodash.debounce'; // WARNING: This is coming from mui-datatable as a transitive dependency\nimport YAML from 'js-yaml';\n\nimport APIValidation from 'AppData/APIValidation';\nimport API from 'AppData/api';\nimport DropZoneLocal, { humanFileSize } from 'AppComponents/Shared/DropZoneLocal';\nimport {  \n    getLinterResultsFromContent } from \"../../../Details/APIDefinition/Linting/Linting\";\nimport ValidationResults from './ValidationResults';\n\nconst useStyles = makeStyles((theme) => ({\n    mandatoryStar: {\n        color: theme.palette.error.main,\n    },\n}));\n\n/**\n * Sub component of API Create using OpenAPI UI, This is handling the taking input of WSDL file or URL from the user\n * In the create API using OpenAPI wizard first step out of 2 steps\n * @export\n * @param {*} props\n * @returns {React.Component} @inheritdoc\n */\nexport default function ProvideOpenAPI(props) {\n    const { apiInputs, inputsDispatcher, onValidate, onLinterLineSelect } = props;\n    const isFileInput = apiInputs.inputType === 'file';\n    const { inputType, inputValue } = apiInputs;\n    const classes = useStyles();\n    // If valid value is `null`,that means valid, else an error object will be there\n    const [isValid, setValidity] = useState({});\n    const [linterResults, setLinterResults] = useState ([]);\n    const [validationErrors, setValidationErrors] = useState([]);\n    const [isValidating, setIsValidating] = useState(false);\n    const [isLinting, setIsLinting] = useState(false);\n    \n    function lint(content) {\n        // Validate and linting\n        setIsLinting(true);\n        getLinterResultsFromContent(content).then((results)=>{\n            if (results) {\n                setLinterResults(results);\n            } else {\n                setLinterResults([]);\n            }\n        }).finally(()=>{setIsLinting(false);});\n    }\n\n    function reset() {\n        setIsLinting(false);\n        setLinterResults([]);\n        setValidationErrors([]);\n        inputsDispatcher({ action: 'importingContent', value: null });\n        inputsDispatcher({ action: 'inputValue', value: null });\n        inputsDispatcher({ action: 'isFormValid', value: false });\n    }\n\n    function hasJSONStructure (definition) {\n        if (typeof definition !== 'string') return false;\n        try {\n            const result = JSON.parse(definition);\n            return result && typeof result === 'object';\n        } catch (err) {\n            console.log(\"API definition is in not in JSON format\");\n            return false;\n        }\n    }\n\n    const validateURLDebounced = useCallback(\n        debounce((newURL) => { // Example: https://codesandbox.io/s/debounce-example-l7fq3?file=/src/App.js\n            API.validateOpenAPIByUrl(newURL, { returnContent: true }).then((response) => {\n                const {\n                    body: {\n                        isValid: isValidURL, info, content, errors,\n                    },\n                } = response;\n                if (isValidURL) {\n                    let formattedContent;\n                    if (hasJSONStructure(content)) {\n                        formattedContent = JSON.stringify(JSON.parse(content), null, 2);\n                    } else {\n                        formattedContent = JSON.stringify(YAML.load(content), null, 2);\n                    }\n                    lint(formattedContent);\n                    inputsDispatcher({ action: 'importingContent', value: formattedContent});\n                    info.content = content;\n                    inputsDispatcher({ action: 'preSetAPI', value: info });\n                    setValidity({ ...isValid, url: null });\n                } else {\n                    setValidity({ ...isValid, url: { message: 'OpenAPI content validation failed!' } });\n                    setValidationErrors(errors);\n                }\n                onValidate(isValidURL);\n                setIsValidating(false);\n            }).catch((error) => {\n                setValidity({ url: { message: error.message } });\n                onValidate(false);\n                setIsValidating(false);\n                console.error(error);\n                \n            });\n        }, 750),\n        [],\n    );\n    /**\n     *\n     *\n     * @param {*} files\n     */\n    function onDrop(files) {\n        setIsValidating(true);\n\n        // Why `files.pop()` below is , We only handle one OpenAPI file at a time,\n        // So if use provide multiple, We would only\n        // accept the first file. This information is shown in the dropdown helper text\n        const file = files.pop();\n        let validFile = null;\n        API.validateOpenAPIByFile(file)\n            .then((response) => {\n                const {\n                    body: { isValid: isValidFile, info, errors },\n                } = response;\n                if (isValidFile) {\n                    validFile = file;\n                    inputsDispatcher({ action: 'preSetAPI', value: info });\n                    setValidity({ ...isValid, file: null });\n                } else {\n                    setValidity({ ...isValid, file: { message: 'OpenAPI content validation failed!' } });\n                    setValidationErrors(errors);\n                }\n            })\n            .catch((error) => {\n                setValidity({ ...isValid, file: { message: 'OpenAPI content validation failed!' } });\n                console.error(error);\n            })\n            .finally(() => {\n                setIsValidating(false); // Stop the loading animation\n                onValidate(validFile !== null); // If there is a valid file then validation has passed\n                // If the given file is valid , we set it as the inputValue else set `null`\n                inputsDispatcher({ action: 'inputValue', value: file });\n            });\n\n        if (!file.path.endsWith(\".zip\")){\n            const read = new FileReader();\n            read.readAsText(file);\n            read.onloadend = function(){\n                const content = read.result?.toString();\n                inputsDispatcher({ action: 'importingContent', value: content });\n                lint(content);\n            }\n        }\n    }\n\n    /**\n     * Trigger the provided onValidate call back on each input validation run\n     * Do the validation state aggregation and call the onValidate method with aggregated value\n     * @param {Object} state Validation state object returned from Joi `.validate()` method\n     */\n    function validateURL(value) {\n        const state = APIValidation.url.required().validate(value).error;\n        // State `null` means URL is valid, We do backend validation only if it's a valid URL\n        if (state === null) {\n            setIsValidating(true);\n            validateURLDebounced(apiInputs.inputValue);\n            // Valid URL string\n            // TODO: Handle catch network or api call failures ~tmkb\n        } else {\n            setValidity({ ...isValid, url: state });\n            onValidate(false);\n        }\n    }\n\n    useEffect(() => {\n        reset();\n    }, [inputType]);\n\n    useEffect(() => {\n        if (inputValue) {\n            if (inputType === ProvideOpenAPI.INPUT_TYPES.FILE) {\n                onDrop([inputValue]);\n            } else if (inputType === ProvideOpenAPI.INPUT_TYPES.URL) {\n                validateURL(inputValue);\n            }\n        }\n    }, [inputType, inputValue]);\n\n    // TODO: Use validation + input to separate component that can be share with wsdl,swagger,graphql URL inputs ~tmkb\n    const isInvalidURL = Boolean(isValid.url);\n    let urlStateEndAdornment = null;\n    if (isValidating) {\n        urlStateEndAdornment = (\n            <InputAdornment position='end'>\n                <CircularProgress />\n            </InputAdornment>\n        );\n    } else if (isValid.url !== undefined) {\n        if (isInvalidURL) {\n            urlStateEndAdornment = (\n                <InputAdornment position='end'>\n                    <ErrorOutlineIcon fontSize='large' color='error' />\n                </InputAdornment>\n            );\n        } else {\n            urlStateEndAdornment = (\n                <InputAdornment position='end' id='url-validated'>\n                    <CheckIcon fontSize='large' color='primary' />\n                </InputAdornment>\n            );\n        }\n    }\n\n    return (\n        <>\n            <Grid container spacing={2}>\n                <Grid item xs={12} md={12}>\n                    <FormControl component='fieldset'>\n                        <FormLabel component='legend'>\n                            <>\n                                <sup className={classes.mandatoryStar}>*</sup>\n                                {' '}\n                                <FormattedMessage\n                                    id='Apis.Create.OpenAPI.Steps.ProvideOpenAPI.Input.type'\n                                    defaultMessage='Input Type'\n                                />\n                            </>\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='Input Source'\n                            value={apiInputs.inputType}\n                            onChange={(event) => inputsDispatcher({ action: 'inputType', \n                                value: event.target.value })}\n                        >\n                            <FormControlLabel\n                                disabled={isLinting || isValidating}\n                                value={ProvideOpenAPI.INPUT_TYPES.URL}\n                                control={<Radio color='primary' />}\n                                label='OpenAPI URL'\n                                id='open-api-url-select-radio'\n                            />\n                            <FormControlLabel\n                                disabled={isLinting || isValidating}\n                                value={ProvideOpenAPI.INPUT_TYPES.FILE}\n                                control={<Radio color='primary' />}\n                                label='OpenAPI File/Archive'\n                                aria-label='OpenAPI File/Archive'\n                                id='open-api-file-select-radio'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>\n                <Grid item xs={10} md={11}>\n                    {isFileInput ? (\n                        <>\n                            {apiInputs.inputValue ? (\n                                <List>\n                                    <ListItem key={apiInputs.inputValue.path}>\n                                        <ListItemAvatar>\n                                            <Avatar>\n                                                <InsertDriveFile />\n                                            </Avatar>\n                                        </ListItemAvatar>\n                                        <ListItemText\n                                            primary={`${apiInputs.inputValue.path} -\n                                    ${humanFileSize(apiInputs.inputValue.size)}`}\n                                        />\n                                        <ListItemSecondaryAction>\n                                            <IconButton\n                                                edge='end'\n                                                aria-label='delete'\n                                                onClick={reset}\n                                            >\n                                                <DeleteIcon />\n                                            </IconButton>\n                                        </ListItemSecondaryAction>\n                                    </ListItem>\n                                </List>\n                            ) : (\n                                <DropZoneLocal\n                                    error={isValid.file}\n                                    onDrop={onDrop}\n                                    files={apiInputs.inputValue}\n                                    accept='.bz,.bz2,.gz,.rar,.tar,.zip,.7z,.json,application/json,.yaml'\n                                >\n                                    {isValidating ? (<CircularProgress />)\n                                        : ([\n                                            <FormattedMessage\n                                                id='Apis.Create.OpenAPI.Steps.ProvideOpenAPI.Input.file.dropzone'\n                                                defaultMessage={'Drag & Drop Open API File/Archive '\n                                                 + 'here {break} or {break} Browse files'}\n                                                values={{ break: <br /> }}\n                                            />,\n                                            <Button\n                                                color='primary'\n                                                variant='contained'\n                                                id='browse-to-upload-btn'\n                                                onClick={ reset }\n                                            >\n                                                <FormattedMessage\n                                                    id='Apis.Create.OpenAPI.Steps.ProvideOpenAPI.Input.file.upload'\n                                                    defaultMessage='Browse File to Upload'\n                                                />\n                                            </Button>,\n                                        ]\n                                        )}\n                                </DropZoneLocal>\n                            )}\n                        </>\n                    ) : (\n                        <TextField\n                            autoFocus\n                            id='outlined-full-width'\n                            label='OpenAPI URL'\n                            placeholder='Enter OpenAPI URL'\n                            fullWidth\n                            margin='normal'\n                            variant='outlined'\n                            onChange={({ target: { value } }) => inputsDispatcher({ action: 'inputValue', value })}\n                            value={apiInputs.inputValue}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            InputProps={{\n                                onBlur: ({ target: { value } }) => {\n                                    validateURL(value);\n                                },\n                                endAdornment: urlStateEndAdornment,\n                            }}\n                            // 'Give the URL of OpenAPI endpoint'\n                            helperText={(isValid.url && isValid.url.message) || 'Click away to validate the URL'}\n                            error={isInvalidURL}\n                            data-testid='swagger-url-endpoint'\n                        />\n                    )}\n                </Grid>\n                <ValidationResults \n                    inputValue={inputValue} \n                    isValidating={isValidating}\n                    isLinting={isLinting}\n                    validationErrors={validationErrors}\n                    linterResults={linterResults}\n                    onLinterLineSelect={onLinterLineSelect}\n                />\n                <Grid item xs={2} md={5} />\n            </Grid>\n        </>\n    );\n}\n\nProvideOpenAPI.defaultProps = {\n    onValidate: () => { },\n};\nProvideOpenAPI.INPUT_TYPES = {\n    URL: 'url',\n    FILE: 'file',\n};\nProvideOpenAPI.propTypes = {\n    apiInputs: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n        inputValue: PropTypes.string,\n    }).isRequired,\n    inputsDispatcher: PropTypes.func.isRequired,\n    onValidate: PropTypes.func,\n};\n","/*\n * Copyright (c) 2022, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Accordion, AccordionDetails, AccordionSummary, Box, CircularProgress, Grid, List, ListItem, \n    ListItemIcon, ListItemText, Typography } from \"@material-ui/core\";\nimport { ExpandMore } from \"@material-ui/icons\";\nimport { FormattedMessage } from \"react-intl\";\nimport LinterUI from \"AppComponents/Apis/Details/APIDefinition/LinterUI/LinterUI\";\nimport APILintingSummary from \"AppComponents/Apis/Details/APIDefinition/Linting/APILintingSummary\";\nimport {  \n    spectralSeverityMap as severityMap } from \"../../../Details/APIDefinition/Linting/Linting\"\n\nconst useStyles = makeStyles(() => ({\n    importDefinitionDialogHeader: {\n        fontWeight: 600,\n    }\n}));\n\ntype APILintingProps = {\n    inputValue: any,\n    isValidating: boolean,\n    isLinting: boolean,\n    linterResults: any,\n    validationErrors: any,\n    onLinterLineSelect: Function,\n};\n\nexport default function ValidationResults(props: APILintingProps) {\n    const {inputValue, isValidating, isLinting, linterResults, validationErrors, onLinterLineSelect} = props;\n    const [expandValidationErrors, setExpandValidationErrors] = useState(true);\n    const [expandLinterResults, setExpandLinterResults] = useState(false);\n    const [linterSelectedSeverity, setLinterSelectedSeverity] = useState(-1);\n    const classes = useStyles();\n\n    return (\n        <>\n            <Grid item xs={10} md={11}>\n                <List>\n                    {inputValue && isValidating && (\n                        <ListItem>\n                            <ListItemIcon><CircularProgress /></ListItemIcon>\n                            <ListItemText>\n                                <FormattedMessage\n                                    id='Apis.Create.OpenAPI.Steps.ValidationResults.validating'\n                                    defaultMessage='Validating API definition'\n                                />\n                            </ListItemText>\n                        </ListItem>\n                    )}\n                    {inputValue && !isValidating && isLinting && (\n                        <ListItem>\n                            <ListItemIcon><CircularProgress /></ListItemIcon>\n                            <ListItemText>\n                                <FormattedMessage\n                                    id='Apis.Create.OpenAPI.Steps.ValidationResults.linting'\n                                    defaultMessage='Generating Linter Results'\n                                />\n                            </ListItemText>\n                        </ListItem>\n                    )}\n                </List>\n            </Grid>\n            {!isValidating && validationErrors.length>0 && (\n                <Grid item xs={10} md={11}>\n                    <Accordion\n                        expanded={expandValidationErrors}\n                        onChange={()=>{setExpandValidationErrors(!expandValidationErrors)}}>\n                        <AccordionSummary\n                            expandIcon={<ExpandMore/>}\n                            aria-controls='panel1bh-content'\n                            id='panel1bh-header'>\n                            <Grid container direction='row' \n                                justifyContent='space-between' alignItems='center'>\n                                <Typography className={classes.importDefinitionDialogHeader}>\n                                    <FormattedMessage\n                                        id='Apis.Create.OpenAPI.Steps.ValidationResults.validation.errros'\n                                        defaultMessage='Validation Errors'\n                                    />\n                                </Typography>\n                            </Grid>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                            <List>\n                                {validationErrors.map((error:any)=>(\n                                    <ListItem>\n                                        <ListItemIcon>\n                                            {severityMap[0]}\n                                        </ListItemIcon>\n                                        <ListItemText>\n                                            <Typography>\n                                                <Box sx={{ fontWeight: 'bold' }}>{error.message}</Box>\n                                            </Typography>\n                                            <Typography>{error.description}</Typography>\n                                        </ListItemText>\n                                    </ListItem>\n                                    \n                                ))}\n                            </List>\n                            \n                        </AccordionDetails>\n                        \n                    </Accordion>\n                </Grid>\n            )}\n            {!isLinting && linterResults.length>0 && (\n                <Grid item xs={10} md={11}\n                    data-testid='itest-id-linter-results'>\n                    <Accordion\n                        expanded={expandLinterResults}\n                        onChange={()=>{setExpandLinterResults(!expandLinterResults)}}>\n                        <AccordionSummary\n                            expandIcon={<ExpandMore />}\n                            aria-controls='panel1bh-content'\n                            id='panel1bh-header'>\n                            <Grid container direction='row' \n                                justifyContent='space-between' alignItems='center'>\n                                <Typography className={classes.importDefinitionDialogHeader}>\n                                    <FormattedMessage\n                                        id='Apis.Create.OpenAPI.Steps.ValidationResults.linter.results'\n                                        defaultMessage='Linter Results'\n                                    />\n                                </Typography>\n                                <APILintingSummary\n                                    linterResults={ linterResults }\n                                    handleChange = { (event:any, value:any)=>{\n                                        event.stopPropagation();\n                                        setLinterSelectedSeverity(value);\n                                        setExpandLinterResults(true);\n                                    } }\n                                />\n                            </Grid>\n                        </AccordionSummary>\n                        <AccordionDetails\n                            style={{padding:0}}>\n                                <LinterUI\n                                    linterResults={ linterResults.filter(\n                                        (item: any)=> linterSelectedSeverity===-1||\n                                            item.severity===Number(linterSelectedSeverity))\n                                    }\n                                    severityMap={ severityMap }\n                                    handleRowClick={ (line: any) => { \n                                        if(onLinterLineSelect) onLinterLineSelect(line);\n                                    } }\n                                />\n                        </AccordionDetails>\n                        \n                    </Accordion>\n                </Grid>\n            )}\n        </>\n    );\n}","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFile from '@material-ui/icons/InsertDriveFile';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport API from 'AppData/api';\nimport DropZoneLocal, { humanFileSize } from 'AppComponents/Shared/DropZoneLocal';\nimport Banner from 'AppComponents/Shared/Banner';\n\nconst useStyles = makeStyles((theme) => ({\n    mandatoryStar: {\n        color: theme.palette.error.main,\n    },\n}));\n\n/**\n * Sub component of API Create using GraphQL UI, This is handling the taking input of GraphQL file or URL from the user\n * In the create API using OpenAPI wizard first step out of 2 steps\n * @export\n * @param {*} props\n * @returns {React.Component} @inheritdoc\n */\nexport default function ProvideGraphQL(props) {\n    const { apiInputs, inputsDispatcher, onValidate } = props;\n    const { inputValue } = apiInputs;\n    const classes = useStyles();\n    // If valid value is `null`,that means valid, else an error object will be there\n    const [isValid, setValidity] = useState({ file: null });\n    const [isValidating, setIsValidating] = useState(false);\n    /**\n     *\n     *\n     * @param {*} files\n     */\n    function onDrop(files) {\n        setIsValidating(true);\n\n        // Why `files.pop()` below is , We only handle one graphQL file at a time,\n        // So if use provide multiple, We would only\n        // accept the first file. This information is shown in the dropdown helper text\n        const file = files.pop();\n        let validFile = null;\n        API.validateGraphQLFile(file)\n            .then((response) => {\n                const {\n                    body: { isValid: isValidFile, graphQLInfo },\n                } = response;\n                if (isValidFile) {\n                    validFile = file;\n                    inputsDispatcher({ action: 'graphQLInfo', value: graphQLInfo });\n                    setValidity({ ...isValid, file: null });\n                } else {\n                    setValidity({ ...isValid, file: { message: 'GraphQL content validation failed!' } });\n                }\n            })\n            .catch((error) => {\n                setValidity({ ...isValid, file: { message: 'GraphQL content validation failed!' } });\n                console.error(error);\n            })\n            .finally(() => {\n                setIsValidating(false); // Stop the loading animation\n                onValidate(validFile !== null); // If there is a valid file then validation has passed\n                // If the given file is valid , we set it as the inputValue else set `null`\n                inputsDispatcher({ action: 'inputValue', value: validFile });\n            });\n    }\n\n    useEffect(() => {\n        if (inputValue) {\n            onDrop([inputValue]);\n        }\n    }, [inputValue]);\n    const accept = '.graphql,text/plain';\n    return (\n        <>\n            <Grid container spacing={5}>\n                {!apiInputs.inputValue && (\n                    <Grid item md={12}>\n                        <FormControl component='fieldset'>\n                            <FormLabel component='legend'>\n                                <>\n                                    <sup className={classes.mandatoryStar}>*</sup>\n                                    {' '}\n                                    <FormattedMessage\n                                        id='Apis.Create.GraphQL.Steps.ProvideGraphQL.Input.type'\n                                        defaultMessage='Provide GraphQL File'\n                                    />\n                                </>\n                            </FormLabel>\n                        </FormControl>\n                    </Grid>\n                )}\n                {isValid.file\n                    && (\n                        <Grid item md={11}>\n                            <Banner\n                                onClose={() => setValidity({ file: null })}\n                                disableActions\n                                dense\n                                paperProps={{ elevation: 1 }}\n                                type='error'\n                                message={isValid.file.message}\n                            />\n                        </Grid>\n                    )}\n                <Grid item md={11}>\n                    {apiInputs.inputValue ? (\n                        <List data-testid='uploaded-list-graphql'>\n                            <ListItem key={apiInputs.inputValue.path} data-testid='uploaded-list-content-graphql' >\n                                <ListItemAvatar>\n                                    <Avatar>\n                                        <InsertDriveFile />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText\n                                    primary={`${apiInputs.inputValue.path} - \n                                    ${humanFileSize(apiInputs.inputValue.size)}`}\n                                    data-testid={'file-input-'+apiInputs.inputValue.path}\n                                />\n                                <ListItemSecondaryAction>\n                                    <IconButton\n                                        edge='end'\n                                        aria-label='delete'\n                                        onClick={() => {\n                                            inputsDispatcher({ action: 'inputValue', value: null });\n                                            inputsDispatcher({ action: 'isFormValid', value: false });\n                                        }}\n                                        data-testid='btn-delete-imported-file'\n                                    >\n                                        <DeleteIcon />\n                                    </IconButton>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                        </List>\n                    ) : (\n                        <DropZoneLocal\n                            error={isValid.file}\n                            onDrop={onDrop}\n                            files={apiInputs.inputValue}\n                            accept={accept}\n                            ariaLabel='GraphQL file upload'\n                        >\n                            {isValidating ? (<CircularProgress />)\n                                : ([\n                                    <FormattedMessage\n                                        id='Apis.Create.GraphQL.Steps.ProvideGraphQL.Input.file.dropzone'\n                                        defaultMessage={'Drag & Drop files here {break} or {break} '\n                                        + 'Browse files{break}({accept})'}\n                                        values={{ break: <br />, accept }}\n                                    />,\n                                    <Button\n                                        color='primary'\n                                        variant='contained'\n                                        data-testid='browse-to-upload-btn'\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Create.GraphQL.Steps.ProvideGraphQL.Input.file.upload'\n                                            defaultMessage='Browse File to Upload'\n                                        />\n                                    </Button>,\n                                ]\n                                )}\n                        </DropZoneLocal>\n                    )}\n                </Grid>\n            </Grid>\n        </>\n    );\n}\n\nProvideGraphQL.defaultProps = {\n    onValidate: () => {},\n};\nProvideGraphQL.propTypes = {\n    apiInputs: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n    }).isRequired,\n    inputsDispatcher: PropTypes.func.isRequired,\n    onValidate: PropTypes.func,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport API from 'AppData/api';\nimport { usePublisherSettings } from 'AppComponents/Shared/AppContext';\nimport Banner from 'AppComponents/Shared/Banner';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nimport APICreateBase from 'AppComponents/Apis/Create/Components/APICreateBase';\nimport DefaultAPIForm from 'AppComponents/Apis/Create/Components/DefaultAPIForm';\nimport APIProduct from 'AppData/APIProduct';\nimport AuthManager from 'AppData/AuthManager';\n\n\nconst getPolicies = async () => {\n    const promisedPolicies = API.policies('subscription');\n    const policies = await promisedPolicies;\n    return policies.body.list;\n};\n/**\n *\n * @export\n * @param {*} props\n * @returns\n */\n/**\n * Handle API creation.\n * @param {JSON} props properties passed in.\n * @returns {JSX} API creation form.\n */\nfunction APICreateDefault(props) {\n    const {\n        isWebSocket, isAPIProduct, history, intl,\n    } = props;\n    const { data: settings, isLoading, error: settingsError } = usePublisherSettings();\n\n    const [pageError, setPageError] = useState(null);\n    useEffect(() => {\n        if (settingsError) {\n            setPageError(settingsError.message);\n        }\n    }, [settingsError]);\n    const [isCreating, setIsCreating] = useState();\n    const [isPublishing, setIsPublishing] = useState(false);\n\n    const [isRevisioning, setIsRevisioning] = useState(false);\n    const [isDeploying, setIsDeploying] = useState(false);\n    const [isPublishButtonClicked, setIsPublishButtonClicked] = useState(false);\n    /**\n     *\n     * Reduce the events triggered from API input fields to current state\n     */\n    function apiInputsReducer(currentState, inputAction) {\n        const { action, value } = inputAction;\n        switch (action) {\n            case 'name':\n            case 'version':\n            case 'endpoint':\n            case 'context':\n            case 'isFormValid':\n                return { ...currentState, [action]: value };\n            default:\n                return currentState;\n        }\n    }\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        formValidity: false,\n    });\n    const isPublishable = apiInputs.endpoint;\n    const isAPICreateDisabled = !(apiInputs.name && apiInputs.version && apiInputs.context) || isCreating\n                                 || isPublishing;\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { name: action, value } = event.target;\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     *\n     * Set the validity of the API Inputs form\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     */\n    async function createAPI() {\n        setIsCreating(true);\n        const {\n            name, version, context, endpoint,\n        } = apiInputs;\n        let promisedCreatedAPI;\n        let policies;\n        const allPolicies = await getPolicies();\n        if (allPolicies.length === 0) {\n            Alert.info(intl.formatMessage({\n                id: 'Apis.Create.Default.APICreateDefault.error.policies.not.available',\n                defaultMessage: 'Throttling policies not available. Contact your administrator',\n            }));\n        } else if (allPolicies.filter((p) => p.name === 'Unlimited').length > 0) {\n            policies = ['Unlimited'];\n        } else {\n            policies = [allPolicies[0].name];\n        }\n\n        const apiData = {\n            name,\n            version,\n            context,\n            policies,\n        };\n        if (endpoint) {\n            apiData.endpointConfig = {\n                endpoint_type: 'http',\n                sandbox_endpoints: {\n                    url: endpoint,\n                },\n                production_endpoints: {\n                    url: endpoint,\n                },\n            };\n        }\n        if (isWebSocket) {\n            apiData.type = 'WS';\n        }\n        if (isAPIProduct) {\n            const newAPIProduct = new APIProduct(apiData);\n            promisedCreatedAPI = newAPIProduct\n                .saveProduct(apiData)\n                .then((apiProduct) => {\n                    Alert.info('API Product created successfully');\n                    history.push(`/api-products/${apiProduct.id}/overview`);\n                    return apiProduct;\n                })\n                .catch((error) => {\n                    console.error(error);\n                    if (error.response) {\n                        setPageError(error.response.body);\n                        return error.response.body.description;\n                    } else {\n                        const message = 'Something went wrong while adding the API Product';\n                        setPageError(message);\n                        // TODO add i18n ~tmkb\n                        return message;\n                    }\n                });\n        } else {\n            const newAPI = new API(apiData);\n            promisedCreatedAPI = newAPI\n                .save();\n            Alert.loading(promisedCreatedAPI, {\n                loading: 'Creating API...',\n                success: 'API created successfully',\n                error: (error) => {\n                    console.error(error);\n                    setIsPublishing(false); // We don't publish if something when wrong\n                    if (error.response) {\n                        setPageError(error.response.body);\n                        return error.response.body.description;\n                    } else {\n                        const message = 'Something went wrong while adding the API';\n                        setPageError(message);\n                        return message;\n                    }\n                },\n            });\n        }\n        return promisedCreatedAPI.finally(() => setIsCreating(false));\n    }\n\n    /**\n     *\n     */\n    function createAndPublish() {\n        const restApi = new API();\n        setIsPublishButtonClicked(true);\n        createAPI().then((api) => {\n            setIsRevisioning(true);\n            const body = {\n                description: 'Initial Revision',\n            };\n            const promisedAPIRevision = restApi.createRevision(api.id, body);\n            Alert.loading(promisedAPIRevision, {\n                success: 'API revision created successfully',\n                error: (error) => {\n                    console.error(error);\n                    if (error.response) {\n                        setPageError(error.response.body);\n                        return error.response.body.description;\n                    } else {\n                        setPageError('Something went wrong while creating the API Revision');\n                        return intl.formatMessage({\n                            id: 'Apis.Create.Default.APICreateDefault.error.errorMessage.create.revision',\n                            defaultMessage: 'Something went wrong while creating the API Revision',\n                        });\n                    }\n                },\n                loading: 'Creating API revision...',\n            });\n            promisedAPIRevision.then((api1) => {\n                const revisionId = api1.body.id;\n                setIsRevisioning(false);\n                const envList = settings.environment.map((env) => env.name);\n                const body1 = [];\n                const internalGateways = settings.environment.filter((p) => p.provider\n                        && p.provider.toLowerCase().includes('wso2'));\n                const getFirstVhost = (envName) => {\n                    const env = internalGateways.find(\n                        (e) => e.name === envName && e.vhosts.length > 0,\n                    );\n                    return env && env.vhosts[0].host;\n                };\n                if (envList && envList.length > 0) {\n                    if (envList.includes('Default') && getFirstVhost('Default')) {\n                        body1.push({\n                            name: 'Default',\n                            displayOnDevportal: true,\n                            vhost: getFirstVhost('Default'),\n                        });\n                    } else if (getFirstVhost(envList[0])) {\n                        body1.push({\n                            name: envList[0],\n                            displayOnDevportal: true,\n                            vhost: getFirstVhost(envList[0]),\n                        });\n                    }\n                }\n                setIsDeploying(true);\n                const promisedDeployment = restApi.deployRevision(api.id, revisionId, body1);\n                Alert.loading(promisedDeployment, {\n                    loading: 'Deploying API...',\n                    success: 'API deployed successfully',\n                    error: (error) => {\n                        console.error(error);\n                        if (error.response) {\n                            setPageError(error.response.body);\n                            return error.response.body.description;\n                        } else {\n                            setPageError('Something went wrong while publishing the API');\n\n                            return intl.formatMessage({\n                                id: 'Apis.Create.Default.APICreateDefault.error.errorMessage.publish',\n                                defaultMessage: 'Something went wrong while publishing the API',\n                            });\n                        }\n                    },\n                });\n                promisedDeployment.then(() => {\n                    setIsDeploying(false);\n                    // Publishing API after deploying\n                    setIsPublishing(true);\n                    const promisedPublish = api.publish();\n                    Alert.loading(promisedPublish, {\n                        loading: 'Publishing API...',\n                        success: (response) => {\n                            const { workflowStatus } = response.body;\n                            if (workflowStatus === APICreateDefault.WORKFLOW_STATUS.CREATED) {\n                                return intl.formatMessage({\n                                    id: 'Apis.Create.Default.APICreateDefault.success.publishStatus',\n                                    defaultMessage: 'Lifecycle state change request has been sent',\n                                });\n                            } else {\n                                return intl.formatMessage({\n                                    id: 'Apis.Create.Default.APICreateDefault.success.otherStatus',\n                                    defaultMessage: 'API updated successfully',\n                                });\n                            }\n                        },\n                        error: () => intl.formatMessage({\n                            id: 'Apis.Create.Default.APICreateDefault.error.otherStatus',\n                            defaultMessage: 'Error while publishing the API',\n                        }),\n                    });\n                    promisedPublish.then(() => history.push(`/apis/${api.id}/overview`))\n                        .finally(() => {\n                            setIsPublishing(false);\n                            setIsPublishButtonClicked(false);\n                        });\n                })\n                    .finally(() => {\n                        setIsDeploying(false);\n                    });\n            })\n                .finally(() => {\n                    setIsRevisioning(false);\n                });\n        });\n    }\n\n    /**\n     *\n     *\n     */\n    function createAPIOnly() {\n        createAPI().then((api) => {\n            history.push(`/apis/${api.id}/overview`);\n        });\n    }\n    let pageTitle = (\n        <>\n            <Typography variant='h5' component='h1'>\n                <FormattedMessage\n                    id='Apis.Create.Default.APICreateDefault.api.heading'\n                    defaultMessage='Create an API'\n                />\n            </Typography>\n            <Typography variant='caption'>\n                <FormattedMessage\n                    id='Apis.Create.Default.APICreateDefault.api.sub.heading'\n                    defaultMessage={\n                        'Create an API by providing a Name, a Version, a Context and'\n                        + ' Backend Endpoint (optional)'\n                    }\n                />\n            </Typography>\n        </>\n    );\n    if (isAPIProduct) {\n        pageTitle = (\n            <>\n                <Typography variant='h5' component='h1'>\n                    <FormattedMessage\n                        id='Apis.Create.Default.APICreateDefault.apiProduct.heading'\n                        defaultMessage='Create an API Product'\n                    />\n                </Typography>\n                <Typography variant='caption'>\n                    <FormattedMessage\n                        id='Apis.Create.Default.APICreateDefault.apiProduct.sub.heading'\n                        defaultMessage={\n                            'Create an API Product by providing a Name, a Context,'\n                            + ' and Business Plans (optional).'\n                        }\n                    />\n                </Typography>\n            </>\n        );\n    } else if (isWebSocket) {\n        pageTitle = (\n            <>\n                <Typography variant='h5' component='h1'>\n                    <FormattedMessage\n                        id='Apis.Create.Default.APICreateDefault.webSocket.heading'\n                        defaultMessage='Create a WebSocket API'\n                    />\n                </Typography>\n                <Typography variant='caption'>\n                    <FormattedMessage\n                        id='Apis.Create.Default.APICreateDefault.webSocket.sub.heading'\n                        defaultMessage='Create a WebSocket API by providing a Name, and a Context.'\n                    />\n                </Typography>\n            </>\n        );\n    }\n\n    return (\n        <APICreateBase title={pageTitle}>\n            <Grid container direction='row' justify='center' alignItems='center' spacing={3}>\n                {/* Page error banner */}\n                {(pageError) && (\n                    <Grid item xs={11}>\n                        <Banner\n                            onClose={() => setPageError(null)}\n                            disableActions\n                            dense\n                            paperProps={{ elevation: 1 }}\n                            type='error'\n                            message={pageError}\n                        />\n                    </Grid>\n                )}\n                {/* end of Page error banner */}\n                <Grid item xs={12}>\n                    {/* This -2 is to counter act with Grid container spacing 3 */}\n                    {isLoading && (\n                        <Box mt={-2}>\n                            <LinearProgress data-testid='loading-publisher-settings' />\n                        </Box>\n                    )}\n                </Grid>\n                <Grid item md={1} xs={0} />\n                <Grid item md={11} xs={12}>\n\n                    <DefaultAPIForm\n                        onValidate={handleOnValidate}\n                        onChange={handleOnChange}\n                        api={apiInputs}\n                        isAPIProduct={isAPIProduct}\n                        isWebSocket={isWebSocket}\n                    />\n                </Grid>\n                <Grid item md={1} xs={0} />\n                <Grid item md={11} xs={12}>\n                    <Grid container direction='row' justify='flex-start' alignItems='center' spacing={2}>\n                        <Grid item>\n                            <Button\n                                id='itest-create-default-api-button'\n                                variant='contained'\n                                color='primary'\n                                disabled={isAPICreateDisabled || !apiInputs.isFormValid}\n                                onClick={createAPIOnly}\n                            >\n                                Create\n                                {' '}\n                                {isCreating && !isPublishButtonClicked && <CircularProgress size={24} />}\n                            </Button>\n                        </Grid>\n                        {!AuthManager.isNotPublisher() && (\n                            <Grid item>\n                                <Button\n                                    id='itest-id-apicreatedefault-createnpublish'\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={isDeploying || isRevisioning || !isPublishable\n                                        || isAPICreateDisabled || !apiInputs.isFormValid}\n                                    onClick={createAndPublish}\n                                >\n                                    {(!isPublishing && !isRevisioning && !isDeploying) && 'Create & Publish'}\n                                    {(isPublishing || isRevisioning || isDeploying) && <CircularProgress size={24} />}\n                                    {isCreating && isPublishing && 'Creating API . . .'}\n                                    {!isCreating && isRevisioning && !isDeploying && 'Creating Revision . . .'}\n                                    {!isCreating && isPublishing\n                                        && !isRevisioning && !isDeploying && 'Publishing API . . .'}\n                                    {!isCreating && isPublishing\n                                        && !isRevisioning && isDeploying && 'Deploying Revision . . .'}\n                                </Button>\n                            </Grid>\n                        )}\n                        <Grid item>\n                            <Link to='/apis/'>\n                                <Button variant='text'>\n                                    <FormattedMessage\n                                        id='Apis.Create.Default.APICreateDefault.cancel'\n                                        defaultMessage='Cancel'\n                                    />\n                                </Button>\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </APICreateBase>\n    );\n}\nAPICreateDefault.defaultProps = {\n    isWebSocket: false,\n    isAPIProduct: false,\n};\nAPICreateDefault.WORKFLOW_STATUS = {\n    CREATED: 'CREATED',\n};\nAPICreateDefault.propTypes = {\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n    isAPIProduct: PropTypes.shape({}),\n    isWebSocket: PropTypes.shape({}),\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\nexport default withRouter(injectIntl(APICreateDefault));\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\n\nimport { Route, Switch } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\n\nimport APICreateDefault from './Default/APICreateDefault';\nimport APIProductCreateWrapper from './APIProduct/APIProductCreateWrapper';\nimport ApiCreateSwagger from './OpenAPI/ApiCreateOpenAPI';\nimport ApiCreateWSDL from './WSDL/ApiCreateWSDL';\nimport ApiCreateGraphQL from './GraphQL/ApiCreateGraphQL';\nimport ApiCreateWebSocket from './WebSocket/ApiCreateWebSocket';\nimport APICreateStreamingAPI from './StreamingAPI/APICreateStreamingAPI';\nimport APICreateAsyncAPI from './AsyncAPI/ApiCreateAsyncAPI';\n\nconst styles = {\n    content: {\n        flexGrow: 1,\n    },\n};\n\n/**\n *\n * Handle routing for all types of API create creations, If you want to add new API type create page,\n * Please use `APICreateBase` and `DefaultAPIForm` components to do so , Don't wrap `APICreateDefault` component\n * @param {*} props\n * @returns @inheritdoc\n */\nfunction APICreateRoutes(props) {\n    const { classes } = props;\n    return (\n        <div className={classes.content}>\n            <Switch>\n                <Route path='/apis/create/rest' component={APICreateDefault} />\n                <Route path='/api-products/create' component={APIProductCreateWrapper} />\n                <Route path='/apis/create/graphQL' component={ApiCreateGraphQL} />\n                <Route path='/apis/create/openapi' component={ApiCreateSwagger} />\n                <Route path='/apis/create/wsdl' component={ApiCreateWSDL} />\n                {/* TODO: Remove ApiCreateWebSocket components and associated routes */}\n                <Route path='/apis/create/ws' component={ApiCreateWebSocket} />\n                <Route path='/apis/create/streamingapi/:apiType' component={APICreateStreamingAPI} />\n                <Route path='/apis/create/asyncapi' component={APICreateAsyncAPI} />\n                <Route component={ResourceNotFound} />\n            </Switch>\n        </div>\n    );\n}\n\nAPICreateRoutes.propTypes = {\n    classes: PropTypes.shape({ content: PropTypes.string }).isRequired,\n};\n\nexport default withStyles(styles)(APICreateRoutes);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport APIProduct from 'AppData/APIProduct';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport APICreateProductBase from 'AppComponents/Apis/Create/Components/APICreateProductBase';\nimport DefaultAPIForm from 'AppComponents/Apis/Create/Components/DefaultAPIForm';\nimport ProductResourcesEditWorkspace from 'AppComponents/Apis/Details/ProductResources/ProductResourcesEditWorkspace';\nimport API from 'AppData/api';\nimport AuthManager from 'AppData/AuthManager';\nimport { useAppContext } from 'AppComponents/Shared/AppContext';\n\nconst useStyles = makeStyles((theme) => ({\n    Paper: {\n        height: '40px',\n    },\n    saveButton: {\n        padding: '0px 0px 0px 10px',\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingBottom: theme.spacing(2),\n    },\n    buttonWrapper: {\n        marginTop: theme.spacing(4),\n    },\n    alternativeLabel: {\n        marginTop: theme.spacing(1),\n    },\n}));\n\n/**\n * Handle API creation from GraphQL Definition.\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ApiProductCreateWrapper(props) {\n    const { history } = props;\n    const intl = useIntl();\n    const [wizardStep, setWizardStep] = useState(0);\n    const [apiResources, setApiResources] = useState([]);\n    const { settings } = useAppContext();\n    const [isPublishButtonClicked, setIsPublishButtonClicked] = useState(false);\n    const [isRevisioning, setIsRevisioning] = useState(false);\n    const [isDeploying, setIsDeploying] = useState(false);\n    const [isPublishing, setIsPublishing] = useState(false);\n\n    const [policies, setPolicies] = useState([]);\n\n    useEffect(() => {\n        API.policies('subscription').then((response) => {\n            const allPolicies = response.body.list;\n            if (allPolicies.length === 0) {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Create.APIProduct.APIProductCreateWrapper.error.policies.not.available',\n                    defaultMessage: 'Throttling policies not available. Contact your administrator',\n                }));\n            } else if (allPolicies.filter((p) => p.name === 'Unlimited').length > 0) {\n                setPolicies(['Unlimited']);\n            } else {\n                setPolicies([allPolicies[0].name]);\n            }\n        });\n    }, []);\n    const pageTitle = (\n        <>\n            <Typography variant='h5'>\n                <FormattedMessage\n                    id='Apis.Create.APIProduct.APIProductCreateWrapper.heading'\n                    defaultMessage='Create an API Product'\n                />\n            </Typography>\n            <Typography variant='caption'>\n                <FormattedMessage\n                    id='Apis.Create.APIProduct.APIProductCreateWrapper.sub.heading'\n                    defaultMessage={\n                        'Create an API Product by providing a Name, a Context, Resources, '\n                        + 'and Business Plans (optional).'\n                    }\n                />\n            </Typography>\n        </>\n    );\n    /**\n     *\n     * Reduce the events triggered from API input fields to current state\n     * @param {*} currentState\n     * @param {*} inputAction\n     * @returns\n     */\n    function apiInputsReducer(currentState, inputAction) {\n        const { action, value } = inputAction;\n        switch (action) {\n            case 'type':\n            case 'name':\n            case 'context':\n            case 'version':\n            case 'isFormValid':\n                return { ...currentState, [action]: value };\n            case 'apiResources':\n                return { ...currentState, [action]: value };\n            case 'preSetAPI':\n                return {\n                    ...currentState,\n                    name: value.name.replace(/[&/\\\\#,+()$~%.'\":*?<>{}\\s]/g, ''),\n                    context: value.context,\n                };\n            default:\n                return currentState;\n        }\n    }\n\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        type: 'ApiProductCreateWrapper',\n        inputValue: '',\n        formValidity: false,\n    });\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { name: action, value } = event.target;\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     *\n     * Set the validity of the API Inputs form\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n    function getSteps() {\n        return [\n            <FormattedMessage\n                variant='caption'\n                id='Apis.Create.APIProduct.APIProductCreateWrapper.defineProvide'\n                defaultMessage='Define API Product'\n            />, <FormattedMessage\n                variant='caption'\n                id='Apis.Create.APIProduct.APIProductCreateWrapper.resources'\n                defaultMessage='Add Resources'\n            />];\n    }\n\n    const [isCreating, setCreating] = useState();\n    const classes = useStyles();\n    const steps = getSteps();\n    let newAPIProduct;\n\n    const createAPIProduct = () => {\n        setCreating(true);\n        const {\n            name, context,\n        } = apiInputs;\n        const apiData = {\n            name,\n            context,\n            policies,\n            apis: apiResources,\n        };\n        apiData.transport = ['http', 'https'];\n        newAPIProduct = new APIProduct(apiData);\n        const promisedCreatedAPIProduct = newAPIProduct\n            .saveProduct(apiData)\n            .then((apiProduct) => {\n                Alert.info('API Product created successfully');\n                return apiProduct;\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while adding the API Product');\n                }\n            })\n            .finally(() => setCreating(false));\n        return promisedCreatedAPIProduct.finally(() => setCreating(false));\n    };\n\n    const createAPIProductOnly = () => {\n        createAPIProduct().then((apiProduct) => {\n            history.push(`/api-products/${apiProduct.id}/overview`);\n        });\n    };\n\n    const createAndPublishAPIProduct = () => {\n        setIsPublishButtonClicked(true);\n        createAPIProduct()\n            .then((apiProduct) => {\n                setIsRevisioning(true);\n                Alert.info('API Product created successfully');\n                const body = {\n                    description: 'Initial Revision',\n                };\n                newAPIProduct.createProductRevision(apiProduct.id, body)\n                    .then((api1) => {\n                        setIsRevisioning(false);\n                        const revisionId = api1.body.id;\n                        Alert.info('API Revision created successfully');\n                        const envList = settings.environment.map((env) => env.name);\n                        const body1 = [];\n                        const getFirstVhost = (envName) => {\n                            const env = settings.environment.find(\n                                (e) => e.name === envName && e.vhosts.length > 0,\n                            );\n                            return env && env.vhosts[0].host;\n                        };\n                        if (envList && envList.length > 0) {\n                            if (envList.includes('Default') && getFirstVhost('Default')) {\n                                body1.push({\n                                    name: 'Default',\n                                    displayOnDevportal: true,\n                                    vhost: getFirstVhost('Default'),\n                                });\n                            } else if (getFirstVhost(envList[0])) {\n                                body1.push({\n                                    name: envList[0],\n                                    displayOnDevportal: true,\n                                    vhost: getFirstVhost(envList[0]),\n                                });\n                            }\n                        }\n                        setIsDeploying(true);\n                        newAPIProduct.deployProductRevision(apiProduct.id, revisionId, body1)\n                            .then(() => {\n                                Alert.info('API Product Revision Deployed Successfully');\n                                setIsDeploying(false);\n                                setIsPublishing(true);\n                                newAPIProduct.updateLcState(apiProduct.id, 'Publish')\n                                    .then((response) => {\n                                        const { workflowStatus } = response.body;\n                                        if (workflowStatus === 'CREATED') {\n                                            Alert.info(intl.formatMessage({\n                                                id: 'Apis.Create.APIProduct.APIProductCreateWrapper.publishStatus',\n                                                defaultMessage: 'Lifecycle state change request has been sent',\n                                            }));\n                                        } else {\n                                            Alert.info(intl.formatMessage({\n                                                id: 'Apis.Create.APIProduct.APIProductCreateWrapper.otherStatus',\n                                                defaultMessage: 'API Product status updated successfully',\n                                            }));\n                                        }\n                                        history.push(`/api-products/${apiProduct.id}/overview`);\n                                    });\n                            })\n                            .catch((error) => {\n                                if (error.response) {\n                                    Alert.error(error.response.body.description);\n                                } else {\n                                    Alert.error(intl.formatMessage({\n                                        id: 'Apis.APIProductCreateWrapper.error.errorMessage.deploy.revision',\n                                        defaultMessage: 'Something went wrong while deploying the API Product Revision',\n                                    }));\n                                }\n                                console.error(error);\n                            })\n                            .finally(() => {\n                                setIsPublishing(false);\n                                setIsPublishButtonClicked(false);\n                            });\n                    })\n                    .catch((error) => {\n                        if (error.response) {\n                            Alert.error(error.response.body.description);\n                        } else {\n                            Alert.error(intl.formatMessage({\n                                id: 'Apis.APIProductCreateWrapper.error.errorMessage.create.revision',\n                                defaultMessage: 'Something went wrong while creating the API Product Revision',\n                            }));\n                        }\n                        console.error(error);\n                    });\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while adding the API Product');\n                }\n            })\n            .finally(() => setCreating(false));\n    };\n\n    return (\n        <>\n            <APICreateProductBase\n                title={pageTitle}\n            >\n                <Box>\n                    {wizardStep === 0 && (\n                        <Stepper alternativeLabel activeStep={0}>\n                            {steps.map((label) => (\n                                <Step key={label}>\n                                    <StepLabel className={classes.alternativeLabel}>{label}</StepLabel>\n                                </Step>\n                            ))}\n\n                        </Stepper>\n                    )}\n                    {wizardStep === 1 && (\n                        <Stepper alternativeLabel activeStep={1}>\n                            {steps.map((label) => (\n                                <Step key={label}>\n                                    <StepLabel>{label}</StepLabel>\n                                </Step>\n                            ))}\n                        </Stepper>\n                    )}\n                </Box>\n                <Grid container spacing={2}>\n                    {wizardStep === 0 && <Grid item md={12} />}\n                    {wizardStep === 0 && <Grid item md={1} />}\n                    <Grid item md={wizardStep === 0 ? 11 : 12}>\n                        {wizardStep === 0 && (\n                            <DefaultAPIForm\n                                onValidate={handleOnValidate}\n                                onChange={handleOnChange}\n                                api={apiInputs}\n                                isAPIProduct\n                            />\n                        )}\n                        {wizardStep === 1 && (\n                            <ProductResourcesEditWorkspace\n                                apiResources={apiResources}\n                                setApiResources={setApiResources}\n                                isStateCreate\n                                api={apiInputs}\n                            />\n                        )}\n                    </Grid>\n                    {wizardStep === 0 && <Grid item md={1} />}\n                    <Grid item md={9}>\n                        <Grid\n                            className={wizardStep === 1 && classes.saveButton}\n                            container\n                            direction='row'\n                            justify='flex-start'\n                            alignItems='center'\n                            spacing={2}\n                        >\n                            <Grid item>\n                                {wizardStep === 1\n                                    && (\n                                        <Button\n                                            onClick={() => setWizardStep((step) => step - 1)}\n                                        >\n                                            <FormattedMessage\n                                                id='Apis.Create.APIProduct.APIProductCreateWrapper.back'\n                                                defaultMessage='Back'\n                                            />\n                                        </Button>\n                                    )}\n                                {wizardStep === 0 && (\n                                    <Link to='/api-products/'>\n                                        <Button>\n                                            <FormattedMessage\n                                                id='Apis.Create.APIProduct.APIProductCreateWrapper.cancel'\n                                                defaultMessage='Cancel'\n                                            />\n                                        </Button>\n                                    </Link>\n                                )}\n                            </Grid>\n                            <Grid item>\n                                {wizardStep === 1 && (\n                                    <Button\n                                        variant='contained'\n                                        color='primary'\n                                        disabled={!apiInputs.isFormValid || isCreating || (apiResources.length === 0)\n                                                    || isPublishButtonClicked}\n                                        onClick={createAPIProductOnly}\n                                        id='create-api-product-btn'\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Create.APIProduct.APIProductCreateWrapper.create'\n                                            defaultMessage='Create'\n                                        />\n                                        {isCreating && !isPublishButtonClicked && <CircularProgress size={24} />}\n                                    </Button>\n                                )}\n                                {wizardStep === 0 && (\n                                    <Button\n                                        onClick={() => setWizardStep((step) => step + 1)}\n                                        variant='contained'\n                                        color='primary'\n                                        disabled={!apiInputs.isFormValid}\n                                        id='api-product-next-btn'\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Create.APIProduct.APIProductCreateWrapper.next'\n                                            defaultMessage='Next'\n                                        />\n                                    </Button>\n                                )}\n                            </Grid>\n                            <Grid item>\n                                {wizardStep === 1 && !AuthManager.isNotPublisher() && (\n                                    <Button\n                                        variant='contained'\n                                        color='primary'\n                                        id='create-and-publish-api-product-btn'\n                                        disabled={\n                                            !apiInputs.isFormValid || isCreating || (apiResources.length === 0)\n                                            || isDeploying || isRevisioning || !apiInputs.isFormValid\n                                        }\n                                        onClick={createAndPublishAPIProduct}\n                                    >\n                                        {(!isPublishing && !isRevisioning && !isDeploying) && 'Create & Publish'}\n                                        {(isPublishing || isRevisioning || isDeploying)\n                                        && <CircularProgress size={24} />}\n                                        {isCreating && isPublishing && 'Creating API Product. . .'}\n                                        {!isCreating && isRevisioning && !isDeploying && 'Creating Revision . . .'}\n                                        {!isCreating && isPublishing\n                                        && !isRevisioning && !isDeploying && 'Publishing API Product. . .'}\n                                        {!isCreating && isPublishing\n                                        && !isRevisioning && isDeploying && 'Deploying Revision . . .'}\n                                    </Button>\n                                )}\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </APICreateProductBase>\n        </>\n\n    );\n}\n\nApiProductCreateWrapper.propTypes = {\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\n/**\n * Base component for all API create forms\n *\n * @param {Object} props title and children components are expected\n * @returns {React.Component} Base element\n */\nexport default function APICreateProductBase(props) {\n    const { title, children } = props;\n    return (\n        <Grid container spacing={3}>\n            <Grid item sm={12} md={12} />\n            {/*\n            Following two grids control the placement of whole create page\n            For centering the content better use `container` props, but instead used an empty grid item for flexibility\n             */}\n            <Grid item sm={0} md={2} />\n            <Grid item sm={12} md={8}>\n                <Grid container spacing={5}>\n                    <Grid item md={12}>\n                        {title}\n                    </Grid>\n                    <Grid item md={12}>\n                        <Paper elevation={0}>{children}</Paper>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item sm={0} md={2} />\n        </Grid>\n    );\n}\nAPICreateProductBase.propTypes = {\n    title: PropTypes.element.isRequired,\n    children: PropTypes.element.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage } from 'react-intl';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DefaultAPIForm from 'AppComponents/Apis/Create/Components/DefaultAPIForm';\nimport APICreateBase from 'AppComponents/Apis/Create/Components/APICreateBase';\n\nimport ProvideOpenAPI from './Steps/ProvideOpenAPI';\n\n/**\n     *\n     * Reduce the events triggered from API input fields to current state\n     * @param {*} currentState\n     * @param {*} inputAction\n     * @returns\n     */\nfunction apiInputsReducer(currentState, inputAction) {\n    const { action, value } = inputAction;\n    switch (action) {\n        case 'type':\n        case 'inputValue':\n        case 'name':\n        case 'version':\n        case 'endpoint':\n        case 'context':\n        case 'policies':\n        case 'isFormValid':\n            return { ...currentState, [action]: value };\n        case 'inputType':\n            return { ...currentState, [action]: value, inputValue: value === 'url' ? '' : null };\n        case 'preSetAPI':\n            return {\n                ...currentState,\n                name: value.name.replace(/[&/\\\\#,+()$~%.'\":*?<>{}\\s]/g, ''),\n                version: value.version,\n                context: value.context,\n                endpoint: value.endpoints && value.endpoints[0],\n            };\n        default:\n            return currentState;\n    }\n}\n/**\n * Handle API creation from OpenAPI Definition.\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ApiCreateOpenAPI(props) {\n    const [wizardStep, setWizardStep] = useState(0);\n    const { history } = props;\n\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        type: 'ApiCreateOpenAPI',\n        inputType: 'url',\n        inputValue: '',\n        formValidity: false,\n    });\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { name: action, value } = event.target;\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     *\n     * Set the validity of the API Inputs form\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n\n    const [isCreating, setCreating] = useState();\n    /**\n     *\n     *\n     * @param {*} params\n     */\n    function createAPI() {\n        setCreating(true);\n        const {\n            name, version, context, endpoint, policies, inputValue, inputType,\n        } = apiInputs;\n        const additionalProperties = {\n            name,\n            version,\n            context,\n            policies,\n        };\n        if (endpoint) {\n            additionalProperties.endpointConfig = {\n                endpoint_type: 'http',\n                sandbox_endpoints: {\n                    url: endpoint,\n                },\n                production_endpoints: {\n                    url: endpoint,\n                },\n            };\n        }\n        const newAPI = new API(additionalProperties);\n        const promisedResponse = inputType === 'file'\n            ? newAPI.importOpenAPIByFile(inputValue) : newAPI.importOpenAPIByUrl(inputValue);\n        promisedResponse\n            .then((api) => {\n                Alert.info('API created successfully');\n                history.push(`/apis/${api.id}/overview`);\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while adding the API');\n                }\n                console.error(error);\n            })\n            .finally(() => setCreating(false));\n    }\n\n    return (\n        <APICreateBase\n            title={(\n                <>\n                    <Typography variant='h5'>\n                        <FormattedMessage\n                            id='Apis.Create.OpenAPI.ApiCreateOpenAPI.heading'\n                            defaultMessage='Create an API using an OpenAPI definition.'\n                        />\n                    </Typography>\n                    <Typography variant='caption'>\n                        <FormattedMessage\n                            id='Apis.Create.OpenAPI.ApiCreateOpenAPI.sub.heading'\n                            defaultMessage='Create an API using an existing OpenAPI definition file or URL.'\n                        />\n                    </Typography>\n                </>\n            )}\n        >\n            <Box>\n                <Stepper alternativeLabel activeStep={0}>\n                    <Step>\n                        <StepLabel>\n                            <FormattedMessage\n                                id='Apis.Create.OpenAPI.ApiCreateOpenAPI.wizard.one'\n                                defaultMessage='Provide OpenAPI'\n                            />\n                        </StepLabel>\n                    </Step>\n\n                    <Step>\n                        <StepLabel>\n                            <FormattedMessage\n                                id='Apis.Create.OpenAPI.ApiCreateOpenAPI.wizard.two'\n                                defaultMessage='Create API'\n                            />\n                        </StepLabel>\n                    </Step>\n                </Stepper>\n            </Box>\n\n            <Grid container spacing={3}>\n                <Grid item xs={12} />\n                <Grid item xs={1} />\n                <Grid item xs={11}>\n                    {wizardStep === 0 && (\n                        <ProvideOpenAPI\n                            onValidate={handleOnValidate}\n                            apiInputs={apiInputs}\n                            inputsDispatcher={inputsDispatcher}\n                        />\n                    )}\n                    {wizardStep === 1 && (\n                        <DefaultAPIForm\n                            onValidate={handleOnValidate}\n                            onChange={handleOnChange}\n                            api={apiInputs}\n                            isAPIProduct={false}\n                        />\n                    )}\n                </Grid>\n                <Grid item xs={1} />\n                <Grid item xs={11}>\n                    <Grid container direction='row' justify='flex-start' alignItems='center' spacing={2}>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Link to='/apis/'>\n                                    <Button>\n                                        <FormattedMessage\n                                            id='Apis.Create.OpenAPI.ApiCreateOpenAPI.cancel'\n                                            defaultMessage='Cancel'\n                                        />\n                                    </Button>\n                                </Link>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button onClick={() => setWizardStep((step) => step - 1)}>\n                                    Back\n                                </Button>\n                            )}\n                        </Grid>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Button\n                                    onClick={() => setWizardStep((step) => step + 1)}\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid}\n                                    id='open-api-create-next-btn'\n                                >\n                                    Next\n                                </Button>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid || isCreating}\n                                    onClick={createAPI}\n                                    id='open-api-create-btn'\n                                >\n                                    Create\n                                    {' '}\n                                    {isCreating && <CircularProgress size={24} />}\n                                </Button>\n                            )}\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </APICreateBase>\n    );\n}\n\nApiCreateOpenAPI.propTypes = {\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer, useState, useEffect } from 'react';\nimport API from 'AppData/api';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport Wsdl from 'AppData/Wsdl';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { Link as MUILink } from '@material-ui/core';\nimport { Alert as MUIAlert, AlertTitle } from '@material-ui/lab';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DefaultAPIForm from 'AppComponents/Apis/Create/Components/DefaultAPIForm';\nimport APICreateBase from 'AppComponents/Apis/Create/Components/APICreateBase';\n\nimport ProvideWSDL from './Steps/ProvideWSDL';\n\n/**\n * Handle API creation from WSDL.\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ApiCreateWSDL(props) {\n    const intl = useIntl();\n    const [wizardStep, setWizardStep] = useState(0);\n    const { history } = props;\n    const [policies, setPolicies] = useState([]);\n\n    useEffect(() => {\n        API.policies('subscription').then((response) => {\n            const allPolicies = response.body.list;\n            if (allPolicies.length === 0) {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Create.WSDL.ApiCreateWSDL.error.policies.not.available',\n                    defaultMessage: 'Throttling policies not available. Contact your administrator',\n                }));\n            } else if (allPolicies.filter((p) => p.name === 'Unlimited').length > 0) {\n                setPolicies(['Unlimited']);\n            } else {\n                setPolicies([allPolicies[0].name]);\n            }\n        });\n    }, []);\n    /**\n     *\n     * Reduce the events triggered from API input fields to current state\n     */\n    function apiInputsReducer(currentState, inputAction) {\n        const { action, value } = inputAction;\n        switch (action) {\n            case 'type':\n            case 'inputValue':\n            case 'name':\n            case 'version':\n            case 'endpoint':\n            case 'context':\n            case 'isFormValid':\n                return { ...currentState, [action]: value };\n            case 'inputType':\n                return { ...currentState, [action]: value, inputValue: value === 'url' ? '' : null };\n            default:\n                return currentState;\n        }\n    }\n\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        type: 'SOAP',\n        inputType: 'url',\n        inputValue: '',\n        formValidity: false,\n        mode: 'create',\n    });\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { name: action, value } = event.target;\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     *\n     * Set the validity of the API Inputs form\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n\n    const [isCreating, setCreating] = useState();\n    /**\n     *\n     *\n     * @param {*} params\n     */\n    function createAPI() {\n        setCreating(true);\n        const {\n            name, version, context, endpoint, type,\n        } = apiInputs;\n        const additionalProperties = {\n            name,\n            version,\n            context,\n            policies,\n        };\n        if (endpoint) {\n            additionalProperties.endpointConfig = {\n                endpoint_type: type === 'SOAPTOREST' ? 'address' : 'http',\n                sandbox_endpoints: {\n                    type: type === 'SOAPTOREST' ? 'address' : undefined,\n                    url: endpoint,\n                },\n                production_endpoints: {\n                    type: type === 'SOAPTOREST' ? 'address' : undefined,\n                    url: endpoint,\n                },\n            };\n        }\n        let promisedWSDLImport;\n        if (apiInputs.inputType === 'url') {\n            promisedWSDLImport = Wsdl.importByUrl(apiInputs.inputValue, additionalProperties, apiInputs.type);\n        } else {\n            promisedWSDLImport = Wsdl.importByFileOrArchive(apiInputs.inputValue, additionalProperties, apiInputs.type);\n        }\n        promisedWSDLImport\n            .then((api) => {\n                Alert.info('API created successfully');\n                history.push(`/apis/${api.id}/overview`);\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while adding the API');\n                }\n                console.error(error);\n            })\n            .finally(() => setCreating(false));\n    }\n\n    return (\n        <APICreateBase\n            title={(\n                <>\n                    <Box mb={2}>\n                        <MUIAlert severity='warning'>\n                            <AlertTitle>\n                                <FormattedMessage\n                                    id='Apis.Create.WSDL.ApiCreateWSDL.deprecated.msg'\n                                    defaultMessage='This feature is deprecated. \n                                    Please use the WSO2 Integration Studio as an alternative'\n                                />\n                            </AlertTitle>\n                            <FormattedMessage\n                                id='Apis.Create.WSDL.ApiCreateWSDL.deprecated.msg.info.link.msg'\n                                defaultMessage='Integration Studio Documentation: '\n                            />\n                            <MUILink\n                                // eslint-disable-next-line\n                                href={`https://apim.docs.wso2.com/en/4.2.0/integrate/develop/creating-artifacts/creating-an-api/`}\n                                target='_blank'>\n                                https://apim.docs.wso2.com/en/4.2.0/integrate/develop/\n                                creating-artifacts/creating-an-api/\n                            </MUILink>\n                        </MUIAlert>\n                    </Box>\n                    <Typography variant='h5'>\n                        <FormattedMessage\n                            id='Apis.Create.WSDL.ApiCreateWSDL.heading'\n                            defaultMessage='Expose a SOAP Service as a REST API'\n                        />\n                    </Typography>\n                    <Typography variant='caption'>\n                        <FormattedMessage\n                            id='Apis.Create.WSDL.ApiCreateWSDL.sub.heading'\n                            defaultMessage={\n                                'Expose an existing SOAP service as a REST API by importing the WSDL of the '\n                                + 'SOAP service.'\n                            }\n                        />\n                    </Typography>\n                </>\n            )}\n        >\n            <Box>\n                <Stepper alternativeLabel activeStep={wizardStep}>\n                    <Step>\n                        <StepLabel>Provide WSDL</StepLabel>\n                    </Step>\n\n                    <Step>\n                        <StepLabel>Create API</StepLabel>\n                    </Step>\n                </Stepper>\n            </Box>\n\n            <Grid container spacing={3}>\n                <Grid item md={12} />\n                <Grid item md={1} />\n                <Grid item md={11}>\n                    {wizardStep === 0 && (\n                        <ProvideWSDL\n                            onValidate={handleOnValidate}\n                            apiInputs={apiInputs}\n                            inputsDispatcher={inputsDispatcher}\n                        />\n                    )}\n                    {wizardStep === 1 && (\n                        <DefaultAPIForm\n                            onValidate={handleOnValidate}\n                            onChange={handleOnChange}\n                            api={apiInputs}\n                            isAPIProduct={false}\n                        />\n                    )}\n                </Grid>\n                <Grid item md={1} />\n                <Grid item md={9}>\n                    <Grid container direction='row' justify='flex-start' alignItems='center' spacing={2}>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Link to='/apis/'>\n                                    <Button>\n                                        <FormattedMessage\n                                            id='Apis.Create.OpenAPI.ApiCreateOpenAPI.cancel'\n                                            defaultMessage='Cancel'\n                                        />\n                                    </Button>\n                                </Link>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button onClick={\n                                    () => setWizardStep((step) => step - 1)\n                                }\n                                >\n                                    Back\n                                </Button>\n                            )}\n                        </Grid>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Button\n                                    onClick={() => setWizardStep((step) => step + 1)}\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid}\n                                >\n                                    Next\n                                </Button>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid || isCreating}\n                                    onClick={createAPI}\n                                >\n                                    Create\n                                    {' '}\n                                    {isCreating && <CircularProgress size={24} />}\n                                </Button>\n                            )}\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </APICreateBase>\n    );\n}\n\nApiCreateWSDL.propTypes = {\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer, useState, useEffect } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport { Link, useHistory } from 'react-router-dom';\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DefaultAPIForm from 'AppComponents/Apis/Create/Components/DefaultAPIForm';\nimport APICreateBase from 'AppComponents/Apis/Create/Components/APICreateBase';\n\nimport ProvideGraphQL from './Steps/ProvideGraphQL';\n\n/**\n * Handle API creation from GraphQL Definition.\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ApiCreateGraphQL() {\n    const intl = useIntl();\n    const [wizardStep, setWizardStep] = useState(0);\n    const history = useHistory();\n    const [policies, setPolicies] = useState([]);\n\n    useEffect(() => {\n        API.policies('subscription').then((response) => {\n            const allPolicies = response.body.list;\n            if (allPolicies.length === 0) {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Create.GraphQL.ApiCreateGraphQL.error.policies.not.available',\n                    defaultMessage: 'Throttling policies not available. Contact your administrator',\n                }));\n            } else if (allPolicies.filter((p) => p.name === 'Unlimited').length > 0) {\n                setPolicies(['Unlimited']);\n            } else {\n                setPolicies([allPolicies[0].name]);\n            }\n        });\n    }, []);\n    /**\n     *\n     * Reduce the events triggered from API input fields to current state\n     * @param {*} currentState\n     * @param {*} inputAction\n     * @returns\n     */\n    function apiInputsReducer(currentState, inputAction) {\n        const { action, value } = inputAction;\n        switch (action) {\n            case 'type':\n            case 'inputValue':\n            case 'name':\n            case 'version':\n            case 'endpoint':\n            case 'context':\n            case 'isFormValid':\n                return { ...currentState, [action]: value };\n            case 'inputType':\n                return { ...currentState, [action]: value, inputValue: value === 'url' ? '' : null };\n            case 'graphQLInfo':\n                return { ...currentState, [action]: value };\n            case 'preSetAPI':\n                return {\n                    ...currentState,\n                    name: value.name.replace(/[&/\\\\#,+()$~%.'\":*?<>{}\\s]/g, ''),\n                    version: value.version,\n                    context: value.context,\n                };\n            default:\n                return currentState;\n        }\n    }\n\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        type: 'ApiCreateGraphQL',\n        inputType: 'file',\n        inputValue: '',\n        formValidity: false,\n    });\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { name: action, value } = event.target;\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     *\n     * Set the validity of the API Inputs form\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n\n    const [isCreating, setCreating] = useState();\n    /**\n     *\n     *\n     * @param {*} params\n     */\n    function createAPI() {\n        setCreating(true);\n        const {\n            name,\n            version,\n            context,\n            endpoint,\n            implementationType,\n            inputValue,\n            graphQLInfo: { operations },\n        } = apiInputs;\n        const additionalProperties = {\n            name,\n            version,\n            context,\n            policies,\n            operations,\n        };\n        const uploadMethod = 'file';\n        if (endpoint) {\n            additionalProperties.endpointConfig = {\n                endpoint_type: 'http',\n                sandbox_endpoints: {\n                    url: endpoint,\n                },\n                production_endpoints: {\n                    url: endpoint,\n                },\n            };\n        }\n        const newApi = new API(additionalProperties);\n        const apiData = {\n            additionalProperties: JSON.stringify(additionalProperties),\n            implementationType,\n            [uploadMethod]: uploadMethod,\n            file: inputValue,\n        };\n\n        newApi\n            .importGraphQL(apiData)\n            .then((response) => {\n                const uuid = response.obj.id;\n                Alert.info(`${name} API created successfully`);\n                history.push(`/apis/${uuid}/overview`);\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while adding the API');\n                }\n                console.error(error);\n            })\n            .finally(() => setCreating(false));\n    }\n\n    return (\n        <APICreateBase\n            title={(\n                <>\n                    <Typography variant='h5'>\n                        <FormattedMessage\n                            id='Apis.Create.GraphQL.ApiCreateGraphQL.heading'\n                            defaultMessage='Create an API using a GraphQL SDL definition'\n                        />\n                    </Typography>\n                    <Typography variant='caption'>\n                        <FormattedMessage\n                            id='Apis.Create.GraphQL.ApiCreateGraphQL.sub.heading'\n                            defaultMessage='Create an API by importing an existing GraphQL SDL definition.'\n                        />\n                    </Typography>\n                </>\n            )}\n        >\n            <Box>\n                {wizardStep === 0 && (\n                    <Stepper alternativeLabel activeStep={0}>\n                        <Step>\n                            <StepLabel>\n                                <FormattedMessage\n                                    id='Apis.Create.GraphQL.ApiCreateGraphQL.wizard.one'\n                                    defaultMessage='Provide GraphQL'\n                                />\n                            </StepLabel>\n                        </Step>\n\n                        <Step>\n                            <StepLabel>\n                                <FormattedMessage\n                                    id='Apis.Create.GraphQL.ApiCreateGraphQL.wizard.two'\n                                    defaultMessage='Create API'\n                                />\n                            </StepLabel>\n                        </Step>\n                    </Stepper>\n                )}\n                {wizardStep === 1 && (\n                    <Stepper alternativeLabel activeStep={1}>\n                        <Step>\n                            <StepLabel>\n                                <FormattedMessage\n                                    id='Apis.Create.GraphQL.ApiCreateGraphQL.wizard.one'\n                                    defaultMessage='Provide GraphQL'\n                                />\n                            </StepLabel>\n                        </Step>\n\n                        <Step>\n                            <StepLabel>\n                                <FormattedMessage\n                                    id='Apis.Create.GraphQL.ApiCreateGraphQL.wizard.two'\n                                    defaultMessage='Create API'\n                                />\n                            </StepLabel>\n                        </Step>\n                    </Stepper>\n                )}\n            </Box>\n\n            <Grid container spacing={3} style={{ marginBottom: 20 }}>\n                <Grid item md={12} />\n                <Grid item md={1} />\n                <Grid item md={11}>\n                    {wizardStep === 0 && (\n                        <ProvideGraphQL\n                            onValidate={handleOnValidate}\n                            apiInputs={apiInputs}\n                            inputsDispatcher={inputsDispatcher}\n                        />\n                    )}\n                    {wizardStep === 1 && (\n                        <DefaultAPIForm\n                            onValidate={handleOnValidate}\n                            onChange={handleOnChange}\n                            api={apiInputs}\n                            isAPIProduct={false}\n                        />\n                    )}\n                </Grid>\n                <Grid item md={1} />\n                <Grid item md={9}>\n                    <Grid container direction='row' justify='flex-start' alignItems='center' spacing={2}>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Link to='/apis/'>\n                                    <Button>\n                                        <FormattedMessage\n                                            id='Apis.Create.OpenAPI.ApiCreateOpenAPI.cancel'\n                                            defaultMessage='Cancel'\n                                        />\n                                    </Button>\n                                </Link>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button onClick={\n                                    () => setWizardStep((step) => step - 1)\n                                }\n                                >\n                                    <FormattedMessage\n                                        id='Apis.Create.GraphQL.ApiCreateGraphQL.back'\n                                        defaultMessage='Back'\n                                    />\n                                </Button>\n                            )}\n                        </Grid>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Button\n                                    onClick={() => setWizardStep((step) => step + 1)}\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid}\n                                    data-testid='create-graphql-next-btn'\n                                >\n                                    <FormattedMessage\n                                        id='Apis.Create.GraphQL.ApiCreateGraphQL.next'\n                                        defaultMessage='Next'\n                                    />\n                                </Button>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid || isCreating}\n                                    onClick={createAPI}\n                                    data-testid='itest-create-graphql-api-button'\n                                >\n                                    <FormattedMessage\n                                        id='Apis.Create.GraphQL.ApiCreateGraphQL.create'\n                                        defaultMessage='Create'\n                                    />\n                                    {' '}\n                                    {isCreating && <CircularProgress size={24} />}\n                                </Button>\n                            )}\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </APICreateBase>\n    );\n}\n","/**\n * Copyright (c) 2018, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\nimport APICreateDefault from 'AppComponents/Apis/Create/Default/APICreateDefault';\n\nconst ApiCreateWebSocket = () => {\n    return (<APICreateDefault isWebSocket />);\n};\nexport default ApiCreateWebSocket;\n","/**\n * Copyright (c) 2020, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React, { useReducer, useState, useEffect } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { withRouter } from 'react-router';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { Link, useParams } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport APICreateBase from 'AppComponents/Apis/Create/Components/APICreateBase';\nimport Banner from 'AppComponents/Shared/Banner';\nimport DefaultAPIForm from 'AppComponents/Apis/Create/Components/DefaultAPIForm';\nimport { usePublisherSettings } from 'AppComponents/Shared/AppContext';\nimport AuthManager from 'AppData/AuthManager';\n\nconst useStyles = makeStyles((theme) => ({\n    mandatoryStar: {\n        color: theme.palette.error.main,\n        marginLeft: theme.spacing(0.1),\n    },\n}));\n\nconst APICreateStreamingAPI = (props) => {\n    const { history } = props;\n    const intl = useIntl();\n    const { data: settings, isLoading, error: settingsError } = usePublisherSettings();\n    const [pageError, setPageError] = useState(null);\n    useEffect(() => {\n        if (settingsError) {\n            setPageError(settingsError.message);\n        }\n    }, [settingsError]);\n    const [isCreating, setIsCreating] = useState();\n    const [isPublishing, setIsPublishing] = useState(false);\n    const [isRevisioning, setIsRevisioning] = useState(false);\n    const [isDeploying, setIsDeploying] = useState(false);\n    const [isPublishButtonClicked, setIsPublishButtonClicked] = useState(false);\n    const classes = useStyles();\n    const [policies, setPolicies] = useState([]);\n    let { apiType } = useParams();\n    if (apiType) {\n        apiType = apiType.toUpperCase();\n    }\n    const isWebSub = (apiType === 'WEBSUB');\n\n    useEffect(() => {\n        API.asyncAPIPolicies().then((response) => {\n            const allPolicies = response.body.list;\n            if (allPolicies.length === 0) {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Create.Default.APICreateDefault.error.policies.not.available',\n                    defaultMessage: 'Throttling policies not available. Contact your administrator',\n                }));\n            } else if (isWebSub && allPolicies.filter((p) => p.policyName === 'AsyncWHUnlimited').length > 0) {\n                setPolicies(['AsyncWHUnlimited']);\n            } else if (!isWebSub && allPolicies.filter((p) => p.policyName === 'AsyncUnlimited').length > 0) {\n                setPolicies(['AsyncUnlimited']);\n            } else {\n                setPolicies([allPolicies[0].policyName]);\n            }\n        });\n    }, []);\n\n    const protocols = [\n        {\n            displayName: 'WebSocket',\n            description: 'WebSocket API',\n        },\n        {\n            displayName: 'WebSub',\n            description: 'WebHook API based on WebSub specification',\n        },\n        {\n            displayName: 'SSE',\n            description: 'Server-Sent Events',\n        },\n    ];\n    const protocolKeys = {\n        WebSocket: 'WS',\n        SSE: 'SSE',\n        WebSub: 'WEBSUB',\n    };\n    const protocolDisplayNames = {\n        WS: 'WebSocket',\n        SSE: 'SSE',\n        WEBSUB: 'WebSub',\n    };\n    const [hideEndpoint, setHideEndpoint] = useState(!apiType || apiType === protocolKeys.WebSub);\n\n    /**\n     *\n     * Reduce the events triggered from API input fields to current state\n     */\n    function apiInputsReducer(currentState, inputAction) {\n        const { action, value } = inputAction;\n        switch (action) {\n            case 'name':\n            case 'version':\n            case 'context':\n            case 'endpoint':\n            case 'policies':\n            case 'isFormValid':\n                return { ...currentState, [action]: value };\n            case 'protocol':\n                setHideEndpoint(protocolKeys[value] === protocolKeys.WebSub);\n                return { ...currentState, [action]: protocolKeys[value] };\n            default:\n                return currentState;\n        }\n    }\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        formValidity: false,\n    });\n\n    const isAPICreatable = apiInputs.name && apiInputs.context && apiInputs.version && !isCreating;\n    // TODO: If WebSub API no endpoint is required. Or else check apiInputs.endpoint has a value.\n    const isPublishable = true;\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { name: action, value } = event.target;\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     *\n     * Set the validity of the API Inputs form\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n\n    /**\n     *\n     */\n    function createAPI() {\n        setIsCreating(true);\n        const {\n            name, version, context, endpoint, protocol,\n        } = apiInputs;\n        const apiData = {\n            name,\n            version,\n            context,\n            endpoint,\n            type: apiType || protocol.toUpperCase(),\n            policies,\n        };\n\n        let endpointType = 'http';\n        if ((apiType && apiType.toUpperCase() === 'WS') || (protocol && protocol.toUpperCase() === 'WS')) {\n            endpointType = 'ws';\n        }\n        if (endpoint) {\n            apiData.endpointConfig = {\n                endpoint_type: endpointType,\n                sandbox_endpoints: {\n                    url: endpoint,\n                },\n                production_endpoints: {\n                    url: endpoint,\n                },\n            };\n        }\n\n\n        const newAPI = new API(apiData);\n        const promisedCreatedAPI = newAPI\n            .saveStreamingAPI()\n            .then((api) => {\n                Alert.info('API created successfully');\n                return api;\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while adding the API');\n                }\n                console.error(error);\n                setIsPublishing(false); // We don't publish if something when wrong\n            })\n            .finally(() => {\n                setIsCreating(false);\n            });\n        return promisedCreatedAPI.finally(() => setIsCreating(false));\n    }\n\n    /**\n     *\n     */\n    function createAndPublish() {\n        const streamingApi = new API();\n        setIsPublishButtonClicked(true);\n        createAPI().then((api) => {\n            setIsRevisioning(true);\n            const body = {\n                description: 'Initial Revision',\n            };\n            streamingApi.createRevision(api.id, body)\n                .then((api1) => {\n                    const revisionId = api1.body.id;\n                    Alert.info('API Revision created successfully');\n                    setIsRevisioning(false);\n                    const envList = settings.environment.map((env) => env.name);\n                    const body1 = [];\n                    const getFirstVhost = (envName) => {\n                        const env = settings.environment.find(\n                            (e) => e.name === envName && e.vhosts.length > 0,\n                        );\n                        return env && env.vhosts[0].host;\n                    };\n                    if (envList && envList.length > 0) {\n                        if (envList.includes('Default') && getFirstVhost('Default')) {\n                            body1.push({\n                                name: 'Default',\n                                displayOnDevportal: true,\n                                vhost: getFirstVhost('Default'),\n                            });\n                        } else if (getFirstVhost(envList[0])) {\n                            body1.push({\n                                name: envList[0],\n                                displayOnDevportal: true,\n                                vhost: getFirstVhost(envList[0]),\n                            });\n                        }\n                    }\n                    setIsDeploying(true);\n                    streamingApi.deployRevision(api.id, revisionId, body1)\n                        .then(() => {\n                            Alert.info('API Revision Deployed Successfully');\n                            setIsDeploying(false);\n                            // Publishing API after deploying\n                            setIsPublishing(true);\n                            api.publish()\n                                .then((response) => {\n                                    const { workflowStatus } = response.body;\n                                    if (workflowStatus === APICreateStreamingAPI.WORKFLOW_STATUS.CREATED) {\n                                        Alert.info(intl.formatMessage({\n                                            id: 'Apis.Create.Default.APICreateDefault.success.publishStatus',\n                                            defaultMessage: 'Lifecycle state change request has been sent',\n                                        }));\n                                    } else {\n                                        Alert.info(intl.formatMessage({\n                                            id: 'Apis.Create.Default.APICreateDefault.success.otherStatus',\n                                            defaultMessage: 'API updated successfully',\n                                        }));\n                                    }\n                                    history.push(`/apis/${api.id}/overview`);\n                                })\n                                .catch((error) => {\n                                    if (error.response) {\n                                        Alert.error(error.response.body.description);\n                                        setPageError(error.response.body);\n                                    } else {\n                                        Alert.error(intl.formatMessage({\n                                            id: 'Apis.Create.Default.APICreateDefault.error.errorMessage.publish',\n                                            defaultMessage: 'Something went wrong while publishing the API',\n                                        }));\n                                        setPageError('Something went wrong while publishing the API');\n                                    }\n                                    console.error(error);\n                                })\n                                .finally(() => {\n                                    setIsPublishing(false);\n                                    setIsPublishButtonClicked(false);\n                                });\n                        })\n                        .catch((error) => {\n                            if (error.response) {\n                                Alert.error(error.response.body.description);\n                                setPageError(error.response.body);\n                            } else {\n                                Alert.error(intl.formatMessage({\n                                    id: 'Apis.Create.Default.APICreateDefault.error.errorMessage.deploy.revision',\n                                    defaultMessage: 'Something went wrong while deploying the API Revision',\n                                }));\n                                setPageError('Something went wrong while deploying the API Revision');\n                            }\n                            console.error(error);\n                        })\n                        .finally(() => {\n                            setIsDeploying(false);\n                        });\n                })\n                .catch((error) => {\n                    if (error.response) {\n                        Alert.error(error.response.body.description);\n                        setPageError(error.response.body);\n                    } else {\n                        Alert.error(intl.formatMessage({\n                            id: 'Apis.Create.Default.APICreateDefault.error.errorMessage.create.revision',\n                            defaultMessage: 'Something went wrong while creating the API Revision',\n                        }));\n                        setPageError('Something went wrong while creating the API Revision');\n                    }\n                    console.error(error);\n                })\n                .finally(() => {\n                    setIsRevisioning(false);\n                });\n        });\n    }\n\n    function createAPIOnly() {\n        createAPI().then((api) => {\n            history.push(`/apis/${api.id}/overview`);\n        });\n    }\n\n    const pageTitle = (\n        <>\n            <Typography variant='h5'>\n                <FormattedMessage\n                    id='Apis.Create.StreamingAPI.APICreateStreamingAPI.api.heading'\n                    defaultMessage='Create a Streaming API'\n                />\n            </Typography>\n            <Typography variant='caption'>\n                {isWebSub ? (\n                    <FormattedMessage\n                        id='Apis.Create.StreamingAPI.APICreateStreamingAPI.websub.api.sub.heading'\n                        defaultMessage='Create an API by providing a Name, a Version and a Context'\n                    />\n                ) : (\n                    <FormattedMessage\n                        id='Apis.Create.StreamingAPI.APICreateStreamingAPI.api.sub.heading'\n                        defaultMessage='Create an API by providing a Name, a Version, a Context and the Endpoint'\n                    />\n                )}\n\n            </Typography>\n        </>\n    );\n\n    return (\n        <APICreateBase title={pageTitle}>\n            <Grid container direction='row' justify='center' alignItems='center' spacing={3}>\n                {/* Page error banner */}\n                {pageError && (\n                    <Grid item xs={11}>\n                        <Banner\n                            onClose={() => setPageError(null)}\n                            disableActions\n                            dense\n                            paperProps={{ elevation: 1 }}\n                            type='error'\n                            message={pageError}\n                        />\n                    </Grid>\n                )}\n                {/* end of Page error banner */}\n                <Grid item xs={12}>\n                    {/* This -2 is to counter act with Grid container spacing 3 */}\n                    {isLoading && (\n                        <Box mt={-2}>\n                            <CircularProgress data-testid='loading-publisher-settings' />\n                        </Box>\n                    )}\n                </Grid>\n                <Grid item xs={12} />\n                <Grid item md={1} xs={0} />\n                <Grid item md={11} xs={12}>\n                    <DefaultAPIForm\n                        onValidate={handleOnValidate}\n                        onChange={handleOnChange}\n                        api={apiInputs}\n                        endpointPlaceholderText='Streaming Provider'\n                        appendChildrenBeforeEndpoint\n                        hideEndpoint={hideEndpoint}\n                        isWebSocket={(apiType && apiType === protocolKeys.WebSocket)\n                            || apiInputs.protocol === protocolKeys.WebSocket}\n                    >\n                        <TextField\n                            fullWidth\n                            select\n                            label={(\n                                <>\n                                    <FormattedMessage\n                                        id='Apis.Create.streaming.Components.SelectPolicies.business.plans'\n                                        defaultMessage='Protocol'\n                                    />\n                                    <sup className={classes.mandatoryStar}>*</sup>\n                                </>\n                            )}\n                            value={apiType ? protocolDisplayNames[apiType] : apiInputs.protocol}\n                            disabled={apiType}\n                            name='protocol'\n                            SelectProps={{\n                                multiple: false,\n                                renderValue: (selected) => (selected),\n                            }}\n                            margin='normal'\n                            variant='outlined'\n                            InputProps={{\n                                id: 'itest-id-apipolicies-input',\n                            }}\n                            onChange={handleOnChange}\n                        >\n                            {protocols.map((protocol) => (\n                                <MenuItem\n                                    dense\n                                    disableGutters={false}\n                                    value={protocol.displayName}\n                                >\n                                    <ListItemText primary={protocol.displayName} secondary={protocol.description} />\n                                </MenuItem>\n                            ))}\n                        </TextField>\n                    </DefaultAPIForm>\n                </Grid>\n                <Grid item md={1} xs={0} />\n                <Grid item md={11} xs={12}>\n                    <Grid container direction='row' justify='flex-start' alignItems='center' spacing={2}>\n                        <Grid item>\n                            <Button\n                                variant='contained'\n                                color='primary'\n                                disabled={!(isAPICreatable && apiInputs.isFormValid)}\n                                onClick={createAPIOnly}\n                                data-testid='itest-create-streaming-api-button'\n                            >\n                                Create\n                                {' '}\n                                {isCreating && !isPublishButtonClicked && <CircularProgress size={24} />}\n                            </Button>\n                        </Grid>\n                        {!AuthManager.isNotPublisher() && (\n                            <Grid item>\n                                <Button\n                                    id='itest-id-apicreatedefault-createnpublish'\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={isDeploying || isRevisioning || !isPublishable\n                                        || !isAPICreatable || !apiInputs.isFormValid}\n                                    onClick={createAndPublish}\n                                >\n                                    {(!isPublishing && !isRevisioning && !isDeploying) && 'Create & Publish'}\n                                    {(isPublishing || isRevisioning || isDeploying) && <CircularProgress size={24} />}\n                                    {isCreating && isPublishing && 'Creating API . . .'}\n                                    {!isCreating && isRevisioning && !isDeploying && 'Creating Revision . . .'}\n                                    {!isCreating && isPublishing\n                                        && !isRevisioning && !isDeploying && 'Publishing API . . .'}\n                                    {!isCreating && isPublishing\n                                        && !isRevisioning && isDeploying && 'Deploying Revision . . .'}\n                                </Button>\n                            </Grid>\n                        )}\n                        <Grid item>\n                            <Link to='/apis/'>\n                                <Button variant='text'>\n                                    <FormattedMessage\n                                        id='Apis.Create.Default.APICreateDefault.cancel'\n                                        defaultMessage='Cancel'\n                                    />\n                                </Button>\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </APICreateBase>\n    );\n};\nAPICreateStreamingAPI.WORKFLOW_STATUS = {\n    CREATED: 'CREATED',\n};\n\nexport default withRouter(APICreateStreamingAPI);\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage } from 'react-intl';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DefaultAPIForm from 'AppComponents/Apis/Create/Components/DefaultAPIForm';\nimport APICreateBase from 'AppComponents/Apis/Create/Components/APICreateBase';\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Chip from '@material-ui/core/Chip';\nimport Joi from '@hapi/joi';\nimport { upperCaseString } from 'AppData/stringFormatter';\nimport ExternalEndpoint from 'AppComponents/Apis/Create/AsyncAPI/ExternalEndpoint';\nimport ProvideAsyncAPI from './Steps/ProvideAsyncAPI';\n\n/**\n * Handle API creation from OpenAPI Definition.\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ApiCreateAsyncAPI(props) {\n    const [wizardStep, setWizardStep] = useState(0);\n    const { history } = props;\n    // eslint-disable-next-line no-use-before-define\n    const classes = useStyles();\n    const [hideEndpoint, setHideEndpoint] = useState(true);\n    const [hideExternalEndpoint, setHideExternalEndpoint] = useState(true);\n    const [isValidExternalEndpoint, setValidExternalEndpoint] = useState(true);\n\n    /**\n     *\n     * Reduce the events triggered from API input fields to current state\n     * @param {*} currentState\n     * @param {*} inputAction\n     * @returns\n     */\n    function apiInputsReducer(currentState, inputAction) {\n        const { action, value } = inputAction;\n        switch (action) {\n            case 'type':\n            case 'inputValue':\n            case 'name':\n            case 'version':\n            case 'endpoint':\n            case 'gatewayVendor':\n            case 'asyncTransportProtocols':\n            case 'protocol':\n            case 'context':\n            case 'policies':\n            case 'isFormValid':\n                return { ...currentState, [action]: value };\n            case 'inputType':\n                return { ...currentState, [action]: value, inputValue: value === 'url' ? '' : null };\n            case 'preSetAPI':\n                return {\n                    ...currentState,\n                    name: value.name.replace(/[&/\\\\#,+()$~%.'\":*?<>{}\\s]/g, ''),\n                    version: value.version,\n                    context: value.context,\n                    endpoint: value.endpoints && value.endpoints[0],\n                    gatewayVendor: value.gatewayVendor,\n                    asyncTransportProtocols: value.asyncTransportProtocols,\n                };\n            case 'externalEndpoint':\n                return { ...currentState, [action]: value };\n            default:\n                return currentState;\n        }\n    }\n\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        type: 'ApiCreateAsyncAPI',\n        inputType: 'url',\n        inputValue: '',\n        formValidity: false,\n    });\n\n    const protocols = [\n        {\n            name: 'ws',\n            displayName: 'WebSocket',\n            description: 'WebSocket API',\n        },\n        {\n            name: 'websub',\n            displayName: 'WebSub',\n            description: 'WebHook API based on WebSub specification',\n        },\n        {\n            name: 'sse',\n            displayName: 'SSE',\n            description: 'Server-Sent Events',\n        },\n        {\n            name: 'other',\n            displayName: 'Other',\n            description: 'Other Async APIs such as AMQP, MQTT etc.',\n        },\n    ];\n\n    const protocolKeys = {\n        WebSocket: 'WS',\n        SSE: 'SSE',\n        WebSub: 'WEBSUB',\n        Other: 'ASYNC',\n    };\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { name: action, value } = event.target;\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     * Validate the external endpoint URL\n     * @param value endpoint URL\n     * @returns {boolean} validity of the URL\n     */\n    function validateEndpoint(value) {\n        if (value) {\n            const urlSchema = Joi.string().uri().empty();\n            return !urlSchema.validate(value).error;\n        }\n        return false;\n    }\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChangeForProtocol(event) {\n        const { name: action, value } = event.target;\n        if (value === 'WebSub') {\n            setHideEndpoint(true);\n            setHideExternalEndpoint(true);\n            setValidExternalEndpoint(true);\n        } else if (value === 'Other') {\n            setHideEndpoint(true);\n            setHideExternalEndpoint(false);\n            setValidExternalEndpoint(validateEndpoint(apiInputs.externalEndpoint));\n        } else {\n            setHideEndpoint(false);\n            setHideExternalEndpoint(true);\n            setValidExternalEndpoint(true);\n        }\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     *\n     * Set the validity of the API Inputs form\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n\n    const [isCreating, setCreating] = useState();\n\n    /**\n     *\n     *\n     * @param {*} params\n     */\n    function createAPI() {\n        setCreating(true);\n        const {\n            name, version, context, endpoint, policies, inputValue, inputType, protocol, gatewayVendor,\n            externalEndpoint,\n        } = apiInputs;\n        const additionalProperties = {\n            name,\n            version,\n            context,\n            policies,\n            type: protocolKeys[protocol],\n            gatewayVendor,\n        };\n        if (gatewayVendor === 'solace') {\n            additionalProperties.type = protocolKeys.WebSub;\n        }\n        if (endpoint) {\n            additionalProperties.endpointConfig = {\n                endpoint_type: 'http',\n                sandbox_endpoints: {\n                    url: endpoint,\n                },\n                production_endpoints: {\n                    url: endpoint,\n                },\n            };\n        }\n        if (protocolKeys[protocol] === 'ASYNC') {\n            additionalProperties.advertiseInfo = {\n                advertised: true,\n                apiExternalProductionEndpoint: externalEndpoint,\n                apiExternalSandboxEndpoint: externalEndpoint,\n                originalDevPortalUrl: '',\n                apiOwner: 'admin',\n                vendor: 'WSO2',\n            };\n        }\n        const newAPI = new API(additionalProperties);\n        const promisedResponse = inputType === 'file'\n            ? newAPI.importAsyncAPIByFile(inputValue) : newAPI.importAsyncAPIByUrl(inputValue);\n        promisedResponse\n            .then((api) => {\n                Alert.info('API created successfully');\n                history.push(`/apis/${api.id}/overview`);\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while adding the API');\n                }\n                console.error(error);\n            })\n            .finally(() => setCreating(false));\n    }\n\n    return (\n        <APICreateBase\n            title={(\n                <>\n                    <Typography variant='h5'>\n                        <FormattedMessage\n                            id='Apis.Create.AsyncAPI.ApiCreateAsyncAPI.heading'\n                            defaultMessage='Create an API using an AsyncAPI definition.'\n                        />\n                    </Typography>\n                    <Typography variant='caption'>\n                        <FormattedMessage\n                            id='Apis.Create.AsyncAPI.ApiCreateAsyncAPI.sub.heading'\n                            defaultMessage='Create an API using an existing AsyncAPI definition file or URL.'\n                        />\n                    </Typography>\n                </>\n            )}\n        >\n            <Box>\n                <Stepper alternativeLabel activeStep={0}>\n                    <Step>\n                        <StepLabel>\n                            <FormattedMessage\n                                id='Apis.Create.AsyncAPI.ApiCreateAsyncAPI.wizard.one'\n                                defaultMessage='Provide AsyncAPI'\n                            />\n                        </StepLabel>\n                    </Step>\n\n                    <Step>\n                        <StepLabel>\n                            <FormattedMessage\n                                id='Apis.Create.AsyncAPI.ApiCreateAsyncAPI.wizard.two'\n                                defaultMessage='Create API'\n                            />\n                        </StepLabel>\n                    </Step>\n                </Stepper>\n            </Box>\n\n            <Grid container spacing={3}>\n                <Grid item xs={12} />\n                <Grid item xs={1} />\n                <Grid item xs={11}>\n                    {wizardStep === 0 && (\n                        <ProvideAsyncAPI\n                            onValidate={handleOnValidate}\n                            apiInputs={apiInputs}\n                            inputsDispatcher={inputsDispatcher}\n                        />\n                    )}\n                    {wizardStep === 1 && (\n                        <DefaultAPIForm\n                            onValidate={handleOnValidate}\n                            onChange={handleOnChange}\n                            api={apiInputs}\n                            isAPIProduct={false}\n                            hideEndpoint={hideEndpoint}\n                            endpointPlaceholderText='Streaming Provider'\n                            appendChildrenBeforeEndpoint\n                        >\n                            <Grid container spacing={2}>\n                                {apiInputs.gatewayVendor === 'solace'\n                                && apiInputs.asyncTransportProtocols.length !== 0 && (\n                                    <>\n                                        <Grid item xs={12} md={6} lg={3}>\n                                            <Typography component='p' variant='subtitle2'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.NewOverview.MetaData.solace.transports'\n                                                    defaultMessage='Available Protocols'\n                                                />\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item xs={12} md={6} lg={9}>\n                                            {apiInputs.asyncTransportProtocols.map((protocol) => (\n                                                <Chip\n                                                    data-testid={upperCaseString(protocol) + '-label'}\n                                                    key={protocol}\n                                                    label={upperCaseString(protocol)}\n                                                    style={{\n                                                        'font-size': 13,\n                                                        height: 20,\n                                                        marginRight: 5,\n                                                    }}\n                                                    color='primary'\n                                                />\n                                            ))}\n                                        </Grid>\n                                    </>\n                                )}\n                            </Grid>\n                            {apiInputs.gatewayVendor === 'wso2' && (\n                                <TextField\n                                    fullWidth\n                                    select\n                                    label={(\n                                        <>\n                                            <FormattedMessage\n                                                id='Apis.Create.asyncAPI.Components.SelectPolicies.business.plans'\n                                                defaultMessage='Protocol'\n                                            />\n                                            <sup className={classes.mandatoryStar}>*</sup>\n                                        </>\n                                    )}\n                                    value={apiInputs.protocol}\n                                    name='protocol'\n                                    SelectProps={{\n                                        multiple: false,\n                                        renderValue: (selected) => (selected),\n                                    }}\n                                    margin='normal'\n                                    variant='outlined'\n                                    InputProps={{\n                                        id: 'itest-id-apipolicies-input',\n                                    }}\n                                    onChange={handleOnChangeForProtocol}\n                                >\n                                    {protocols.map((protocol) => (\n                                        <MenuItem\n                                            dense\n                                            disableGutters={false}\n                                            id={protocol.name}\n                                            key={protocol.name}\n                                            value={protocol.displayName}\n                                        >\n                                            <ListItemText\n                                                primary={protocol.displayName}\n                                                secondary={protocol.description}\n                                            />\n                                        </MenuItem>\n                                    ))}\n                                </TextField>\n                            )}\n                            {!hideExternalEndpoint && (\n                                <ExternalEndpoint\n                                    classes={classes}\n                                    apiInputs={apiInputs}\n                                    inputsDispatcher={inputsDispatcher}\n                                    isValidExternalEndpoint={isValidExternalEndpoint}\n                                    setValidExternalEndpoint={setValidExternalEndpoint}\n                                    validateEndpoint={validateEndpoint}\n                                />\n                            )}\n                        </DefaultAPIForm>\n                    )}\n                </Grid>\n                <Grid item xs={1} />\n                <Grid item xs={11}>\n                    <Grid container direction='row' justify='flex-start' alignItems='center' spacing={2}>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Link to='/apis/'>\n                                    <Button>\n                                        <FormattedMessage\n                                            id='Apis.Create.AsyncAPI.ApiCreateAsyncAPI.cancel'\n                                            defaultMessage='Cancel'\n                                        />\n                                    </Button>\n                                </Link>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button onClick={() => setWizardStep((step) => step - 1)}>\n                                    Back\n                                </Button>\n                            )}\n                        </Grid>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Button\n                                    data-testid= 'next-btn'\n                                    onClick={() => setWizardStep((step) => step + 1)}\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid}\n                                >\n                                    Next\n                                </Button>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button\n                                    data-testid='asyncapi-create-btn'\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid || isCreating || !isValidExternalEndpoint}\n                                    onClick={createAPI}\n                                >\n                                    Create\n                                    {' '}\n                                    {isCreating && <CircularProgress size={24} />}\n                                </Button>\n                            )}\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </APICreateBase>\n    );\n}\n\nApiCreateAsyncAPI.propTypes = {\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n    mandatoryStar: {\n        color: theme.palette.error.main,\n        marginLeft: theme.spacing(0.1),\n    },\n    externalEndpointWarning: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n    alertTitle: {\n        fontWeight: theme.typography.fontWeightMedium,\n        marginTop: -2,\n    },\n}));\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport TextField from '@material-ui/core/TextField';\nimport MuiAlert from 'AppComponents/Shared/MuiAlert';\nimport Typography from '@material-ui/core/Typography';\n\nconst ExternalEndpoint = (props) => {\n    const {\n        classes, apiInputs, inputsDispatcher, isValidExternalEndpoint, setValidExternalEndpoint, validateEndpoint,\n    } = props;\n    const handleOnChangeExternalEndpoint = (event) => {\n        const { name: action, value } = event.target;\n        setValidExternalEndpoint(validateEndpoint(value));\n        inputsDispatcher({ action, value });\n    };\n    return (\n        <>\n            <TextField\n                fullWidth\n                id='itest-id-api-external-endpoint-input'\n                label={(\n                    <>\n                        <FormattedMessage\n                            id='Apis.Create.AsyncAPI.ApiCreateAsyncAPI.externalEndpoint'\n                            defaultMessage='External Endpoint'\n                        />\n                        <sup className={classes.mandatoryStar}>*</sup>\n                    </>\n                )}\n                name='externalEndpoint'\n                value={apiInputs.externalEndpoint}\n                onChange={handleOnChangeExternalEndpoint}\n                helperText={\n                    !isValidExternalEndpoint && (\n                        <div style={{ marginTop: '10px' }}>\n                            <FormattedMessage\n                                id={'Apis.Create.AsyncAPI.ApiCreateAsyncAPI'\n                                + '.externalEndpoint.error'}\n                                defaultMessage='Invalid Endpoint URL'\n                            />\n                        </div>\n                    )\n                }\n                error={!isValidExternalEndpoint}\n                margin='normal'\n                variant='outlined'\n            />\n            <MuiAlert severity='warning' className={classes.externalEndpointWarning}>\n                <Typography gutterBottom component='div' className={classes.alertTitle}>\n                    <FormattedMessage\n                        id='Apis.Create.AsyncAPI.ApiCreateAsyncAPI.advertiseOnly.warning.title'\n                        defaultMessage='\"Other\" type streaming APIs will be created as third party APIs.'\n                    />\n                </Typography>\n                <FormattedMessage\n                    id='Apis.Create.AsyncAPI.ApiCreateAsyncAPI.advertiseOnly.warning'\n                    defaultMessage={'API Manager only supports the streaming APIs of types'\n                    + ' WebSocket, SSE and WebSub. Please create one of the supported types'\n                    + ' if you want to deploy it in the gateway.'}\n                />\n            </MuiAlert>\n        </>\n    );\n};\n\nexport default ExternalEndpoint;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { darken, lighten } from '../styles/colorManipulator';\nimport useTheme from '../styles/useTheme';\nvar TRANSITION_DURATION = 4; // seconds\n\nexport var styles = function styles(theme) {\n  var getColor = function getColor(color) {\n    return theme.palette.type === 'light' ? lighten(color, 0.62) : darken(color, 0.5);\n  };\n\n  var backgroundPrimary = getColor(theme.palette.primary.main);\n  var backgroundSecondary = getColor(theme.palette.secondary.main);\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      overflow: 'hidden',\n      height: 4,\n      '@media print': {\n        colorAdjust: 'exact'\n      }\n    },\n\n    /* Styles applied to the root and bar2 element if `color=\"primary\"`; bar2 if `variant=\"buffer\"`. */\n    colorPrimary: {\n      backgroundColor: backgroundPrimary\n    },\n\n    /* Styles applied to the root and bar2 elements if `color=\"secondary\"`; bar2 if `variant=\"buffer\"`. */\n    colorSecondary: {\n      backgroundColor: backgroundSecondary\n    },\n\n    /* Styles applied to the root element if `variant=\"determinate\"`. */\n    determinate: {},\n\n    /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `variant=\"buffer\"`. */\n    buffer: {\n      backgroundColor: 'transparent'\n    },\n\n    /* Styles applied to the root element if `variant=\"query\"`. */\n    query: {\n      transform: 'rotate(180deg)'\n    },\n\n    /* Styles applied to the additional bar element if `variant=\"buffer\"`. */\n    dashed: {\n      position: 'absolute',\n      marginTop: 0,\n      height: '100%',\n      width: '100%',\n      animation: '$buffer 3s infinite linear'\n    },\n\n    /* Styles applied to the additional bar element if `variant=\"buffer\"` and `color=\"primary\"`. */\n    dashedColorPrimary: {\n      backgroundImage: \"radial-gradient(\".concat(backgroundPrimary, \" 0%, \").concat(backgroundPrimary, \" 16%, transparent 42%)\"),\n      backgroundSize: '10px 10px',\n      backgroundPosition: '0 -23px'\n    },\n\n    /* Styles applied to the additional bar element if `variant=\"buffer\"` and `color=\"secondary\"`. */\n    dashedColorSecondary: {\n      backgroundImage: \"radial-gradient(\".concat(backgroundSecondary, \" 0%, \").concat(backgroundSecondary, \" 16%, transparent 42%)\"),\n      backgroundSize: '10px 10px',\n      backgroundPosition: '0 -23px'\n    },\n\n    /* Styles applied to the layered bar1 and bar2 elements. */\n    bar: {\n      width: '100%',\n      position: 'absolute',\n      left: 0,\n      bottom: 0,\n      top: 0,\n      transition: 'transform 0.2s linear',\n      transformOrigin: 'left'\n    },\n\n    /* Styles applied to the bar elements if `color=\"primary\"`; bar2 if `variant` not \"buffer\". */\n    barColorPrimary: {\n      backgroundColor: theme.palette.primary.main\n    },\n\n    /* Styles applied to the bar elements if `color=\"secondary\"`; bar2 if `variant` not \"buffer\". */\n    barColorSecondary: {\n      backgroundColor: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the bar1 element if `variant=\"indeterminate or query\"`. */\n    bar1Indeterminate: {\n      width: 'auto',\n      animation: '$indeterminate1 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite'\n    },\n\n    /* Styles applied to the bar1 element if `variant=\"determinate\"`. */\n    bar1Determinate: {\n      transition: \"transform .\".concat(TRANSITION_DURATION, \"s linear\")\n    },\n\n    /* Styles applied to the bar1 element if `variant=\"buffer\"`. */\n    bar1Buffer: {\n      zIndex: 1,\n      transition: \"transform .\".concat(TRANSITION_DURATION, \"s linear\")\n    },\n\n    /* Styles applied to the bar2 element if `variant=\"indeterminate or query\"`. */\n    bar2Indeterminate: {\n      width: 'auto',\n      animation: '$indeterminate2 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite'\n    },\n\n    /* Styles applied to the bar2 element if `variant=\"buffer\"`. */\n    bar2Buffer: {\n      transition: \"transform .\".concat(TRANSITION_DURATION, \"s linear\")\n    },\n    // Legends:\n    // || represents the viewport\n    // -  represents a light background\n    // x  represents a dark background\n    '@keyframes indeterminate1': {\n      //  |-----|---x-||-----||-----|\n      '0%': {\n        left: '-35%',\n        right: '100%'\n      },\n      //  |-----|-----||-----||xxxx-|\n      '60%': {\n        left: '100%',\n        right: '-90%'\n      },\n      '100%': {\n        left: '100%',\n        right: '-90%'\n      }\n    },\n    '@keyframes indeterminate2': {\n      //  |xxxxx|xxxxx||-----||-----|\n      '0%': {\n        left: '-200%',\n        right: '100%'\n      },\n      //  |-----|-----||-----||-x----|\n      '60%': {\n        left: '107%',\n        right: '-8%'\n      },\n      '100%': {\n        left: '107%',\n        right: '-8%'\n      }\n    },\n    '@keyframes buffer': {\n      '0%': {\n        opacity: 1,\n        backgroundPosition: '0 -23px'\n      },\n      '50%': {\n        opacity: 0,\n        backgroundPosition: '0 -23px'\n      },\n      '100%': {\n        opacity: 1,\n        backgroundPosition: '-200px -23px'\n      }\n    }\n  };\n};\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nvar LinearProgress = /*#__PURE__*/React.forwardRef(function LinearProgress(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      value = props.value,\n      valueBuffer = props.valueBuffer,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'indeterminate' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"value\", \"valueBuffer\", \"variant\"]);\n\n  var theme = useTheme();\n  var rootProps = {};\n  var inlineStyles = {\n    bar1: {},\n    bar2: {}\n  };\n\n  if (variant === 'determinate' || variant === 'buffer') {\n    if (value !== undefined) {\n      rootProps['aria-valuenow'] = Math.round(value);\n      rootProps['aria-valuemin'] = 0;\n      rootProps['aria-valuemax'] = 100;\n      var transform = value - 100;\n\n      if (theme.direction === 'rtl') {\n        transform = -transform;\n      }\n\n      inlineStyles.bar1.transform = \"translateX(\".concat(transform, \"%)\");\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('Material-UI: You need to provide a value prop ' + 'when using the determinate or buffer variant of LinearProgress .');\n    }\n  }\n\n  if (variant === 'buffer') {\n    if (valueBuffer !== undefined) {\n      var _transform = (valueBuffer || 0) - 100;\n\n      if (theme.direction === 'rtl') {\n        _transform = -_transform;\n      }\n\n      inlineStyles.bar2.transform = \"translateX(\".concat(_transform, \"%)\");\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('Material-UI: You need to provide a valueBuffer prop ' + 'when using the buffer variant of LinearProgress.');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[\"color\".concat(capitalize(color))], className, {\n      'determinate': classes.determinate,\n      'indeterminate': classes.indeterminate,\n      'buffer': classes.buffer,\n      'query': classes.query\n    }[variant]),\n    role: \"progressbar\"\n  }, rootProps, {\n    ref: ref\n  }, other), variant === 'buffer' ? /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.dashed, classes[\"dashedColor\".concat(capitalize(color))])\n  }) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.bar, classes[\"barColor\".concat(capitalize(color))], (variant === 'indeterminate' || variant === 'query') && classes.bar1Indeterminate, {\n      'determinate': classes.bar1Determinate,\n      'buffer': classes.bar1Buffer\n    }[variant]),\n    style: inlineStyles.bar1\n  }), variant === 'determinate' ? null : /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.bar, (variant === 'indeterminate' || variant === 'query') && classes.bar2Indeterminate, variant === 'buffer' ? [classes[\"color\".concat(capitalize(color))], classes.bar2Buffer] : classes[\"barColor\".concat(capitalize(color))]),\n    style: inlineStyles.bar2\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? LinearProgress.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The value for the buffer variant.\n   * Value between 0 and 100.\n   */\n  valueBuffer: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate or query when there is no progress value.\n   */\n  variant: PropTypes.oneOf(['buffer', 'determinate', 'indeterminate', 'query'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLinearProgress'\n})(LinearProgress);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport clsx from 'clsx';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      fontWeight: theme.typography.fontWeightMedium,\n      marginTop: -2\n    }\n  };\n};\nvar AlertTitle = /*#__PURE__*/React.forwardRef(function AlertTitle(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    gutterBottom: true,\n    component: \"div\",\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? AlertTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAlertTitle'\n})(AlertTitle);","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z\"\n}), 'SuccessOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\"\n}), 'ReportProblemOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z\"\n}), 'InfoOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles, lighten, darken } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport SuccessOutlinedIcon from '../internal/svg-icons/SuccessOutlined';\nimport ReportProblemOutlinedIcon from '../internal/svg-icons/ReportProblemOutlined';\nimport ErrorOutlineIcon from '../internal/svg-icons/ErrorOutline';\nimport InfoOutlinedIcon from '../internal/svg-icons/InfoOutlined';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  var getColor = theme.palette.type === 'light' ? darken : lighten;\n  var getBackgroundColor = theme.palette.type === 'light' ? lighten : darken;\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, {\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: 'transparent',\n      display: 'flex',\n      padding: '6px 16px'\n    }),\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"success\"`. */\n    standardSuccess: {\n      color: getColor(theme.palette.success.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.success.main, 0.9),\n      '& $icon': {\n        color: theme.palette.success.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"info\"`. */\n    standardInfo: {\n      color: getColor(theme.palette.info.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.info.main, 0.9),\n      '& $icon': {\n        color: theme.palette.info.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"warning\"`. */\n    standardWarning: {\n      color: getColor(theme.palette.warning.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.warning.main, 0.9),\n      '& $icon': {\n        color: theme.palette.warning.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"error\"`. */\n    standardError: {\n      color: getColor(theme.palette.error.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.error.main, 0.9),\n      '& $icon': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"success\"`. */\n    outlinedSuccess: {\n      color: getColor(theme.palette.success.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.success.main),\n      '& $icon': {\n        color: theme.palette.success.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"info\"`. */\n    outlinedInfo: {\n      color: getColor(theme.palette.info.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.info.main),\n      '& $icon': {\n        color: theme.palette.info.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"warning\"`. */\n    outlinedWarning: {\n      color: getColor(theme.palette.warning.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.warning.main),\n      '& $icon': {\n        color: theme.palette.warning.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"error\"`. */\n    outlinedError: {\n      color: getColor(theme.palette.error.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.error.main),\n      '& $icon': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"success\"`. */\n    filledSuccess: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.success.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"info\"`. */\n    filledInfo: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.info.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"warning\"`. */\n    filledWarning: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.warning.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"error\"`. */\n    filledError: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.error.main\n    },\n\n    /* Styles applied to the icon wrapper element. */\n    icon: {\n      marginRight: 12,\n      padding: '7px 0',\n      display: 'flex',\n      fontSize: 22,\n      opacity: 0.9\n    },\n\n    /* Styles applied to the message wrapper element. */\n    message: {\n      padding: '8px 0'\n    },\n\n    /* Styles applied to the action wrapper element if `action` is provided. */\n    action: {\n      display: 'flex',\n      alignItems: 'center',\n      marginLeft: 'auto',\n      paddingLeft: 16,\n      marginRight: -8\n    }\n  };\n};\nvar defaultIconMapping = {\n  success: /*#__PURE__*/React.createElement(SuccessOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  warning: /*#__PURE__*/React.createElement(ReportProblemOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  error: /*#__PURE__*/React.createElement(ErrorOutlineIcon, {\n    fontSize: \"inherit\"\n  }),\n  info: /*#__PURE__*/React.createElement(InfoOutlinedIcon, {\n    fontSize: \"inherit\"\n  })\n};\n\nvar _ref = /*#__PURE__*/React.createElement(CloseIcon, {\n  fontSize: \"small\"\n});\n\nvar Alert = /*#__PURE__*/React.forwardRef(function Alert(props, ref) {\n  var action = props.action,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$closeText = props.closeText,\n      closeText = _props$closeText === void 0 ? 'Close' : _props$closeText,\n      color = props.color,\n      icon = props.icon,\n      _props$iconMapping = props.iconMapping,\n      iconMapping = _props$iconMapping === void 0 ? defaultIconMapping : _props$iconMapping,\n      onClose = props.onClose,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'alert' : _props$role,\n      _props$severity = props.severity,\n      severity = _props$severity === void 0 ? 'success' : _props$severity,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"action\", \"children\", \"classes\", \"className\", \"closeText\", \"color\", \"icon\", \"iconMapping\", \"onClose\", \"role\", \"severity\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    role: role,\n    square: true,\n    elevation: 0,\n    className: clsx(classes.root, classes[\"\".concat(variant).concat(capitalize(color || severity))], className),\n    ref: ref\n  }, other), icon !== false ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.icon\n  }, icon || iconMapping[severity] || defaultIconMapping[severity]) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.message\n  }, children), action != null ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action) : null, action == null && onClose ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    \"aria-label\": closeText,\n    title: closeText,\n    color: \"inherit\",\n    onClick: onClose\n  }, _ref)) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? Alert.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the alert.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Override the default label for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * The main color for the alert. Unless provided, the value is taken from the `severity` prop.\n   */\n  color: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\n   * Override the icon displayed before the children.\n   * Unless provided, the icon is mapped to the value of the `severity` prop.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The component maps the `severity` prop to a range of different icons,\n   * for instance success to `<SuccessOutlined>`.\n   * If you wish to change this mapping, you can provide your own.\n   * Alternatively, you can use the `icon` prop to override the icon displayed.\n   */\n  iconMapping: PropTypes.shape({\n    error: PropTypes.node,\n    info: PropTypes.node,\n    success: PropTypes.node,\n    warning: PropTypes.node\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * The ARIA role attribute of the element.\n   */\n  role: PropTypes.string,\n\n  /**\n   * The severity of the alert. This defines the color and icon used.\n   */\n  severity: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAlert'\n})(Alert);","/* eslint-disable */\n/*\n * Copyright (c) 2022, WSO2 Inc. (http://www.wso2.com). All Rights Reserved.\n *\n * This software is the property of WSO2 Inc. and its suppliers, if any.\n * Dissemination of any information or reproduction of any material contained\n * herein is strictly forbidden, unless permitted by WSO2 in accordance with\n * the WSO2 Commercial License available at http://wso2.com/licenses.\n * For specific language governing the permissions and limitations under\n * this license, please see the license as well as any agreement you’ve\n * entered into with WSO2 governing the purchase of this software and any\n * associated services.\n */\n\nimport React from 'react';\nimport API from 'AppData/api.js';\nimport {\n    Spectral,\n    ISpectralDiagnostic,\n} from '@stoplight/spectral-core';\nimport *  as spectralFunc from \"@stoplight/spectral-functions\";\nimport { oas } from '@stoplight/spectral-rulesets';\nimport { green, orange } from '@material-ui/core/colors';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { FormattedMessage } from 'react-intl';\n\n/** @type DiagnosticSeverity \n * \n * \nSomething not allowed by the rules of a language or other means.\n    Error = 0,\nSomething suspicious but allowed.\n    Warning = 1,\nSomething to inform about but not a problem.\n    Information = 2,\nSomething to hint to a better way of doing it, like proposing a refactoring.\n    Hint = 3\n*/\n\nconst spectralFunctions: { [key: string]: any} = {\n    \"alphabetical\": spectralFunc.alphabetical,\n    \"casing\": spectralFunc.casing,\n    \"defined\": spectralFunc.defined,\n    \"enumeration\": spectralFunc.enumeration,\n    \"falsy\": spectralFunc.falsy,\n    \"length\": spectralFunc.length,\n    \"pattern\":spectralFunc.pattern,\n    \"truthy\": spectralFunc.truthy,\n    \"undefined\": spectralFunc.undefined,\n    \"unreferencedReusableObject\": spectralFunc.unreferencedReusableObject,\n    \"xor\": spectralFunc.xor,\n}\n\nexport const spectralSeverityMap: { [key: number]: JSX.Element } = {\n    0: <ErrorIcon color=\"error\" />,\n    1: <WarningIcon style={{ color: orange[500] }} />,\n    2: <InfoIcon color=\"primary\" />,\n    3: <HelpOutlineIcon style={{ color: green[500] }} />,\n};\n\nexport const spectralSeverityNames: { [key: number]: string } = {\n    0: \"Errors\",\n    1: \"Warnings\",\n    2: \"Info\",\n    3: \"Hints\"\n};\n\nexport async function getLinterResultsFromContent(swagger: string|undefined) {\n    let validationResults: ISpectralDiagnostic[] = [];\n    \n    if (swagger) {\n        // Validate againt default ruleset by Spectral\n        let defaultRuleSet = { extends: [oas], rules: {} };\n        const linter = new Spectral();\n        linter.setRuleset(defaultRuleSet);\n        \n        try {\n            \n            await linter.run(swagger).then((results)=> {\n                if (results) {\n                    validationResults = validationResults.concat(results);\n                }\n            });\n        } catch (err) {\n            console.error(\"OpenAPI linter default ruleset validation failed\", err);\n            Alert.error(\n            <FormattedMessage\n                id='Apis.Details.APIDefinition.Linting.Linting.default.ruleset.validation.failed'\n                defaultMessage='OpenAPI linter default ruleset validation failed'\n            />);\n        }\n\n\n        // Validate againt custom ruleset defined in tenant config\n        let customRuleset:JSON = await API.getLinterCustomRules().then((LinterCustomRuleset: JSON) => {\n            return LinterCustomRuleset;\n        }).catch((error: any) => {\n            console.log(\"Error retrieving custom linter rules\", error);\n            Alert.error(\n            <FormattedMessage\n                id='Apis.Details.APIDefinition.Linting.Linting.error.retrieving.custom.rules'\n                defaultMessage='Error retrieving custom linter rules'\n            />);\n        });\n        if (customRuleset) {\n            //Parse JSON to JS object to support spectral\n            const parsedCustomRuleset = JSON.parse(\n                JSON.stringify(customRuleset), \n                function (key, value) {\n                    if (key === \"function\") {\n                        return spectralFunctions[value];\n                    } else {\n                        return value;\n                    }\n                }\n            );\n\n            linter.setRuleset(parsedCustomRuleset);\n            \n            try {\n                await linter.run(swagger).then((results)=> {\n                    if (results) {\n                        validationResults = validationResults.concat(results);\n                    }\n                });\n            } catch (error) {\n                if (error instanceof Error) {\n                    console.error(\"OpenAPI linter custom ruleset validation failed\\n\", error, error.stack);\n                }\n                Alert.error(\n                    <FormattedMessage\n                        id='Apis.Details.APIDefinition.Linting.Linting.custom.ruleset.validation.failed'\n                        defaultMessage='OpenAPI linter custom ruleset validation failed'\n                    />);\n            }\n        }\n\n        //Sort linter results order based of severity\n        validationResults = validationResults.sort( function compare(a, b) {\n            if (a.severity < b.severity){\n              return -1;\n            }\n            if (a.severity > b.severity){\n              return 1;\n            }\n            return 0;\n        });\n    }\n    return validationResults;\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDropzone } from 'react-dropzone';\nimport { useTheme } from '@material-ui/core/styles';\n\n/**\n *\n * Convert raw byte values to human readable format\n * @param {Number} bytes number of bytes\n * @param {boolean} [si=false]\n * @returns {String} Human readable string format\n */\nexport function humanFileSize(bytesParam, si = false) {\n    let bytes = bytesParam; // To prevent `no-param-reassign` eslint rule violation\n    const thresh = si ? 1000 : 1024;\n    if (Math.abs(bytes) < thresh) {\n        return bytes + ' B';\n    }\n    const units = si\n        ? ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n        : ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\n    let u = -1;\n    do {\n        bytes /= thresh;\n        ++u;\n    } while (Math.abs(bytes) >= thresh && u < units.length - 1);\n    return bytes.toFixed(1) + ' ' + units[u];\n}\n\nconst baseStyle = {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: '100px 20px',\n    borderWidth: 2,\n    borderRadius: 2,\n    borderColor: '#eeeeee',\n    borderStyle: 'dashed',\n    backgroundColor: '#fafafa',\n    color: '#bdbdbd',\n    outline: 'none',\n    transition: 'border .24s ease-in-out',\n};\n\nconst activeStyle = {\n    borderColor: '#2196f3',\n};\n\nconst acceptStyle = {\n    borderColor: '#00e676',\n};\n\nconst rejectStyle = {\n    borderColor: '#ff1744',\n};\n\n/**\n *\n * Provide a class friendly Dropzone wrapper using hooks.\n * @export\n * @returns\n */\nexport default function DropZoneLocal(props) {\n    const {\n        message, onDrop, error, children, accept, ariaLabel,\n    } = props;\n    const dropZoneObject = useDropzone({ onDrop });\n    const {\n        getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject,\n    } = dropZoneObject;\n\n    const style = useMemo(\n        () => ({\n            ...baseStyle,\n            ...(isDragActive ? activeStyle : {}),\n            ...(isDragAccept ? acceptStyle : {}),\n            ...(isDragReject ? rejectStyle : {}),\n        }),\n        [isDragActive, isDragReject, error],\n    );\n    const theme = useTheme();\n\n    const containerStyles = {\n        fontFamily: theme.typography.fontFamily,\n        textAlign: 'center',\n    };\n\n    return (\n        <section className='container' style={containerStyles}>\n            <div {...getRootProps({ style })}>\n                <input\n                    // In accordance with https://www.w3.org/TR/WCAG20-TECHS/ARIA14.html\n                    aria-label={ariaLabel}\n                    {...getInputProps()}\n                    multiple={false}\n                    accept={accept}\n                />\n                {children || message}\n            </div>\n        </section>\n    );\n}\nDropZoneLocal.defaultProps = {\n    message: \"Drag 'n' drop some files here, or click to select files\",\n    onDrop: () => {},\n    showFilesList: true,\n    children: null,\n    error: false,\n    accept: '*',\n};\nDropZoneLocal.propTypes = {\n    message: PropTypes.string,\n    onDrop: PropTypes.func,\n    accept: PropTypes.string,\n    showFilesList: PropTypes.bool,\n    children: PropTypes.oneOfType([PropTypes.element, PropTypes.arrayOf(PropTypes.shape({}))]),\n    error: PropTypes.oneOfType([PropTypes.bool, PropTypes.shape({})]),\n};\n"],"sourceRoot":""}