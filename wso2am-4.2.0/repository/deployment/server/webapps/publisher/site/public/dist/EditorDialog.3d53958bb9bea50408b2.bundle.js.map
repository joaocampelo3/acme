{"version":3,"sources":["webpack:///./source/src/app/components/Apis/Details/APIDefinition/swaggerUI/SwaggerUI.jsx","webpack:///./source/src/app/components/Apis/Details/APIDefinition/SwaggerEditorDrawer.jsx","webpack:///./node_modules/lodash/differenceBy.js","webpack:///./node_modules/@material-ui/icons/Cancel.js"],"names":["disableAuthorizeAndInfoPlugin","wrapComponents","info","authorizeBtn","disableTryItOutPlugin","statePlugins","spec","wrapSelectors","allowTryItOutFor","SwaggerUI","props","componentProps","url","validatorUrl","docExpansion","defaultModelsExpandDepth","plugins","propTypes","accessTokenProvider","PropTypes","func","isRequired","authorizationHeader","string","api","shape","context","styles","editorPane","width","height","overflow","editorRoot","glyphMargin","background","orange","noGlyphMargin","topMargin","paddingTop","MonacoEditor","lazy","SwaggerEditorDrawer","onContentChange","bind","editorDidMount","editor","monaco","prevProps","this","classes","linterResults","linterDifferences","differenceBy","i","length","line","range","start","deltaDecorations","Range","options","isWholeLine","glyphMarginClassName","columnIndex","getModel","getLineLastNonWhitespaceColumn","revealLinesInCenter","setPosition","column","lineNumber","focus","content","onEditContent","linterSelectedLine","handleRowClick","language","swagger","errors","setErrors","isSwaggerUI","severityMap","linterSelectedSeverity","swaggerUrl","encodeURIComponent","container","spacing","className","item","theme","value","onChange","mr","type","onClick","position","right","top","area-label","variant","component","head","id","defaultMessage","map","e","description","data-testid","alignSelf","justifySelf","flexDirection","values","spectralSeverityNames","React","Component","withStyles","baseDifference","baseFlatten","baseIteratee","baseRest","isArrayLikeObject","last","array","iteratee","undefined","module","exports","_interopRequireDefault","_interopRequireWildcard","Object","defineProperty","default","_default","createElement","d"],"mappings":"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","file":"EditorDialog.3d53958bb9bea50408b2.bundle.js","sourcesContent":["/*\n *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n *  WSO2 Inc. licenses this file to you under the Apache License,\n *  Version 2.0 (the \"License\"); you may not use this file except\n *  in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied. See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SwaggerUILib from 'swagger-ui-react';\nimport 'swagger-ui-react/swagger-ui.css';\n\n\nconst disableAuthorizeAndInfoPlugin = function () {\n    return {\n        wrapComponents: {\n            info: () => () => null,\n            authorizeBtn: () => () => null,\n        },\n    };\n};\nconst disableTryItOutPlugin = function () {\n    return {\n        statePlugins: {\n            spec: {\n                wrapSelectors: {\n                    allowTryItOutFor: () => () => false,\n                },\n            },\n        },\n    };\n};\n\n/**\n *\n * @class SwaggerUI\n * @extends {Component}\n */\nconst SwaggerUI = (props) => {\n    const {\n        spec,\n        url,\n    } = props;\n\n    const componentProps = {\n        spec,\n        url,\n        validatorUrl: null,\n        docExpansion: 'list',\n        defaultModelsExpandDepth: -1,\n        plugins: [disableAuthorizeAndInfoPlugin, disableTryItOutPlugin],\n    };\n    return <SwaggerUILib {...componentProps} />;\n};\n\nSwaggerUI.propTypes = {\n    accessTokenProvider: PropTypes.func.isRequired,\n    authorizationHeader: PropTypes.string.isRequired,\n    api: PropTypes.shape({\n        context: PropTypes.string.isRequired,\n    }).isRequired,\n    url: PropTypes.string.isRequired,\n};\nexport default SwaggerUI;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { lazy } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport { FormattedMessage } from 'react-intl';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport IconButton from '@material-ui/core/IconButton';\nimport { orange } from '@material-ui/core/colors';\nimport differenceBy from 'lodash/differenceBy'\nimport SwaggerUI from './swaggerUI/SwaggerUI';\nimport LinterUI from './LinterUI/LinterUI';\nimport { spectralSeverityNames } from \"./Linting/Linting\"\n\nconst styles = () => ({\n    editorPane: {\n        width: '50%',\n        height: '100%',\n        overflow: 'auto',\n    },\n    editorRoot: {\n        height: '100%',\n    },\n    glyphMargin: {\n        background: orange[900],\n        width: '5px !important'\n    },\n    noGlyphMargin: {\n        background: 'none',\n    },\n    topMargin:{\n        paddingTop: '10px',   \n    }\n});\n\nconst MonacoEditor = lazy(() => import('react-monaco-editor' /* webpackChunkName: \"APIDefMonacoEditor\" */));\n\n/**\n * This component hosts the Swagger Editor component.\n * Known Issue: The cursor jumps back to the start of the first line when updating the swagger-ui based on the\n * modification done via the editor.\n * https://github.com/wso2/product-apim/issues/5071\n * */\nclass SwaggerEditorDrawer extends React.Component {\n    /**\n     * @inheritDoc\n     */\n    constructor(props) {\n        super(props);\n        this.onContentChange = this.onContentChange.bind(this);\n        this.editorDidMount = this.editorDidMount.bind(this);\n        this.editor = null;\n        this.monaco = null;\n    }\n\n    /**\n     * Method to handle the change event of the editor.\n     * @param {string} content : The edited content.\n     * */\n    componentDidUpdate(prevProps) {\n        const { classes, linterResults } = this.props;\n        const linterDifferences = differenceBy(prevProps.linterResults, linterResults, 'range.start.line');\n\n        for (let i=0; i < linterDifferences.length; i++) {\n            const {line} = linterDifferences[i].range.start;\n            this.editor.deltaDecorations(\n                [\n                    {\n                        range: new this.monaco.Range(line, 1, line, 1),\n                        options: {\n                            isWholeLine: false,\n                            glyphMarginClassName: classes.glyphMargin,\n                        }\n                    }\n                ],\n                [\n                    {\n                        range: new this.monaco.Range(line, 1, line, 1),\n                        options: {\n                            isWholeLine: false,\n                            glyphMarginClassName: classes.noGlyphMargin,\n                        }\n                    }\n                ]\n            );\n        }\n    }\n\n    handleRowClick(line) {\n        const { classes } = this.props;\n        const columnIndex = this.editor.getModel().getLineLastNonWhitespaceColumn(line);\n        this.editor.revealLinesInCenter(line, line, 0);\n        this.editor.setPosition({column: columnIndex, lineNumber: line});\n        this.editor.focus();\n\n        this.editor.deltaDecorations(\n            [],\n            [\n                {\n                    range: new this.monaco.Range(line, 1, line, 1),\n                    options: {\n                        isWholeLine: false,\n                        glyphMarginClassName: classes.glyphMargin,\n                    }\n                }\n            ]\n        );\n    }\n\n    onContentChange(content) {\n        const {onEditContent} = this.props;\n        onEditContent(content);\n    }\n\n    editorDidMount(editor, monaco) {\n        const { linterSelectedLine } = this.props;\n        this.editor = editor;\n        this.monaco = monaco;\n        if (linterSelectedLine) {\n            this.handleRowClick(linterSelectedLine);\n        }\n    }\n\n    /**\n     * @inheritDoc\n     */\n    render() {\n        const { classes, language, swagger, errors, setErrors, isSwaggerUI, linterResults, severityMap, \n            linterSelectedSeverity } = this.props;\n        const swaggerUrl = 'data:text/' + language + ',' + encodeURIComponent(swagger);\n        return (\n            <>\n                <Grid container spacing={2} className={classes.editorRoot}>\n                    <Grid item className={classes.editorPane}>\n                        <MonacoEditor\n                            language={language}\n                            width='100%'\n                            height='calc(100vh - 51px)'\n                            theme='vs-dark'\n                            value={swagger}\n                            onChange={this.onContentChange}\n                            options={{ glyphMargin: true }}\n                            editorDidMount={this.editorDidMount}\n                        />\n                    </Grid>\n                    <Grid item className={classes.editorPane}>\n                        {(errors && errors.length > 0) && (\n                            <Box mr={2}>\n                                <InlineMessage type='warning' height='100%'>\n                                    <Box>\n                                        <Box onClick={setErrors} position='absolute' right='0' top='0'>\n                                            <IconButton area-label='close'>\n                                                <CancelIcon />\n                                            </IconButton>\n                                        </Box>\n                                        <Typography\n                                            variant='h5'\n                                            component='h3'\n                                            className={classes.head}\n                                        >\n                                            <FormattedMessage\n                                                id='Apis.Details.APIDefinition.SwaggerEditorDrawer.title'\n                                                defaultMessage='Failed to Validate OpenAPI File'\n                                            />\n                                        </Typography>\n                                        {errors.map((e) => (\n                                            <Typography component='p' className={classes.content}>\n                                                {e.description}\n                                            </Typography>\n                                        ))}\n                                    </Box>\n                                </InlineMessage>\n                            </Box>\n                        )}\n                        { isSwaggerUI && (\n                            <SwaggerUI url={swaggerUrl}/>\n                        )}\n                        { !isSwaggerUI && linterResults.length > 0 && (\n                            <div data-testid='testid-linter-ui'>\n                                <LinterUI\n                                    linterResults={linterResults}\n                                    severityMap={severityMap}\n                                    handleRowClick={(line) => {this.handleRowClick(line)}}\n                                />\n                            </div>\n                        )}\n                        { !isSwaggerUI && linterResults.length === 0 && (\n                            <div className={classes.topMargin}>\n                                <Box alignSelf='center' justifySelf='center' flexDirection='column'>\n                                    <Typography variant='h4'>\n                                        <FormattedMessage\n                                            id={'Apis.Details.APIDefinition.SwaggerEditorDrawer.linter.good'\n                                                + 'update.content'}\n                                            defaultMessage='No linting issues found in the definition'\n                                        />\n                                    </Typography>\n                                    <Typography variant='h6'>\n                                        <FormattedMessage\n                                            id={'Apis.Details.APIDefinition.SwaggerEditorDrawer.linter.no.results'\n                                                + 'update.content'}\n                                            defaultMessage='No Linter Results{type} found'\n                                            values={{type: linterSelectedSeverity?\n                                                ` (${spectralSeverityNames[linterSelectedSeverity]})`:''}}\n                                        />\n                                    </Typography>\n                                </Box>\n                            </div>\n                        )}\n                    </Grid>\n                </Grid>\n            </>\n        );\n    }\n}\n\nSwaggerEditorDrawer.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    language: PropTypes.string.isRequired,\n    swagger: PropTypes.string.isRequired,\n    onEditContent: PropTypes.func.isRequired,\n    errors: PropTypes.shape([]).isRequired,\n    setErrors: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(SwaggerEditorDrawer);\n","var baseDifference = require('./_baseDifference'),\n    baseFlatten = require('./_baseFlatten'),\n    baseIteratee = require('./_baseIteratee'),\n    baseRest = require('./_baseRest'),\n    isArrayLikeObject = require('./isArrayLikeObject'),\n    last = require('./last');\n\n/**\n * This method is like `_.difference` except that it accepts `iteratee` which\n * is invoked for each element of `array` and `values` to generate the criterion\n * by which they're compared. The order and references of result values are\n * determined by the first array. The iteratee is invoked with one argument:\n * (value).\n *\n * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n * // => [1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n * // => [{ 'x': 2 }]\n */\nvar differenceBy = baseRest(function(array, values) {\n  var iteratee = last(values);\n  if (isArrayLikeObject(iteratee)) {\n    iteratee = undefined;\n  }\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), baseIteratee(iteratee, 2))\n    : [];\n});\n\nmodule.exports = differenceBy;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');\n\nexports.default = _default;"],"sourceRoot":""}